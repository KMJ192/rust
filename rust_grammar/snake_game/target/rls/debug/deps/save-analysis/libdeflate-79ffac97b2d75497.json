{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6","program":"C:\\Users\\MyeongJun\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--edition=2018","--crate-name","deflate","C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=79ffac97b2d75497","-C","extra-filename=-79ffac97b2d75497","--out-dir","d:\\develop\\rust\\rust_grammar\\snake_game\\target\\rls\\debug\\deps","-L","dependency=d:\\develop\\rust\\rust_grammar\\snake_game\\target\\rls\\debug\\deps","--extern","adler32=d:\\develop\\rust\\rust_grammar\\snake_game\\target\\rls\\debug\\deps\\libadler32-5079fe1ad67e38cd.rmeta","--extern","byteorder=d:\\develop\\rust\\rust_grammar\\snake_game\\target\\rls\\debug\\deps\\libbyteorder-11cef1219be0d381.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\MyeongJun\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\develop\\rust\\rust_grammar\\snake_game\\target\\rls\\debug\\deps\\libdeflate-79ffac97b2d75497.rmeta"},"prelude":{"crate_id":{"name":"deflate","disambiguator":[8772008674514980805,13835895917328064896]},"crate_root":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src","external_crates":[{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12580338268255904863,12487381105248359217]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[14625317234859803032,6791610349458793748]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13367216100517456726,18240828775391475830]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5927333369983577022,15909913472650230380]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4800340595136090738,11980400279241392758]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16293423844334339663,11755502083335674850]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3461810660782397055,13833665689054202598]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12998339428753072936,5307867808309457385]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3374893436585051705,15533137816714572843]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3128393747248474415,2329478791457811584]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[6526974580395412454,5976980321596639697]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8056933235965822994,12193290402514539467]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16500325717628480317,8800586121391060646]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","num":14,"id":{"name":"adler32","disambiguator":[4908643681739081089,15933064056158536806]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","num":15,"id":{"name":"byteorder","disambiguator":[571040840798828509,11112181538235283130]}}],"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","byte_start":0,"byte_end":14962,"line_start":1,"line_end":492,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","byte_start":3031,"byte_end":3042,"line_start":102,"line_end":102,"column_start":31,"column_end":42},"alias_span":null,"name":"Compression","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":728},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","byte_start":3044,"byte_end":3062,"line_start":102,"line_end":102,"column_start":44,"column_end":62},"alias_span":null,"name":"CompressionOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","byte_start":3064,"byte_end":3078,"line_start":102,"line_end":102,"column_start":64,"column_end":78},"alias_span":null,"name":"SpecialOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":801},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","byte_start":3095,"byte_end":3107,"line_start":103,"line_end":103,"column_start":15,"column_end":27},"alias_span":null,"name":"MatchingType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","byte_start":3315,"byte_end":3329,"line_start":111,"line_end":111,"column_start":29,"column_end":43},"alias_span":null,"name":"DeflateEncoder","value":"","parent":{"krate":0,"index":644}},{"kind":"Use","ref_id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","byte_start":3331,"byte_end":3342,"line_start":111,"line_end":111,"column_start":45,"column_end":56},"alias_span":null,"name":"ZlibEncoder","value":"","parent":{"krate":0,"index":644}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","byte_start":0,"byte_end":14962,"line_start":1,"line_end":492,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":7},{"krate":0,"index":29},{"krate":0,"index":66},{"krate":0,"index":97},{"krate":0,"index":120},{"krate":0,"index":142},{"krate":0,"index":190},{"krate":0,"index":220},{"krate":0,"index":284},{"krate":0,"index":355},{"krate":0,"index":370},{"krate":0,"index":402},{"krate":0,"index":464},{"krate":0,"index":475},{"krate":0,"index":484},{"krate":0,"index":517},{"krate":0,"index":531},{"krate":0,"index":545},{"krate":0,"index":605},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":648},{"krate":0,"index":651},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":657}],"decl_id":null,"docs":" An implementation an encoder using [DEFLATE](http://www.gzip.org/zlib/rfc-deflate.html)\n compression algorithm in pure Rust.","sig":null,"attributes":[{"value":"forbid(unsafe_code)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","byte_start":2020,"byte_end":2043,"line_start":50,"line_end":50,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\compression_options.rs","byte_start":49761,"byte_end":49765,"line_start":33,"line_end":33,"column_start":5,"column_end":9},"name":"Fast","qualname":"::compression_options::Compression::Fast","value":"Compression::Fast","parent":{"krate":0,"index":682},"children":[],"decl_id":null,"docs":" Fast minimal compression (`CompressionOptions::fast()`).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\compression_options.rs","byte_start":49828,"byte_end":49835,"line_start":35,"line_end":35,"column_start":5,"column_end":12},"name":"Default","qualname":"::compression_options::Compression::Default","value":"Compression::Default","parent":{"krate":0,"index":682},"children":[],"decl_id":null,"docs":" Default level (`CompressionOptions::default()`).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":687},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\compression_options.rs","byte_start":50089,"byte_end":50093,"line_start":41,"line_end":41,"column_start":5,"column_end":9},"name":"Best","qualname":"::compression_options::Compression::Best","value":"Compression::Best","parent":{"krate":0,"index":682},"children":[],"decl_id":null,"docs":" Higher compression level (`CompressionOptions::high()`).","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\compression_options.rs","byte_start":49678,"byte_end":49689,"line_start":31,"line_end":31,"column_start":10,"column_end":21},"name":"Compression","qualname":"::compression_options::Compression","value":"Compression::{Fast, Default, Best}","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":685},{"krate":0,"index":687}],"decl_id":null,"docs":" An enum describing the level of compression to be used by the encoder","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":708},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\compression_options.rs","byte_start":50371,"byte_end":50377,"line_start":54,"line_end":54,"column_start":5,"column_end":11},"name":"Normal","qualname":"::compression_options::SpecialOptions::Normal","value":"SpecialOptions::Normal","parent":{"krate":0,"index":707},"children":[],"decl_id":null,"docs":" Compress normally.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":710},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\compression_options.rs","byte_start":50437,"byte_end":50448,"line_start":56,"line_end":56,"column_start":5,"column_end":16},"name":"_ForceFixed","qualname":"::compression_options::SpecialOptions::_ForceFixed","value":"SpecialOptions::_ForceFixed","parent":{"krate":0,"index":707},"children":[],"decl_id":null,"docs":" Force fixed Huffman tables. (Unimplemented!).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":712},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\compression_options.rs","byte_start":50521,"byte_end":50533,"line_start":58,"line_end":58,"column_start":5,"column_end":17},"name":"_ForceStored","qualname":"::compression_options::SpecialOptions::_ForceStored","value":"SpecialOptions::_ForceStored","parent":{"krate":0,"index":707},"children":[],"decl_id":null,"docs":" Force stored (uncompressed) blocks only. (Unimplemented!).\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\compression_options.rs","byte_start":50323,"byte_end":50337,"line_start":52,"line_end":52,"column_start":10,"column_end":24},"name":"SpecialOptions","qualname":"::compression_options::SpecialOptions","value":"SpecialOptions::{Normal, _ForceFixed, _ForceStored}","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":710},{"krate":0,"index":712}],"decl_id":null,"docs":" Enum allowing some special options (not implemented yet)!\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":728},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\compression_options.rs","byte_start":51099,"byte_end":51117,"line_start":78,"line_end":78,"column_start":12,"column_end":30},"name":"CompressionOptions","qualname":"::compression_options::CompressionOptions","value":"CompressionOptions { max_hash_checks, lazy_if_less_than, matching_type, special }","parent":null,"children":[{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732}],"decl_id":null,"docs":" A struct describing the options for a compressor or compression function.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":729},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\compression_options.rs","byte_start":51555,"byte_end":51570,"line_start":87,"line_end":87,"column_start":9,"column_end":24},"name":"max_hash_checks","qualname":"::compression_options::CompressionOptions::max_hash_checks","value":"u16","parent":{"krate":0,"index":728},"children":[],"decl_id":null,"docs":" The maximum number of checks to make in the hash table for matches.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\compression_options.rs","byte_start":52176,"byte_end":52193,"line_start":101,"line_end":101,"column_start":9,"column_end":26},"name":"lazy_if_less_than","qualname":"::compression_options::CompressionOptions::lazy_if_less_than","value":"u16","parent":{"krate":0,"index":728},"children":[],"decl_id":null,"docs":" Only lazy match if we have a length less than this value.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":731},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\compression_options.rs","byte_start":52818,"byte_end":52831,"line_start":116,"line_end":116,"column_start":9,"column_end":22},"name":"matching_type","qualname":"::compression_options::CompressionOptions::matching_type","value":"lz77::MatchingType","parent":{"krate":0,"index":728},"children":[],"decl_id":null,"docs":" Whether to use lazy or greedy matching.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":732},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\compression_options.rs","byte_start":52962,"byte_end":52969,"line_start":119,"line_end":119,"column_start":9,"column_end":16},"name":"special","qualname":"::compression_options::CompressionOptions::special","value":"compression_options::SpecialOptions","parent":{"krate":0,"index":728},"children":[],"decl_id":null,"docs":" Force fixed/stored blocks (Not implemented yet).\n * Default value: `SpecialOptions::Normal`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\compression_options.rs","byte_start":53266,"byte_end":53270,"line_start":126,"line_end":126,"column_start":12,"column_end":16},"name":"high","qualname":"<CompressionOptions>::high","value":"fn () -> CompressionOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns compression settings roughly corresponding to the `HIGH(9)` setting in miniz.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\compression_options.rs","byte_start":53904,"byte_end":53908,"line_start":141,"line_end":141,"column_start":12,"column_end":16},"name":"fast","qualname":"<CompressionOptions>::fast","value":"fn () -> CompressionOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns  a fast set of compression settings","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\compression_options.rs","byte_start":54469,"byte_end":54481,"line_start":155,"line_end":155,"column_start":12,"column_end":24},"name":"huffman_only","qualname":"<CompressionOptions>::huffman_only","value":"fn () -> CompressionOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns a set of compression settings that makes the compressor only compress using\n Huffman coding. (Ignoring any length/distance matching)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\compression_options.rs","byte_start":55159,"byte_end":55162,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"rle","qualname":"<CompressionOptions>::rle","value":"fn () -> CompressionOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns a set of compression settings that makes the compressor compress only using\n run-length encoding (i.e only looking for matches one byte back).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":802},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lz77.rs","byte_start":132114,"byte_end":132120,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Greedy","qualname":"::lz77::MatchingType::Greedy","value":"MatchingType::Greedy","parent":{"krate":0,"index":801},"children":[],"decl_id":null,"docs":" Use greedy matching: the matching algorithm simply uses a match right away\n if found.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":804},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lz77.rs","byte_start":132438,"byte_end":132442,"line_start":36,"line_end":36,"column_start":5,"column_end":9},"name":"Lazy","qualname":"::lz77::MatchingType::Lazy","value":"MatchingType::Lazy","parent":{"krate":0,"index":801},"children":[],"decl_id":null,"docs":" Use lazy matching: after finding a match, the next input byte is checked, to see\n if there is a better match starting at that byte.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":801},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lz77.rs","byte_start":131994,"byte_end":132006,"line_start":27,"line_end":27,"column_start":10,"column_end":22},"name":"MatchingType","qualname":"::lz77::MatchingType","value":"MatchingType::{Greedy, Lazy}","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":804}],"decl_id":null,"docs":" An enum describing whether we use lazy or greedy matching.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\writer.rs","byte_start":208442,"byte_end":208456,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"DeflateEncoder","qualname":"::writer::DeflateEncoder","value":"DeflateEncoder {  }","parent":null,"children":[{"krate":0,"index":568}],"decl_id":null,"docs":" A DEFLATE encoder/compressor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\writer.rs","byte_start":208624,"byte_end":208627,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateEncoder<W>>::new","value":"fn <O> (writer: W, options: O) -> DeflateEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder using the provided compression options.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\writer.rs","byte_start":208975,"byte_end":208981,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"finish","qualname":"<DeflateEncoder<W>>::finish","value":"fn (mut self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Encode all pending data to the contained writer, consume this `DeflateEncoder`,\n and return the contained writer if writing succeeds.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\writer.rs","byte_start":209397,"byte_end":209402,"line_start":114,"line_end":114,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateEncoder<W>>::reset","value":"fn (&mut self, w: W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the encoder (except the compression options), replacing the current writer\n with a new one, returning the old one.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\writer.rs","byte_start":211785,"byte_end":211796,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"ZlibEncoder","qualname":"::writer::ZlibEncoder","value":"ZlibEncoder {  }","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587}],"decl_id":null,"docs":" A Zlib encoder/compressor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\writer.rs","byte_start":212023,"byte_end":212026,"line_start":193,"line_end":193,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibEncoder<W>>::new","value":"fn <O> (writer: W, options: O) -> ZlibEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ZlibEncoder` using the provided compression options.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\writer.rs","byte_start":212771,"byte_end":212777,"line_start":211,"line_end":211,"column_start":12,"column_end":18},"name":"finish","qualname":"<ZlibEncoder<W>>::finish","value":"fn (mut self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Encode all pending data to the contained writer, consume this `ZlibEncoder`,\n and return the contained writer if writing succeeds.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\writer.rs","byte_start":213193,"byte_end":213198,"line_start":220,"line_end":220,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibEncoder<W>>::reset","value":"fn (&mut self, writer: W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the encoder (except the compression options), replacing the current writer\n with a new one, returning the old one.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\writer.rs","byte_start":214100,"byte_end":214108,"line_start":248,"line_end":248,"column_start":12,"column_end":20},"name":"checksum","qualname":"<ZlibEncoder<W>>::checksum","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the adler32 checksum of the currently consumed data.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","byte_start":3206,"byte_end":3211,"line_start":108,"line_end":108,"column_start":9,"column_end":14},"name":"write","qualname":"::write","value":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":645}],"decl_id":null,"docs":" Encoders implementing a `Write` interface.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":651},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","byte_start":4264,"byte_end":4282,"line_start":141,"line_end":141,"column_start":8,"column_end":26},"name":"deflate_bytes_conf","qualname":"::deflate_bytes_conf","value":"fn <O> (input: &[u8], options: O) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the given slice of bytes with DEFLATE compression.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":653},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","byte_start":4940,"byte_end":4953,"line_start":167,"line_end":167,"column_start":8,"column_end":21},"name":"deflate_bytes","qualname":"::deflate_bytes","value":"fn (input: &[u8]) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the given slice of bytes with DEFLATE compression using the default compression\n level.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":654},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","byte_start":5493,"byte_end":5516,"line_start":186,"line_end":186,"column_start":8,"column_end":31},"name":"deflate_bytes_zlib_conf","qualname":"::deflate_bytes_zlib_conf","value":"fn <O> (input: &[u8], options: O) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the given slice of bytes with DEFLATE compression, including a zlib header and trailer.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":657},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lib.rs","byte_start":6638,"byte_end":6656,"line_start":221,"line_end":221,"column_start":8,"column_end":26},"name":"deflate_bytes_zlib","qualname":"::deflate_bytes_zlib","value":"fn (input: &[u8]) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the given slice of bytes with DEFLATE compression, including a zlib header and trailer,\n using the default compression level.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\bitstream.rs","byte_start":17648,"byte_end":17657,"line_start":61,"line_end":61,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\bitstream.rs","byte_start":19119,"byte_end":19128,"line_start":109,"line_end":109,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\chained_hash_table.rs","byte_start":22306,"byte_end":22312,"line_start":16,"line_end":16,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\chained_hash_table.rs","byte_start":22471,"byte_end":22477,"line_start":26,"line_end":26,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\chained_hash_table.rs","byte_start":23997,"byte_end":24013,"line_start":80,"line_end":80,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\checksum.rs","byte_start":33432,"byte_end":33442,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\checksum.rs","byte_start":33534,"byte_end":33544,"line_start":17,"line_end":17,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\checksum.rs","byte_start":33941,"byte_end":33956,"line_start":37,"line_end":37,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\checksum.rs","byte_start":34111,"byte_end":34126,"line_start":45,"line_end":45,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\compression_options.rs","byte_start":50115,"byte_end":50126,"line_start":44,"line_end":44,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\compression_options.rs","byte_start":50555,"byte_end":50569,"line_start":61,"line_end":61,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\compression_options.rs","byte_start":53140,"byte_end":53158,"line_start":124,"line_end":124,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\compression_options.rs","byte_start":55412,"byte_end":55430,"line_start":181,"line_end":181,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\compression_options.rs","byte_start":55604,"byte_end":55622,"line_start":188,"line_end":188,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\deflate_state.rs","byte_start":56566,"byte_end":56578,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\deflate_state.rs","byte_start":57174,"byte_end":57187,"line_start":55,"line_end":55,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\deflate_state.rs","byte_start":59018,"byte_end":59030,"line_start":99,"line_end":99,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\encoder_state.rs","byte_start":61930,"byte_end":61942,"line_start":28,"line_end":28,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\huffman_table.rs","byte_start":90074,"byte_end":90085,"line_start":201,"line_end":201,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\huffman_table.rs","byte_start":90292,"byte_end":90303,"line_start":211,"line_end":211,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\huffman_table.rs","byte_start":93055,"byte_end":93067,"line_start":289,"line_end":289,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\input_buffer.rs","byte_start":101631,"byte_end":101642,"line_start":14,"line_end":14,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\length_encode.rs","byte_start":106797,"byte_end":106810,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lz77.rs","byte_start":132469,"byte_end":132481,"line_start":39,"line_end":39,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lz77.rs","byte_start":134005,"byte_end":134014,"line_start":76,"line_end":76,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lz77.rs","byte_start":136939,"byte_end":136949,"line_start":175,"line_end":175,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lzvalue.rs","byte_start":176896,"byte_end":176908,"line_start":10,"line_end":10,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lzvalue.rs","byte_start":177679,"byte_end":177686,"line_start":47,"line_end":47,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\output_writer.rs","byte_start":196077,"byte_end":196090,"line_start":36,"line_end":36,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\writer.rs","byte_start":208523,"byte_end":208537,"line_start":95,"line_end":95,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\writer.rs","byte_start":209757,"byte_end":209771,"line_start":125,"line_end":125,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\writer.rs","byte_start":210355,"byte_end":210369,"line_start":141,"line_end":141,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\writer.rs","byte_start":211920,"byte_end":211931,"line_start":191,"line_end":191,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\writer.rs","byte_start":214200,"byte_end":214211,"line_start":253,"line_end":253,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\writer.rs","byte_start":215209,"byte_end":215220,"line_start":279,"line_end":279,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\bitstream.rs","byte_start":17648,"byte_end":17657,"line_start":61,"line_end":61,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":16},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\bitstream.rs","byte_start":19119,"byte_end":19128,"line_start":109,"line_end":109,"column_start":16,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":16},"to":{"krate":1,"index":2903}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\chained_hash_table.rs","byte_start":22306,"byte_end":22312,"line_start":16,"line_end":16,"column_start":18,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":34},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\chained_hash_table.rs","byte_start":22471,"byte_end":22477,"line_start":26,"line_end":26,"column_start":6,"column_end":12},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":34},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\chained_hash_table.rs","byte_start":23997,"byte_end":24013,"line_start":80,"line_end":80,"column_start":6,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":50},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\checksum.rs","byte_start":33432,"byte_end":33442,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":72},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\checksum.rs","byte_start":33534,"byte_end":33544,"line_start":17,"line_end":17,"column_start":26,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":72},"to":{"krate":0,"index":68}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\checksum.rs","byte_start":33941,"byte_end":33956,"line_start":37,"line_end":37,"column_start":6,"column_end":21},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":84},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\checksum.rs","byte_start":34111,"byte_end":34126,"line_start":45,"line_end":45,"column_start":26,"column_end":41},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":84},"to":{"krate":0,"index":68}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\compression_options.rs","byte_start":50115,"byte_end":50126,"line_start":44,"line_end":44,"column_start":18,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":682},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\compression_options.rs","byte_start":50555,"byte_end":50569,"line_start":61,"line_end":61,"column_start":18,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":707},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\compression_options.rs","byte_start":53140,"byte_end":53158,"line_start":124,"line_end":124,"column_start":6,"column_end":24},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\compression_options.rs","byte_start":55412,"byte_end":55430,"line_start":181,"line_end":181,"column_start":18,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":728},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\compression_options.rs","byte_start":55604,"byte_end":55622,"line_start":188,"line_end":188,"column_start":28,"column_end":46},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":728},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\deflate_state.rs","byte_start":56566,"byte_end":56578,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\deflate_state.rs","byte_start":57174,"byte_end":57187,"line_start":55,"line_end":55,"column_start":6,"column_end":19},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\deflate_state.rs","byte_start":59018,"byte_end":59030,"line_start":99,"line_end":99,"column_start":16,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\encoder_state.rs","byte_start":61930,"byte_end":61942,"line_start":28,"line_end":28,"column_start":6,"column_end":18},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\huffman_table.rs","byte_start":90074,"byte_end":90085,"line_start":201,"line_end":201,"column_start":21,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":759},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\huffman_table.rs","byte_start":90292,"byte_end":90303,"line_start":211,"line_end":211,"column_start":6,"column_end":17},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\huffman_table.rs","byte_start":93055,"byte_end":93067,"line_start":289,"line_end":289,"column_start":6,"column_end":18},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\input_buffer.rs","byte_start":101631,"byte_end":101642,"line_start":14,"line_end":14,"column_start":6,"column_end":17},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\length_encode.rs","byte_start":106797,"byte_end":106810,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lz77.rs","byte_start":132469,"byte_end":132481,"line_start":39,"line_end":39,"column_start":23,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":801},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lz77.rs","byte_start":134005,"byte_end":134014,"line_start":76,"line_end":76,"column_start":6,"column_end":15},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lz77.rs","byte_start":136939,"byte_end":136949,"line_start":175,"line_end":175,"column_start":6,"column_end":16},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":832},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lzvalue.rs","byte_start":176896,"byte_end":176908,"line_start":10,"line_end":10,"column_start":6,"column_end":18},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\lzvalue.rs","byte_start":177679,"byte_end":177686,"line_start":47,"line_end":47,"column_start":6,"column_end":13},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\output_writer.rs","byte_start":196077,"byte_end":196090,"line_start":36,"line_end":36,"column_start":6,"column_end":19},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\writer.rs","byte_start":208523,"byte_end":208537,"line_start":95,"line_end":95,"column_start":16,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\writer.rs","byte_start":209757,"byte_end":209771,"line_start":125,"line_end":125,"column_start":30,"column_end":44},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":566},"to":{"krate":1,"index":2903}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\writer.rs","byte_start":210355,"byte_end":210369,"line_start":141,"line_end":141,"column_start":25,"column_end":39},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":566},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\writer.rs","byte_start":211920,"byte_end":211931,"line_start":191,"line_end":191,"column_start":16,"column_end":27},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\writer.rs","byte_start":214200,"byte_end":214211,"line_start":253,"line_end":253,"column_start":30,"column_end":41},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":583},"to":{"krate":1,"index":2903}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\deflate-0.8.6\\src\\writer.rs","byte_start":215209,"byte_end":215220,"line_start":279,"line_end":279,"column_start":25,"column_end":36},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":583},"to":{"krate":2,"index":1726}}]}