{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6","program":"C:\\Users\\MyeongJun\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--edition=2018","--crate-name","image","C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"bmp\"","--cfg","feature=\"dds\"","--cfg","feature=\"default\"","--cfg","feature=\"dxt\"","--cfg","feature=\"farbfeld\"","--cfg","feature=\"gif\"","--cfg","feature=\"hdr\"","--cfg","feature=\"ico\"","--cfg","feature=\"jpeg\"","--cfg","feature=\"jpeg_rayon\"","--cfg","feature=\"png\"","--cfg","feature=\"pnm\"","--cfg","feature=\"scoped_threadpool\"","--cfg","feature=\"tga\"","--cfg","feature=\"tiff\"","--cfg","feature=\"webp\"","-C","metadata=4b78d0d2f2534029","-C","extra-filename=-4b78d0d2f2534029","--out-dir","d:\\develop\\rust\\rust_grammar\\snake_game\\target\\rls\\debug\\deps","-L","dependency=d:\\develop\\rust\\rust_grammar\\snake_game\\target\\rls\\debug\\deps","--extern","bytemuck=d:\\develop\\rust\\rust_grammar\\snake_game\\target\\rls\\debug\\deps\\libbytemuck-8a98ce3020c9481c.rmeta","--extern","byteorder=d:\\develop\\rust\\rust_grammar\\snake_game\\target\\rls\\debug\\deps\\libbyteorder-11cef1219be0d381.rmeta","--extern","gif=d:\\develop\\rust\\rust_grammar\\snake_game\\target\\rls\\debug\\deps\\libgif-1b29e8aed6ac1b80.rmeta","--extern","jpeg=d:\\develop\\rust\\rust_grammar\\snake_game\\target\\rls\\debug\\deps\\libjpeg_decoder-38c2bd7cd8d2dff6.rmeta","--extern","num_iter=d:\\develop\\rust\\rust_grammar\\snake_game\\target\\rls\\debug\\deps\\libnum_iter-30d5d2e5e11119a3.rmeta","--extern","num_rational=d:\\develop\\rust\\rust_grammar\\snake_game\\target\\rls\\debug\\deps\\libnum_rational-da797eaf1ee474f5.rmeta","--extern","num_traits=d:\\develop\\rust\\rust_grammar\\snake_game\\target\\rls\\debug\\deps\\libnum_traits-47b6b1c25496fc7a.rmeta","--extern","png=d:\\develop\\rust\\rust_grammar\\snake_game\\target\\rls\\debug\\deps\\libpng-df5d8b33d05eecb0.rmeta","--extern","scoped_threadpool=d:\\develop\\rust\\rust_grammar\\snake_game\\target\\rls\\debug\\deps\\libscoped_threadpool-63142f327923c2a5.rmeta","--extern","tiff=d:\\develop\\rust\\rust_grammar\\snake_game\\target\\rls\\debug\\deps\\libtiff-59700793a12b32ee.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\MyeongJun\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\develop\\rust\\rust_grammar\\snake_game\\target\\rls\\debug\\deps\\libimage-4b78d0d2f2534029.rmeta"},"prelude":{"crate_id":{"name":"image","disambiguator":[8954210920112727313,15594330126985253278]},"crate_root":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src","external_crates":[{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12580338268255904863,12487381105248359217]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14625317234859803032,6791610349458793748]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13367216100517456726,18240828775391475830]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5927333369983577022,15909913472650230380]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4800340595136090738,11980400279241392758]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[16293423844334339663,11755502083335674850]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3461810660782397055,13833665689054202598]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12998339428753072936,5307867808309457385]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3374893436585051705,15533137816714572843]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3128393747248474415,2329478791457811584]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[6526974580395412454,5976980321596639697]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8056933235965822994,12193290402514539467]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16500325717628480317,8800586121391060646]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tiff.rs","num":14,"id":{"name":"tiff","disambiguator":[8555309469277891258,13671958608050140799]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","num":15,"id":{"name":"byteorder","disambiguator":[571040840798828509,11112181538235283130]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tiff.rs","num":16,"id":{"name":"lzw","disambiguator":[15099569162670075523,3508576874480256305]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tiff.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[14086235878037828001,13880872979620477283]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tiff.rs","num":18,"id":{"name":"adler32","disambiguator":[4908643681739081089,15933064056158536806]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\colorops.rs","num":19,"id":{"name":"num_traits","disambiguator":[1187548424570883877,13355397040756761828]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","num":20,"id":{"name":"gif","disambiguator":[18371189255484967979,1430782751927475450]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","num":21,"id":{"name":"color_quant","disambiguator":[8792847916174623078,12727662811981802366]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","num":22,"id":{"name":"num_rational","disambiguator":[1785258902006058876,15197687938714901684]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","num":23,"id":{"name":"num_integer","disambiguator":[15495601234979529360,6484181766482420527]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","num":24,"id":{"name":"scoped_threadpool","disambiguator":[12227732078255201469,11892291954216688614]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\decoder.rs","num":25,"id":{"name":"jpeg_decoder","disambiguator":[7128923511476434162,1714369410863357382]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\decoder.rs","num":26,"id":{"name":"rayon","disambiguator":[5069566647699239303,6818924652783715854]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\decoder.rs","num":27,"id":{"name":"either","disambiguator":[14842124787982225316,7889201166325840492]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\decoder.rs","num":28,"id":{"name":"rayon_core","disambiguator":[6153960424374730679,15260786401868084208]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\decoder.rs","num":29,"id":{"name":"crossbeam_queue","disambiguator":[9244455360070637488,8632464298466779500]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\decoder.rs","num":30,"id":{"name":"cfg_if","disambiguator":[2442249708866091360,16714075183114805585]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\decoder.rs","num":31,"id":{"name":"maybe_uninit","disambiguator":[4286604793989925036,16418824572312769135]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\decoder.rs","num":32,"id":{"name":"crossbeam_utils","disambiguator":[241733757360262237,3759549826449363168]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\decoder.rs","num":33,"id":{"name":"lazy_static","disambiguator":[17281579441627161632,7326486140096487162]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\decoder.rs","num":34,"id":{"name":"crossbeam_deque","disambiguator":[6533075955437324446,18057578100285877913]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\decoder.rs","num":35,"id":{"name":"crossbeam_epoch","disambiguator":[1770694336529511588,16442111474730753552]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\decoder.rs","num":36,"id":{"name":"memoffset","disambiguator":[9152108974636768888,7266433158717848275]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\decoder.rs","num":37,"id":{"name":"scopeguard","disambiguator":[13721324641233349733,16254448533605510378]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\decoder.rs","num":38,"id":{"name":"num_cpus","disambiguator":[17057066398673496886,15191577844472172867]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\encoder.rs","num":39,"id":{"name":"num_iter","disambiguator":[3703145384658563610,1338011430162320256]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","num":40,"id":{"name":"png","disambiguator":[2362481414878458602,16543262650962632214]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","num":41,"id":{"name":"bitflags","disambiguator":[1258995681021104935,10120995213895226001]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","num":42,"id":{"name":"deflate","disambiguator":[8772008674514980805,13835895917328064896]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","num":43,"id":{"name":"crc32fast","disambiguator":[14984425738714601369,14028776434072473916]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tiff.rs","num":44,"id":{"name":"bytemuck","disambiguator":[17048455220154329934,12776922819649006183]}}],"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":0,"byte_end":10053,"line_start":1,"line_end":274,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":5219},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":6951,"byte_end":6960,"line_start":139,"line_end":139,"column_start":24,"column_end":33},"alias_span":null,"name":"ColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5258},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":6962,"byte_end":6979,"line_start":139,"line_end":139,"column_start":35,"column_end":52},"alias_span":null,"name":"ExtendedColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5682},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7006,"byte_end":7010,"line_start":141,"line_end":141,"column_start":24,"column_end":28},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5769},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7012,"byte_end":7017,"line_start":141,"line_end":141,"column_start":30,"column_end":35},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5624},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7019,"byte_end":7022,"line_start":141,"line_end":141,"column_start":37,"column_end":40},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5711},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7024,"byte_end":7028,"line_start":141,"line_end":141,"column_start":42,"column_end":46},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5653},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7030,"byte_end":7033,"line_start":141,"line_end":141,"column_start":48,"column_end":51},"alias_span":null,"name":"Bgr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5740},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7035,"byte_end":7039,"line_start":141,"line_end":141,"column_start":53,"column_end":57},"alias_span":null,"name":"Bgra","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3799},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7066,"byte_end":7076,"line_start":143,"line_end":143,"column_start":24,"column_end":34},"alias_span":null,"name":"ImageError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7078,"byte_end":7089,"line_start":143,"line_end":143,"column_start":36,"column_end":47},"alias_span":null,"name":"ImageResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3621},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7116,"byte_end":7132,"line_start":145,"line_end":145,"column_start":24,"column_end":40},"alias_span":null,"name":"AnimationDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3652},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7150,"byte_end":7162,"line_start":146,"line_end":146,"column_start":17,"column_end":29},"alias_span":null,"name":"GenericImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3639},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7180,"byte_end":7196,"line_start":147,"line_end":147,"column_start":17,"column_end":33},"alias_span":null,"name":"GenericImageView","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3602},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7214,"byte_end":7226,"line_start":148,"line_end":148,"column_start":17,"column_end":29},"alias_span":null,"name":"ImageDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3615},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7244,"byte_end":7259,"line_start":149,"line_end":149,"column_start":17,"column_end":32},"alias_span":null,"name":"ImageDecoderExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3624},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7277,"byte_end":7289,"line_start":150,"line_end":150,"column_start":17,"column_end":29},"alias_span":null,"name":"ImageEncoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5882},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7307,"byte_end":7318,"line_start":151,"line_end":151,"column_start":17,"column_end":28},"alias_span":null,"name":"ImageFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5925},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7336,"byte_end":7353,"line_start":152,"line_end":152,"column_start":17,"column_end":34},"alias_span":null,"name":"ImageOutputFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5959},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7371,"byte_end":7379,"line_start":153,"line_end":153,"column_start":17,"column_end":25},"alias_span":null,"name":"Progress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3626},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7426,"byte_end":7432,"line_start":155,"line_end":155,"column_start":17,"column_end":23},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3664},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7450,"byte_end":7458,"line_start":156,"line_end":156,"column_start":17,"column_end":25},"alias_span":null,"name":"SubImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3186},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7505,"byte_end":7519,"line_start":159,"line_end":159,"column_start":18,"column_end":32},"alias_span":null,"name":"GrayAlphaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3185},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7538,"byte_end":7547,"line_start":160,"line_end":160,"column_start":18,"column_end":27},"alias_span":null,"name":"GrayImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5188},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7598,"byte_end":7609,"line_start":162,"line_end":162,"column_start":18,"column_end":29},"alias_span":null,"name":"ImageBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3183},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7628,"byte_end":7636,"line_start":163,"line_end":163,"column_start":18,"column_end":26},"alias_span":null,"name":"RgbImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3184},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7655,"byte_end":7664,"line_start":164,"line_end":164,"column_start":18,"column_end":27},"alias_span":null,"name":"RgbaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3992},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7689,"byte_end":7700,"line_start":166,"line_end":166,"column_start":22,"column_end":33},"alias_span":null,"name":"FlatSamples","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3717},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7737,"byte_end":7746,"line_start":169,"line_end":169,"column_start":25,"column_end":34},"alias_span":null,"name":"Primitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3739},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7748,"byte_end":7753,"line_start":169,"line_end":169,"column_start":36,"column_end":41},"alias_span":null,"name":"Pixel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7823,"byte_end":7835,"line_start":172,"line_end":172,"column_start":37,"column_end":49},"alias_span":null,"name":"guess_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7837,"byte_end":7841,"line_start":172,"line_end":172,"column_start":51,"column_end":55},"alias_span":null,"name":"load","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3543},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7870,"byte_end":7886,"line_start":173,"line_end":173,"column_start":27,"column_end":43},"alias_span":null,"name":"load_from_memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3544},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7888,"byte_end":7916,"line_start":173,"line_end":173,"column_start":45,"column_end":73},"alias_span":null,"name":"load_from_memory_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3535},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7918,"byte_end":7922,"line_start":173,"line_end":173,"column_start":75,"column_end":79},"alias_span":null,"name":"open","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3539},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7943,"byte_end":7954,"line_start":174,"line_end":174,"column_start":20,"column_end":31},"alias_span":null,"name":"save_buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3541},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7956,"byte_end":7979,"line_start":174,"line_end":174,"column_start":33,"column_end":56},"alias_span":null,"name":"save_buffer_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3537},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":7981,"byte_end":7997,"line_start":174,"line_end":174,"column_start":58,"column_end":74},"alias_span":null,"name":"image_dimensions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5849},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8026,"byte_end":8038,"line_start":176,"line_end":176,"column_start":26,"column_end":38},"alias_span":null,"name":"DynamicImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5168},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8068,"byte_end":8073,"line_start":178,"line_end":178,"column_start":28,"column_end":33},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5161},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8075,"byte_end":8080,"line_start":178,"line_end":178,"column_start":35,"column_end":40},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2856},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8082,"byte_end":8088,"line_start":178,"line_end":178,"column_start":42,"column_end":48},"alias_span":null,"name":"Frames","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3170},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8311,"byte_end":8324,"line_start":187,"line_end":187,"column_start":9,"column_end":22},"alias_span":null,"name":"ConvertBuffer","value":"","parent":{"krate":0,"index":116}},{"kind":"Use","ref_id":{"krate":0,"index":3007},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8334,"byte_end":8349,"line_start":188,"line_end":188,"column_start":9,"column_end":24},"alias_span":null,"name":"EnumeratePixels","value":"","parent":{"krate":0,"index":116}},{"kind":"Use","ref_id":{"krate":0,"index":3040},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8359,"byte_end":8377,"line_start":189,"line_end":189,"column_start":9,"column_end":27},"alias_span":null,"name":"EnumeratePixelsMut","value":"","parent":{"krate":0,"index":116}},{"kind":"Use","ref_id":{"krate":0,"index":3024},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8387,"byte_end":8400,"line_start":190,"line_end":190,"column_start":9,"column_end":22},"alias_span":null,"name":"EnumerateRows","value":"","parent":{"krate":0,"index":116}},{"kind":"Use","ref_id":{"krate":0,"index":3057},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8410,"byte_end":8426,"line_start":191,"line_end":191,"column_start":9,"column_end":25},"alias_span":null,"name":"EnumerateRowsMut","value":"","parent":{"krate":0,"index":116}},{"kind":"Use","ref_id":{"krate":0,"index":2927},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8436,"byte_end":8442,"line_start":192,"line_end":192,"column_start":9,"column_end":15},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":116}},{"kind":"Use","ref_id":{"krate":0,"index":2946},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8452,"byte_end":8461,"line_start":193,"line_end":193,"column_start":9,"column_end":18},"alias_span":null,"name":"PixelsMut","value":"","parent":{"krate":0,"index":116}},{"kind":"Use","ref_id":{"krate":0,"index":2965},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8471,"byte_end":8475,"line_start":194,"line_end":194,"column_start":9,"column_end":13},"alias_span":null,"name":"Rows","value":"","parent":{"krate":0,"index":116}},{"kind":"Use","ref_id":{"krate":0,"index":2986},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8485,"byte_end":8492,"line_start":195,"line_end":195,"column_start":9,"column_end":16},"alias_span":null,"name":"RowsMut","value":"","parent":{"krate":0,"index":116}},{"kind":"Use","ref_id":{"krate":0,"index":3951},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\math\\mod.rs","byte_start":27843,"byte_end":27847,"line_start":6,"line_end":6,"column_start":21,"column_end":25},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":127}},{"kind":"Use","ref_id":{"krate":0,"index":3976},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43156,"byte_end":43166,"line_start":7,"line_end":7,"column_start":23,"column_end":33},"alias_span":null,"name":"FilterType","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":3981},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43204,"byte_end":43214,"line_start":9,"line_end":9,"column_start":36,"column_end":46},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":3983},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43216,"byte_end":43224,"line_start":9,"line_end":9,"column_start":48,"column_end":56},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":3985},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43226,"byte_end":43234,"line_start":9,"line_end":9,"column_start":58,"column_end":66},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":3977},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43236,"byte_end":43243,"line_start":9,"line_end":9,"column_start":68,"column_end":75},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":3979},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43245,"byte_end":43253,"line_start":9,"line_end":9,"column_start":77,"column_end":85},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43312,"byte_end":43327,"line_start":13,"line_end":13,"column_start":5,"column_end":20},"alias_span":null,"name":"flip_horizontal","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43329,"byte_end":43353,"line_start":13,"line_end":13,"column_start":22,"column_end":46},"alias_span":null,"name":"flip_horizontal_in_place","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43355,"byte_end":43368,"line_start":13,"line_end":13,"column_start":48,"column_end":61},"alias_span":null,"name":"flip_vertical","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43370,"byte_end":43392,"line_start":13,"line_end":13,"column_start":63,"column_end":85},"alias_span":null,"name":"flip_vertical_in_place","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43394,"byte_end":43403,"line_start":13,"line_end":13,"column_start":87,"column_end":96},"alias_span":null,"name":"rotate180","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43409,"byte_end":43427,"line_start":14,"line_end":14,"column_start":5,"column_end":23},"alias_span":null,"name":"rotate180_in_place","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43429,"byte_end":43438,"line_start":14,"line_end":14,"column_start":25,"column_end":34},"alias_span":null,"name":"rotate270","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43440,"byte_end":43448,"line_start":14,"line_end":14,"column_start":36,"column_end":44},"alias_span":null,"name":"rotate90","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43450,"byte_end":43462,"line_start":14,"line_end":14,"column_start":46,"column_end":58},"alias_span":null,"name":"rotate180_in","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43464,"byte_end":43475,"line_start":14,"line_end":14,"column_start":60,"column_end":71},"alias_span":null,"name":"rotate90_in","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43477,"byte_end":43489,"line_start":14,"line_end":14,"column_start":73,"column_end":85},"alias_span":null,"name":"rotate270_in","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43491,"byte_end":43509,"line_start":14,"line_end":14,"column_start":87,"column_end":105},"alias_span":null,"name":"flip_horizontal_in","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43511,"byte_end":43527,"line_start":14,"line_end":14,"column_start":107,"column_end":123},"alias_span":null,"name":"flip_vertical_in","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43574,"byte_end":43578,"line_start":18,"line_end":18,"column_start":24,"column_end":28},"alias_span":null,"name":"blur","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43580,"byte_end":43589,"line_start":18,"line_end":18,"column_start":30,"column_end":39},"alias_span":null,"name":"filter3x3","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43591,"byte_end":43597,"line_start":18,"line_end":18,"column_start":41,"column_end":47},"alias_span":null,"name":"resize","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43599,"byte_end":43608,"line_start":18,"line_end":18,"column_start":49,"column_end":58},"alias_span":null,"name":"thumbnail","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43610,"byte_end":43619,"line_start":18,"line_end":18,"column_start":60,"column_end":69},"alias_span":null,"name":"unsharpen","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43669,"byte_end":43677,"line_start":21,"line_end":21,"column_start":26,"column_end":34},"alias_span":null,"name":"brighten","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43679,"byte_end":43687,"line_start":21,"line_end":21,"column_start":36,"column_end":44},"alias_span":null,"name":"contrast","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43689,"byte_end":43695,"line_start":21,"line_end":21,"column_start":46,"column_end":52},"alias_span":null,"name":"dither","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43697,"byte_end":43706,"line_start":21,"line_end":21,"column_start":54,"column_end":63},"alias_span":null,"name":"grayscale","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43708,"byte_end":43717,"line_start":21,"line_end":21,"column_start":65,"column_end":74},"alias_span":null,"name":"huerotate","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43719,"byte_end":43731,"line_start":21,"line_end":21,"column_start":76,"column_end":88},"alias_span":null,"name":"index_colors","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43733,"byte_end":43739,"line_start":21,"line_end":21,"column_start":90,"column_end":96},"alias_span":null,"name":"invert","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":3971},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43766,"byte_end":43773,"line_start":22,"line_end":22,"column_start":26,"column_end":33},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43775,"byte_end":43783,"line_start":22,"line_end":22,"column_start":35,"column_end":43},"alias_span":null,"name":"ColorMap","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\io\\mod.rs","byte_start":101118,"byte_end":101124,"line_start":5,"line_end":5,"column_start":23,"column_end":29},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":417}},{"kind":"Use","ref_id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\mod.rs","byte_start":182959,"byte_end":182969,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"BmpDecoder","value":"","parent":{"krate":0,"index":698}},{"kind":"Use","ref_id":{"krate":0,"index":926},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\mod.rs","byte_start":182994,"byte_end":183004,"line_start":11,"line_end":11,"column_start":24,"column_end":34},"alias_span":null,"name":"BMPEncoder","value":"","parent":{"krate":0,"index":698}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\mod.rs","byte_start":300199,"byte_end":300200,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"SIGNATURE, rgbe8, HDRAdapter, RGBE8Pixel","parent":{"krate":0,"index":1219}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\mod.rs","byte_start":300199,"byte_end":300200,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1219}},{"kind":"Use","ref_id":{"krate":0,"index":1487},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\mod.rs","byte_start":351018,"byte_end":351028,"line_start":9,"line_end":9,"column_start":24,"column_end":34},"alias_span":null,"name":"IcoDecoder","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":0,"index":1551},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\mod.rs","byte_start":351053,"byte_end":351063,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"ICOEncoder","value":"","parent":{"krate":0,"index":1443}},{"kind":"Use","ref_id":{"krate":0,"index":1591},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\mod.rs","byte_start":367798,"byte_end":367809,"line_start":10,"line_end":10,"column_start":24,"column_end":35},"alias_span":null,"name":"JpegDecoder","value":"","parent":{"krate":0,"index":1567}},{"kind":"Use","ref_id":{"krate":0,"index":1704},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\mod.rs","byte_start":367835,"byte_end":367846,"line_start":11,"line_end":11,"column_start":25,"column_end":36},"alias_span":null,"name":"JPEGEncoder","value":"","parent":{"krate":0,"index":1567}},{"kind":"Use","ref_id":{"krate":0,"index":4651},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\mod.rs","byte_start":367848,"byte_end":367860,"line_start":11,"line_end":11,"column_start":38,"column_end":50},"alias_span":null,"name":"PixelDensity","value":"","parent":{"krate":0,"index":1567}},{"kind":"Use","ref_id":{"krate":0,"index":4633},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\mod.rs","byte_start":367862,"byte_end":367878,"line_start":11,"line_end":11,"column_start":52,"column_end":68},"alias_span":null,"name":"PixelDensityUnit","value":"","parent":{"krate":0,"index":1567}},{"kind":"Use","ref_id":{"krate":0,"index":2021},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\mod.rs","byte_start":458293,"byte_end":458303,"line_start":7,"line_end":7,"column_start":24,"column_end":34},"alias_span":null,"name":"PnmDecoder","value":"","parent":{"krate":0,"index":1915}},{"kind":"Use","ref_id":{"krate":0,"index":2157},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\mod.rs","byte_start":458328,"byte_end":458338,"line_start":8,"line_end":8,"column_start":24,"column_end":34},"alias_span":null,"name":"PNMEncoder","value":"","parent":{"krate":0,"index":1915}},{"kind":"Use","ref_id":{"krate":0,"index":4931},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\mod.rs","byte_start":458395,"byte_end":458410,"line_start":10,"line_end":10,"column_start":24,"column_end":39},"alias_span":null,"name":"ArbitraryHeader","value":"","parent":{"krate":0,"index":1915}},{"kind":"Use","ref_id":{"krate":0,"index":4941},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\mod.rs","byte_start":458412,"byte_end":458429,"line_start":10,"line_end":10,"column_start":41,"column_end":58},"alias_span":null,"name":"ArbitraryTuplType","value":"","parent":{"krate":0,"index":1915}},{"kind":"Use","ref_id":{"krate":0,"index":4902},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\mod.rs","byte_start":458431,"byte_end":458443,"line_start":10,"line_end":10,"column_start":60,"column_end":72},"alias_span":null,"name":"BitmapHeader","value":"","parent":{"krate":0,"index":1915}},{"kind":"Use","ref_id":{"krate":0,"index":4911},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\mod.rs","byte_start":458445,"byte_end":458458,"line_start":10,"line_end":10,"column_start":74,"column_end":87},"alias_span":null,"name":"GraymapHeader","value":"","parent":{"krate":0,"index":1915}},{"kind":"Use","ref_id":{"krate":0,"index":4921},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\mod.rs","byte_start":458483,"byte_end":458495,"line_start":11,"line_end":11,"column_start":24,"column_end":36},"alias_span":null,"name":"PixmapHeader","value":"","parent":{"krate":0,"index":1915}},{"kind":"Use","ref_id":{"krate":0,"index":2256},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\mod.rs","byte_start":458521,"byte_end":458530,"line_start":12,"line_end":12,"column_start":24,"column_end":33},"alias_span":null,"name":"PNMHeader","value":"","parent":{"krate":0,"index":1915}},{"kind":"Use","ref_id":{"krate":0,"index":4878},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\mod.rs","byte_start":458532,"byte_end":458542,"line_start":12,"line_end":12,"column_start":35,"column_end":45},"alias_span":null,"name":"PNMSubtype","value":"","parent":{"krate":0,"index":1915}},{"kind":"Use","ref_id":{"krate":0,"index":4862},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\mod.rs","byte_start":458544,"byte_end":458558,"line_start":12,"line_end":12,"column_start":47,"column_end":61},"alias_span":null,"name":"SampleEncoding","value":"","parent":{"krate":0,"index":1915}},{"kind":"Use","ref_id":{"krate":0,"index":2365},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tga\\mod.rs","byte_start":545990,"byte_end":546000,"line_start":9,"line_end":9,"column_start":24,"column_end":34},"alias_span":null,"name":"TgaDecoder","value":"","parent":{"krate":0,"index":2303}},{"kind":"Use","ref_id":{"krate":0,"index":2523},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\mod.rs","byte_start":572735,"byte_end":572746,"line_start":3,"line_end":3,"column_start":24,"column_end":35},"alias_span":null,"name":"WebPDecoder","value":"","parent":{"krate":0,"index":2483}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":0,"byte_end":10053,"line_start":1,"line_end":274,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":29},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":54},{"krate":0,"index":116},{"krate":0,"index":127},{"krate":0,"index":171},{"krate":0,"index":417},{"krate":0,"index":522},{"krate":0,"index":698},{"krate":0,"index":948},{"krate":0,"index":1001},{"krate":0,"index":1118},{"krate":0,"index":1219},{"krate":0,"index":1443},{"krate":0,"index":1567},{"krate":0,"index":1784},{"krate":0,"index":1915},{"krate":0,"index":2303},{"krate":0,"index":2412},{"krate":0,"index":2483},{"krate":0,"index":2755},{"krate":0,"index":2850},{"krate":0,"index":2890},{"krate":0,"index":3193},{"krate":0,"index":3391},{"krate":0,"index":3546},{"krate":0,"index":3697},{"krate":0,"index":3785},{"krate":0,"index":3797},{"krate":0,"index":6018},{"krate":0,"index":3798}],"decl_id":null,"docs":" This crate provides native rust implementations of\n image encoders and decoders and basic image manipulation\n functions.","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":6512,"byte_end":6534,"line_start":121,"line_end":121,"column_start":1,"column_end":23}},{"value":"warn(unused_qualifications)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":6535,"byte_end":6566,"line_start":122,"line_end":122,"column_start":1,"column_end":32}},{"value":"deny(unreachable_pub)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":6567,"byte_end":6592,"line_start":123,"line_end":123,"column_start":1,"column_end":26}},{"value":"deny(deprecated)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":6593,"byte_end":6613,"line_start":124,"line_end":124,"column_start":1,"column_end":21}},{"value":"deny(missing_copy_implementations)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":6614,"byte_end":6652,"line_start":125,"line_end":125,"column_start":1,"column_end":39}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":6750,"byte_end":6791,"line_start":128,"line_end":128,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":3799},{"krate":0,"index":3818},{"krate":0,"index":3820},{"krate":0,"index":3823},{"krate":0,"index":3825},{"krate":0,"index":3847},{"krate":0,"index":3845},{"krate":0,"index":3842},{"krate":0,"index":3838},{"krate":0,"index":3839},{"krate":0,"index":3849},{"krate":0,"index":3852},{"krate":0,"index":3854},{"krate":0,"index":3857},{"krate":0,"index":3859},{"krate":0,"index":3881},{"krate":0,"index":3879},{"krate":0,"index":3876},{"krate":0,"index":3872},{"krate":0,"index":3873},{"krate":0,"index":3883},{"krate":0,"index":3886},{"krate":0,"index":3888},{"krate":0,"index":3890},{"krate":0,"index":3892},{"krate":0,"index":3912},{"krate":0,"index":3910},{"krate":0,"index":3907},{"krate":0,"index":3903},{"krate":0,"index":3904},{"krate":0,"index":3900},{"krate":0,"index":3901},{"krate":0,"index":3914},{"krate":0,"index":3938},{"krate":0,"index":3936},{"krate":0,"index":3933},{"krate":0,"index":3929},{"krate":0,"index":3930},{"krate":0,"index":62},{"krate":0,"index":66},{"krate":0,"index":71},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":114}],"decl_id":null,"docs":" Contains detailed error representation.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3800},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":11704,"byte_end":11712,"line_start":34,"line_end":34,"column_start":5,"column_end":13},"name":"Decoding","qualname":"::error::ImageError::Decoding","value":"ImageError::Decoding(DecodingError)","parent":{"krate":0,"index":3799},"children":[],"decl_id":null,"docs":" An error was encountered while decoding.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3803},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":12098,"byte_end":12106,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"name":"Encoding","qualname":"::error::ImageError::Encoding","value":"ImageError::Encoding(EncodingError)","parent":{"krate":0,"index":3799},"children":[],"decl_id":null,"docs":" An error was encountered while encoding.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3806},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":12346,"byte_end":12355,"line_start":48,"line_end":48,"column_start":5,"column_end":14},"name":"Parameter","qualname":"::error::ImageError::Parameter","value":"ImageError::Parameter(ParameterError)","parent":{"krate":0,"index":3799},"children":[],"decl_id":null,"docs":" An error was encountered in input arguments.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3809},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":12615,"byte_end":12621,"line_start":54,"line_end":54,"column_start":5,"column_end":11},"name":"Limits","qualname":"::error::ImageError::Limits","value":"ImageError::Limits(LimitError)","parent":{"krate":0,"index":3799},"children":[],"decl_id":null,"docs":" Completing the operation would have required more resources than allowed.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3812},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":12959,"byte_end":12970,"line_start":62,"line_end":62,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::error::ImageError::Unsupported","value":"ImageError::Unsupported(UnsupportedError)","parent":{"krate":0,"index":3799},"children":[],"decl_id":null,"docs":" An operation can not be completed by the chosen abstraction.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3815},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":13061,"byte_end":13068,"line_start":65,"line_end":65,"column_start":5,"column_end":12},"name":"IoError","qualname":"::error::ImageError::IoError","value":"ImageError::IoError(io::Error)","parent":{"krate":0,"index":3799},"children":[],"decl_id":null,"docs":" An error occurred while interacting with the environment.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3799},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":11404,"byte_end":11414,"line_start":28,"line_end":28,"column_start":10,"column_end":20},"name":"ImageError","qualname":"::error::ImageError","value":"ImageError::{Decoding, Encoding, Parameter, Limits, Unsupported, IoError}","parent":null,"children":[{"krate":0,"index":3800},{"krate":0,"index":3803},{"krate":0,"index":3806},{"krate":0,"index":3809},{"krate":0,"index":3812},{"krate":0,"index":3815}],"decl_id":null,"docs":" The generic error type for image operations.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3820},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":13300,"byte_end":13316,"line_start":74,"line_end":74,"column_start":12,"column_end":28},"name":"UnsupportedError","qualname":"::error::UnsupportedError","value":"UnsupportedError {  }","parent":null,"children":[{"krate":0,"index":3821},{"krate":0,"index":3822}],"decl_id":null,"docs":" The implementation for an operation was not provided.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3826},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":13555,"byte_end":13560,"line_start":83,"line_end":83,"column_start":5,"column_end":10},"name":"Color","qualname":"::error::UnsupportedErrorKind::Color","value":"UnsupportedErrorKind::Color(ExtendedColorType)","parent":{"krate":0,"index":3825},"children":[],"decl_id":null,"docs":" The required color type can not be handled.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3829},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":13627,"byte_end":13633,"line_start":85,"line_end":85,"column_start":5,"column_end":11},"name":"Format","qualname":"::error::UnsupportedErrorKind::Format","value":"UnsupportedErrorKind::Format(ImageFormatHint)","parent":{"krate":0,"index":3825},"children":[],"decl_id":null,"docs":" An image format is not supported.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3832},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":13777,"byte_end":13791,"line_start":88,"line_end":88,"column_start":5,"column_end":19},"name":"GenericFeature","qualname":"::error::UnsupportedErrorKind::GenericFeature","value":"UnsupportedErrorKind::GenericFeature(String)","parent":{"krate":0,"index":3825},"children":[],"decl_id":null,"docs":" Some feature specified by string.\n This is discouraged and is likely to get deprecated (but not removed).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3835},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":13824,"byte_end":13839,"line_start":90,"line_end":90,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::UnsupportedErrorKind::__NonExhaustive","value":"UnsupportedErrorKind::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":3825},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3825},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":13476,"byte_end":13496,"line_start":81,"line_end":81,"column_start":10,"column_end":30},"name":"UnsupportedErrorKind","qualname":"::error::UnsupportedErrorKind","value":"UnsupportedErrorKind::{Color, Format, GenericFeature, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":3826},{"krate":0,"index":3829},{"krate":0,"index":3832},{"krate":0,"index":3835}],"decl_id":null,"docs":" Details what feature is not supported.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3849},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":14158,"byte_end":14171,"line_start":100,"line_end":100,"column_start":12,"column_end":25},"name":"EncodingError","qualname":"::error::EncodingError","value":"EncodingError {  }","parent":null,"children":[{"krate":0,"index":3850},{"krate":0,"index":3851}],"decl_id":null,"docs":" An error was encountered while encoding an image.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3854},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":14553,"byte_end":14567,"line_start":113,"line_end":113,"column_start":12,"column_end":26},"name":"ParameterError","qualname":"::error::ParameterError","value":"ParameterError {  }","parent":null,"children":[{"krate":0,"index":3855},{"krate":0,"index":3856}],"decl_id":null,"docs":" An error was encountered in inputs arguments.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3860},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":14815,"byte_end":14832,"line_start":122,"line_end":122,"column_start":5,"column_end":22},"name":"DimensionMismatch","qualname":"::error::ParameterErrorKind::DimensionMismatch","value":"ParameterErrorKind::DimensionMismatch","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":" The dimensions passed are wrong.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3862},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":14930,"byte_end":14943,"line_start":124,"line_end":124,"column_start":5,"column_end":18},"name":"FailedAlready","qualname":"::error::ParameterErrorKind::FailedAlready","value":"ParameterErrorKind::FailedAlready","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":" Repeated an operation for which error that could not be cloned was emitted already.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3864},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":15071,"byte_end":15078,"line_start":127,"line_end":127,"column_start":5,"column_end":12},"name":"Generic","qualname":"::error::ParameterErrorKind::Generic","value":"ParameterErrorKind::Generic(String)","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":" A string describing the parameter.\n This is discouraged and is likely to get deprecated (but not removed).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3867},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":15139,"byte_end":15149,"line_start":129,"line_end":129,"column_start":5,"column_end":15},"name":"NoMoreData","qualname":"::error::ParameterErrorKind::NoMoreData","value":"ParameterErrorKind::NoMoreData","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":" The end of the image has been reached.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3869},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":15233,"byte_end":15248,"line_start":132,"line_end":132,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::ParameterErrorKind::__NonExhaustive","value":"ParameterErrorKind::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":3859},"children":[],"decl_id":null,"docs":" Do not use this, not part of stability guarantees.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3859},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":14749,"byte_end":14767,"line_start":120,"line_end":120,"column_start":10,"column_end":28},"name":"ParameterErrorKind","qualname":"::error::ParameterErrorKind","value":"ParameterErrorKind::{DimensionMismatch, FailedAlready, Generic, NoMoreData, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":3860},{"krate":0,"index":3862},{"krate":0,"index":3864},{"krate":0,"index":3867},{"krate":0,"index":3869}],"decl_id":null,"docs":" Details how a parameter is malformed.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3883},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":15567,"byte_end":15580,"line_start":142,"line_end":142,"column_start":12,"column_end":25},"name":"DecodingError","qualname":"::error::DecodingError","value":"DecodingError {  }","parent":null,"children":[{"krate":0,"index":3884},{"krate":0,"index":3885}],"decl_id":null,"docs":" An error was encountered while decoding an image.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3888},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":15980,"byte_end":15990,"line_start":154,"line_end":154,"column_start":12,"column_end":22},"name":"LimitError","qualname":"::error::LimitError","value":"LimitError {  }","parent":null,"children":[{"krate":0,"index":3889}],"decl_id":null,"docs":" Completing the operation would have required more resources than allowed.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3893},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":16522,"byte_end":16536,"line_start":167,"line_end":167,"column_start":5,"column_end":19},"name":"DimensionError","qualname":"::error::LimitErrorKind::DimensionError","value":"LimitErrorKind::DimensionError","parent":{"krate":0,"index":3892},"children":[],"decl_id":null,"docs":" The resulting image exceed dimension limits in either direction.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3895},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":16620,"byte_end":16638,"line_start":169,"line_end":169,"column_start":5,"column_end":23},"name":"InsufficientMemory","qualname":"::error::LimitErrorKind::InsufficientMemory","value":"LimitErrorKind::InsufficientMemory","parent":{"krate":0,"index":3892},"children":[],"decl_id":null,"docs":" The operation would have performed an allocation larger than allowed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3897},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":16722,"byte_end":16737,"line_start":172,"line_end":172,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::LimitErrorKind::__NonExhaustive","value":"LimitErrorKind::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":3892},"children":[],"decl_id":null,"docs":" Do not use this, not part of stability guarantees.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3892},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":16428,"byte_end":16442,"line_start":165,"line_end":165,"column_start":10,"column_end":24},"name":"LimitErrorKind","qualname":"::error::LimitErrorKind","value":"LimitErrorKind::{DimensionError, InsufficientMemory, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":3893},{"krate":0,"index":3895},{"krate":0,"index":3897}],"decl_id":null,"docs":" Indicates the limit that prevented an operation from completing.","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":16344,"byte_end":16382,"line_start":164,"line_end":164,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3915},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":16924,"byte_end":16929,"line_start":179,"line_end":179,"column_start":5,"column_end":10},"name":"Exact","qualname":"::error::ImageFormatHint::Exact","value":"ImageFormatHint::Exact(ImageFormat)","parent":{"krate":0,"index":3914},"children":[],"decl_id":null,"docs":" The format is known exactly.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3918},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":16997,"byte_end":17001,"line_start":182,"line_end":182,"column_start":5,"column_end":9},"name":"Name","qualname":"::error::ImageFormatHint::Name","value":"ImageFormatHint::Name(String)","parent":{"krate":0,"index":3914},"children":[],"decl_id":null,"docs":" The format can be identified by a name.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3921},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":17073,"byte_end":17086,"line_start":185,"line_end":185,"column_start":5,"column_end":18},"name":"PathExtension","qualname":"::error::ImageFormatHint::PathExtension","value":"ImageFormatHint::PathExtension(std::path::PathBuf)","parent":{"krate":0,"index":3914},"children":[],"decl_id":null,"docs":" A common path extension for the format is known.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3924},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":17173,"byte_end":17180,"line_start":188,"line_end":188,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::error::ImageFormatHint::Unknown","value":"ImageFormatHint::Unknown","parent":{"krate":0,"index":3914},"children":[],"decl_id":null,"docs":" The format is not known or could not be determined.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3926},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":17206,"byte_end":17221,"line_start":191,"line_end":191,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::ImageFormatHint::__NonExhaustive","value":"ImageFormatHint::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":3914},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3914},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":16865,"byte_end":16880,"line_start":177,"line_end":177,"column_start":10,"column_end":25},"name":"ImageFormatHint","qualname":"::error::ImageFormatHint","value":"ImageFormatHint::{Exact, Name, PathExtension, Unknown, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":3915},{"krate":0,"index":3918},{"krate":0,"index":3921},{"krate":0,"index":3924},{"krate":0,"index":3926}],"decl_id":null,"docs":" A best effort representation for image formats.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":17493,"byte_end":17513,"line_start":199,"line_end":199,"column_start":12,"column_end":32},"name":"from_format_and_kind","qualname":"<UnsupportedError>::from_format_and_kind","value":"fn (format: ImageFormatHint, kind: UnsupportedErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `UnsupportedError` for an image with details on the unsupported feature.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":17741,"byte_end":17745,"line_start":207,"line_end":207,"column_start":12,"column_end":16},"name":"kind","qualname":"<UnsupportedError>::kind","value":"fn (&self) -> UnsupportedErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `UnsupportedErrorKind` of the error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":17884,"byte_end":17895,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<UnsupportedError>::format_hint","value":"fn (&self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Returns the image format associated with this error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":18087,"byte_end":18090,"line_start":219,"line_end":219,"column_start":12,"column_end":15},"name":"new","qualname":"<DecodingError>::new","value":"fn (format: ImageFormatHint, err: impl Into<Box<dyn Error + Send + Sync>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `DecodingError` that stems from an arbitrary error of an underlying decoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":18458,"byte_end":18474,"line_start":232,"line_end":232,"column_start":12,"column_end":28},"name":"from_format_hint","qualname":"<DecodingError>::from_format_hint","value":"fn (format: ImageFormatHint) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `DecodingError` for an image format.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":18673,"byte_end":18684,"line_start":240,"line_end":240,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<DecodingError>::format_hint","value":"fn (&self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Returns the image format associated with this error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":18877,"byte_end":18880,"line_start":247,"line_end":247,"column_start":12,"column_end":15},"name":"new","qualname":"<EncodingError>::new","value":"fn (format: ImageFormatHint, err: impl Into<Box<dyn Error + Send + Sync>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `EncodingError` that stems from an arbitrary error of an underlying encoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":19249,"byte_end":19265,"line_start":260,"line_end":260,"column_start":12,"column_end":28},"name":"from_format_hint","qualname":"<EncodingError>::from_format_hint","value":"fn (format: ImageFormatHint) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `EncodingError` for an image format.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":19463,"byte_end":19474,"line_start":268,"line_end":268,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<EncodingError>::format_hint","value":"fn (&self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Return the image format associated with this error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":19646,"byte_end":19655,"line_start":275,"line_end":275,"column_start":12,"column_end":21},"name":"from_kind","qualname":"<ParameterError>::from_kind","value":"fn (kind: ParameterErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `ParameterError` directly from a corresponding kind.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":19862,"byte_end":19866,"line_start":283,"line_end":283,"column_start":12,"column_end":16},"name":"kind","qualname":"<ParameterError>::kind","value":"fn (&self) -> ParameterErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `ParameterErrorKind` of the error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":20039,"byte_end":20048,"line_start":290,"line_end":290,"column_start":12,"column_end":21},"name":"from_kind","qualname":"<LimitError>::from_kind","value":"fn (kind: LimitErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a generic `LimitError` directly from a corresponding kind.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":20213,"byte_end":20217,"line_start":297,"line_end":297,"column_start":12,"column_end":16},"name":"kind","qualname":"<LimitError>::kind","value":"fn (&self) -> LimitErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `LimitErrorKind` of the error.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":21096,"byte_end":21107,"line_start":333,"line_end":333,"column_start":10,"column_end":21},"name":"ImageResult","qualname":"::error::ImageResult","value":"Result<T, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Result of an image decoding/encoding process\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8216,"byte_end":8222,"line_start":184,"line_end":184,"column_start":9,"column_end":15},"name":"buffer","qualname":"::buffer","value":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":117}],"decl_id":null,"docs":" Iterators and other auxiliary structure for the `ImageBuffer` type.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\math\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"math","qualname":"::math","value":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\math\\mod.rs","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":170}],"decl_id":null,"docs":" Mathematical helper functions and types.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\math\\nq.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"nq","qualname":"::math::nq","value":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\math\\nq.rs","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":3940},{"krate":0,"index":3948},{"krate":0,"index":3946},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":152}],"decl_id":null,"docs":" NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.\n See \"Kohonen neural networks for optimal colour quantization\"\n in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.\n for a discussion of the algorithm.\n See also <https://scientificgems.wordpress.com/stuff/neuquant-fast-high-quality-image-quantization/>\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\math\\nq.rs","byte_start":30089,"byte_end":30097,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"NeuQuant","qualname":"::math::nq::NeuQuant","value":"NeuQuant {  }","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151}],"decl_id":null,"docs":" Neural network color quantizer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\math\\nq.rs","byte_start":30399,"byte_end":30402,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<NeuQuant>::new","value":"fn (samplefac: i32, colors: usize, pixels: &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new neural network and trains it with the supplied data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\math\\nq.rs","byte_start":30943,"byte_end":30947,"line_start":91,"line_end":91,"column_start":12,"column_end":16},"name":"init","qualname":"<NeuQuant>::init","value":"fn (&mut self, pixels: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Initializes the neural network and trains it with the supplied data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\math\\nq.rs","byte_start":31937,"byte_end":31946,"line_start":123,"line_end":123,"column_start":12,"column_end":21},"name":"map_pixel","qualname":"<NeuQuant>::map_pixel","value":"fn (&self, pixel: &mut [u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Maps the pixel in-place to the best-matching color in the color map\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\math\\nq.rs","byte_start":31908,"byte_end":31925,"line_start":122,"line_end":122,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\math\\nq.rs","byte_start":32498,"byte_end":32506,"line_start":138,"line_end":138,"column_start":12,"column_end":20},"name":"index_of","qualname":"<NeuQuant>::index_of","value":"fn (&self, pixel: &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Finds the best-matching index in the color map for `pixel`\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\math\\nq.rs","byte_start":32469,"byte_end":32486,"line_start":137,"line_end":137,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\math\\utils.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::math::utils","value":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\math\\utils.rs","parent":null,"children":[{"krate":0,"index":167}],"decl_id":null,"docs":" Shared mathematical utility functions.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\math\\utils.rs","byte_start":42469,"byte_end":42474,"line_start":13,"line_end":13,"column_start":8,"column_end":13},"name":"clamp","qualname":"::math::utils::clamp","value":"fn <N> (a: N, min: N, max: N) -> N","parent":null,"children":[],"decl_id":null,"docs":" Cut value to be inside given range","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\math\\utils.rs","byte_start":42452,"byte_end":42461,"line_start":12,"line_end":12,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":3951},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\math\\rect.rs","byte_start":42755,"byte_end":42759,"line_start":3,"line_end":3,"column_start":12,"column_end":16},"name":"Rect","qualname":"::math::rect::Rect","value":"Rect { x, y, width, height }","parent":null,"children":[{"krate":0,"index":3952},{"krate":0,"index":3953},{"krate":0,"index":3954},{"krate":0,"index":3955}],"decl_id":null,"docs":" A Rectangle defined by its top left corner, width and height.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3952},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\math\\rect.rs","byte_start":42819,"byte_end":42820,"line_start":5,"line_end":5,"column_start":9,"column_end":10},"name":"x","qualname":"::math::rect::Rect::x","value":"u32","parent":{"krate":0,"index":3951},"children":[],"decl_id":null,"docs":" The x coordinate of the top left corner.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3953},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\math\\rect.rs","byte_start":42884,"byte_end":42885,"line_start":7,"line_end":7,"column_start":9,"column_end":10},"name":"y","qualname":"::math::rect::Rect::y","value":"u32","parent":{"krate":0,"index":3951},"children":[],"decl_id":null,"docs":" The y coordinate of the top left corner.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3954},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\math\\rect.rs","byte_start":42931,"byte_end":42936,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"width","qualname":"::math::rect::Rect::width","value":"u32","parent":{"krate":0,"index":3951},"children":[],"decl_id":null,"docs":" The rectangle's width.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3955},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\math\\rect.rs","byte_start":42983,"byte_end":42989,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"height","qualname":"::math::rect::Rect::height","value":"u32","parent":{"krate":0,"index":3951},"children":[],"decl_id":null,"docs":" The rectangle's height.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"imageops","qualname":"::imageops","value":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":185},{"krate":0,"index":199},{"krate":0,"index":205},{"krate":0,"index":215},{"krate":0,"index":256},{"krate":0,"index":319},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":414}],"decl_id":null,"docs":" Image Processing Functions\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\affine.rs","byte_start":51467,"byte_end":51475,"line_start":9,"line_end":9,"column_start":8,"column_end":16},"name":"rotate90","qualname":"::imageops::affine::rotate90","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\affine.rs","byte_start":51807,"byte_end":51816,"line_start":21,"line_end":21,"column_start":8,"column_end":17},"name":"rotate180","qualname":"::imageops::affine::rotate180","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\affine.rs","byte_start":52149,"byte_end":52158,"line_start":33,"line_end":33,"column_start":8,"column_end":17},"name":"rotate270","qualname":"::imageops::affine::rotate270","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\affine.rs","byte_start":52546,"byte_end":52557,"line_start":45,"line_end":45,"column_start":8,"column_end":19},"name":"rotate90_in","qualname":"::imageops::affine::rotate90_in","value":"fn <I, Container> (image: &I, destination: &mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\affine.rs","byte_start":53331,"byte_end":53343,"line_start":70,"line_end":70,"column_start":8,"column_end":20},"name":"rotate180_in","qualname":"::imageops::affine::rotate180_in","value":"fn <I, Container> (image: &I, destination: &mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\affine.rs","byte_start":54126,"byte_end":54138,"line_start":95,"line_end":95,"column_start":8,"column_end":20},"name":"rotate270_in","qualname":"::imageops::affine::rotate270_in","value":"fn <I, Container> (image: &I, destination: &mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\affine.rs","byte_start":54844,"byte_end":54859,"line_start":120,"line_end":120,"column_start":8,"column_end":23},"name":"flip_horizontal","qualname":"::imageops::affine::flip_horizontal","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\affine.rs","byte_start":55184,"byte_end":55197,"line_start":132,"line_end":132,"column_start":8,"column_end":21},"name":"flip_vertical","qualname":"::imageops::affine::flip_vertical","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\affine.rs","byte_start":55579,"byte_end":55597,"line_start":144,"line_end":144,"column_start":8,"column_end":26},"name":"flip_horizontal_in","qualname":"::imageops::affine::flip_horizontal_in","value":"fn <I, Container> (image: &I, destination: &mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\affine.rs","byte_start":56358,"byte_end":56374,"line_start":169,"line_end":169,"column_start":8,"column_end":24},"name":"flip_vertical_in","qualname":"::imageops::affine::flip_vertical_in","value":"fn <I, Container> (image: &I, destination: &mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\affine.rs","byte_start":57101,"byte_end":57119,"line_start":194,"line_end":194,"column_start":8,"column_end":26},"name":"rotate180_in_place","qualname":"::imageops::affine::rotate180_in_place","value":"fn <I> (image: &mut I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise in place.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\affine.rs","byte_start":57899,"byte_end":57923,"line_start":225,"line_end":225,"column_start":8,"column_end":32},"name":"flip_horizontal_in_place","qualname":"::imageops::affine::flip_horizontal_in_place","value":"fn <I> (image: &mut I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally in place.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\affine.rs","byte_start":58329,"byte_end":58351,"line_start":240,"line_end":240,"column_start":8,"column_end":30},"name":"flip_vertical_in_place","qualname":"::imageops::affine::flip_vertical_in_place","value":"fn <I> (image: &mut I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically in place.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\colorops.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"colorops","qualname":"::imageops::colorops","value":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\colorops.rs","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":273},{"krate":0,"index":275},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":284},{"krate":0,"index":290},{"krate":0,"index":295},{"krate":0,"index":3971},{"krate":0,"index":3974},{"krate":0,"index":3973},{"krate":0,"index":299},{"krate":0,"index":303},{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":316}],"decl_id":null,"docs":" Functions for altering and converting the color of pixelbufs\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\colorops.rs","byte_start":63753,"byte_end":63762,"line_start":16,"line_end":16,"column_start":8,"column_end":17},"name":"grayscale","qualname":"::imageops::colorops::grayscale","value":"fn <I> (image: &I) -> ImageBuffer<Luma<Subpixel<I>>, Vec<Subpixel<I>>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to grayscale\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\colorops.rs","byte_start":64301,"byte_end":64307,"line_start":38,"line_end":38,"column_start":8,"column_end":14},"name":"invert","qualname":"::imageops::colorops::invert","value":"fn <I> (image: &mut I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Invert each pixel within the supplied image.\n This function operates in place.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\colorops.rs","byte_start":64770,"byte_end":64778,"line_start":54,"line_end":54,"column_start":8,"column_end":16},"name":"contrast","qualname":"::imageops::colorops::contrast","value":"fn <I, P, S> (image: &I, contrast: f32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of the supplied image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\colorops.rs","byte_start":65753,"byte_end":65761,"line_start":89,"line_end":89,"column_start":8,"column_end":16},"name":"brighten","qualname":"::imageops::colorops::brighten","value":"fn <I, P, S> (image: &I, value: i32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Brighten the supplied image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\colorops.rs","byte_start":66747,"byte_end":66756,"line_start":124,"line_end":124,"column_start":8,"column_end":17},"name":"huerotate","qualname":"::imageops::colorops::huerotate","value":"fn <I, P, S> (image: &I, value: i32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\colorops.rs","byte_start":68670,"byte_end":68678,"line_start":181,"line_end":181,"column_start":11,"column_end":19},"name":"ColorMap","qualname":"::imageops::colorops::ColorMap","value":"ColorMap","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"decl_id":null,"docs":" A color map\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\colorops.rs","byte_start":68742,"byte_end":68747,"line_start":183,"line_end":183,"column_start":10,"column_end":15},"name":"Color","qualname":"::imageops::colorops::ColorMap::Color","value":"type Color;","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" The color type on which the map operates on\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\colorops.rs","byte_start":68839,"byte_end":68847,"line_start":186,"line_end":186,"column_start":8,"column_end":16},"name":"index_of","qualname":"::imageops::colorops::ColorMap::index_of","value":"fn (&self, color: &Self::Color) -> usize","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Returns the index of the closed match of `color`\n in the color map.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\colorops.rs","byte_start":68953,"byte_end":68962,"line_start":188,"line_end":188,"column_start":8,"column_end":17},"name":"map_color","qualname":"::imageops::colorops::ColorMap::map_color","value":"fn (&self, color: &mut Self::Color) -> ()","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Maps `color` to the closest color in the color map.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3971},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\colorops.rs","byte_start":69058,"byte_end":69065,"line_start":193,"line_end":193,"column_start":12,"column_end":19},"name":"BiLevel","qualname":"::imageops::colorops::BiLevel","value":"","parent":null,"children":[],"decl_id":null,"docs":" A bi-level color map\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\colorops.rs","byte_start":70924,"byte_end":70930,"line_start":259,"line_end":259,"column_start":8,"column_end":14},"name":"dither","qualname":"::imageops::colorops::dither","value":"fn <Pix, Map> (image: &mut ImageBuffer<Pix, Vec<u8>>, color_map: &Map) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors of the image using the supplied `color_map` while applying\n Floyd-Steinberg dithering to improve the visual conception\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\colorops.rs","byte_start":72475,"byte_end":72487,"line_start":297,"line_end":297,"column_start":8,"column_end":20},"name":"index_colors","qualname":"::imageops::colorops::index_colors","value":"fn <Pix, Map> (image: &ImageBuffer<Pix, Vec<u8>>, color_map: &Map) -> ImageBuffer<Luma<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors using the supplied `color_map` and returns an image of the indices\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3977},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\sample.rs","byte_start":76159,"byte_end":76166,"line_start":84,"line_end":84,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::imageops::sample::FilterType::Nearest","value":"FilterType::Nearest","parent":{"krate":0,"index":3976},"children":[],"decl_id":null,"docs":" Nearest Neighbor\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3979},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\sample.rs","byte_start":76195,"byte_end":76203,"line_start":87,"line_end":87,"column_start":5,"column_end":13},"name":"Triangle","qualname":"::imageops::sample::FilterType::Triangle","value":"FilterType::Triangle","parent":{"krate":0,"index":3976},"children":[],"decl_id":null,"docs":" Linear Filter\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3981},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\sample.rs","byte_start":76231,"byte_end":76241,"line_start":90,"line_end":90,"column_start":5,"column_end":15},"name":"CatmullRom","qualname":"::imageops::sample::FilterType::CatmullRom","value":"FilterType::CatmullRom","parent":{"krate":0,"index":3976},"children":[],"decl_id":null,"docs":" Cubic Filter\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3983},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\sample.rs","byte_start":76272,"byte_end":76280,"line_start":93,"line_end":93,"column_start":5,"column_end":13},"name":"Gaussian","qualname":"::imageops::sample::FilterType::Gaussian","value":"FilterType::Gaussian","parent":{"krate":0,"index":3976},"children":[],"decl_id":null,"docs":" Gaussian Filter\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3985},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\sample.rs","byte_start":76317,"byte_end":76325,"line_start":96,"line_end":96,"column_start":5,"column_end":13},"name":"Lanczos3","qualname":"::imageops::sample::FilterType::Lanczos3","value":"FilterType::Lanczos3","parent":{"krate":0,"index":3976},"children":[],"decl_id":null,"docs":" Lanczos with window 3\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3976},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\sample.rs","byte_start":76117,"byte_end":76127,"line_start":82,"line_end":82,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::imageops::sample::FilterType","value":"FilterType::{Nearest, Triangle, CatmullRom, Gaussian, Lanczos3}","parent":null,"children":[{"krate":0,"index":3977},{"krate":0,"index":3979},{"krate":0,"index":3981},{"krate":0,"index":3983},{"krate":0,"index":3985}],"decl_id":null,"docs":" Available Sampling Filters.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\sample.rs","byte_start":85787,"byte_end":85796,"line_start":393,"line_end":393,"column_start":8,"column_end":17},"name":"thumbnail","qualname":"::imageops::sample::thumbnail","value":"fn <I, P, S> (image: &I, new_width: u32, new_height: u32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specific dimensions.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\sample.rs","byte_start":93655,"byte_end":93664,"line_start":632,"line_end":632,"column_start":8,"column_end":17},"name":"filter3x3","qualname":"::imageops::sample::filter3x3","value":"fn <I, P, S> (image: &I, kernel: &[f32]) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Perform a 3x3 box filter on the supplied image.\n ```kernel``` is an array of the filter weights of length 9.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\sample.rs","byte_start":96091,"byte_end":96097,"line_start":712,"line_end":712,"column_start":8,"column_end":14},"name":"resize","qualname":"::imageops::sample::resize","value":"fn <I> (image: &I, nwidth: u32, nheight: u32, filter: FilterType) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specified dimensions.\n ```nwidth``` and ```nheight``` are the new dimensions.\n ```filter``` is the sampling filter to use.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\sample.rs","byte_start":97223,"byte_end":97227,"line_start":751,"line_end":751,"column_start":8,"column_end":12},"name":"blur","qualname":"::imageops::sample::blur","value":"fn <I> (image: &I, sigma: f32) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on the supplied image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\sample.rs","byte_start":98050,"byte_end":98059,"line_start":778,"line_end":778,"column_start":8,"column_end":17},"name":"unsharpen","qualname":"::imageops::sample::unsharpen","value":"fn <I, P, S> (image: &I, sigma: f32, threshold: i32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on the supplied image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is the threshold for the difference between","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43963,"byte_end":43967,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"crop","qualname":"::imageops::crop","value":"fn <I> (image: &mut I, x: u32, y: u32, width: u32, height: u32) -> SubImage<&mut I>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view into an image\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":44261,"byte_end":44269,"line_start":43,"line_end":43,"column_start":8,"column_end":16},"name":"crop_imm","qualname":"::imageops::crop_imm","value":"fn <I> (image: &I, x: u32, y: u32, width: u32, height: u32) -> SubImage<&I>","parent":null,"children":[],"decl_id":null,"docs":" Return an immutable view into an image\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":47053,"byte_end":47067,"line_start":127,"line_end":127,"column_start":8,"column_end":22},"name":"overlay_bounds","qualname":"::imageops::overlay_bounds","value":"fn ((bottom_width, bottom_height): (u32, u32), (top_width, top_height): (u32, u32), x: u32, y: u32) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Calculate the region that can be copied from top to bottom.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":47581,"byte_end":47588,"line_start":145,"line_end":145,"column_start":8,"column_end":15},"name":"overlay","qualname":"::imageops::overlay","value":"fn <I, J> (bottom: &mut I, top: &J, x: u32, y: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Overlay an image at a given coordinate (x, y)\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":48320,"byte_end":48327,"line_start":168,"line_end":168,"column_start":8,"column_end":15},"name":"replace","qualname":"::imageops::replace","value":"fn <I, J> (bottom: &mut I, top: &J, x: u32, y: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replace the contents of an image at a given coordinate (x, y)\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":464},{"krate":0,"index":521}],"decl_id":null,"docs":" Input and output of images.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\io\\reader.rs","byte_start":103248,"byte_end":103254,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"Reader","qualname":"::io::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442}],"decl_id":null,"docs":" A multi-format image reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\io\\reader.rs","byte_start":103775,"byte_end":103778,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<Reader<R>>::new","value":"fn (reader: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new image reader without a preset format.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\io\\reader.rs","byte_start":103948,"byte_end":103959,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"name":"with_format","qualname":"<Reader<R>>::with_format","value":"fn (reader: R, format: ImageFormat) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a reader with specified format.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\io\\reader.rs","byte_start":104153,"byte_end":104159,"line_start":92,"line_end":92,"column_start":12,"column_end":18},"name":"format","qualname":"<Reader<R>>::format","value":"fn (&self) -> Option<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Get the currently determined format.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\io\\reader.rs","byte_start":104294,"byte_end":104304,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"set_format","qualname":"<Reader<R>>::set_format","value":"fn (&mut self, format: ImageFormat) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Supply the format as which to interpret the read image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\io\\reader.rs","byte_start":104634,"byte_end":104646,"line_start":105,"line_end":105,"column_start":12,"column_end":24},"name":"clear_format","qualname":"<Reader<R>>::clear_format","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove the current information on the image format.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\io\\reader.rs","byte_start":104733,"byte_end":104743,"line_start":110,"line_end":110,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Reader<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\io\\reader.rs","byte_start":105226,"byte_end":105230,"line_start":124,"line_end":124,"column_start":12,"column_end":16},"name":"open","qualname":"<Reader<BufReader<File>>>::open","value":"fn <P> (path: P) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Open a file to read, format will be guessed from path.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\io\\reader.rs","byte_start":106876,"byte_end":106895,"line_start":166,"line_end":166,"column_start":12,"column_end":31},"name":"with_guessed_format","qualname":"<Reader<R>>::with_guessed_format","value":"fn (mut self) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Make a format guess based on the content, replacing it on success.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\io\\reader.rs","byte_start":107853,"byte_end":107868,"line_start":192,"line_end":192,"column_start":12,"column_end":27},"name":"into_dimensions","qualname":"<Reader<R>>::into_dimensions","value":"fn (mut self) -> ImageResult<(u32, u32)>","parent":null,"children":[],"decl_id":null,"docs":" Read the image dimensions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\io\\reader.rs","byte_start":108262,"byte_end":108268,"line_start":202,"line_end":202,"column_start":12,"column_end":18},"name":"decode","qualname":"<Reader<R>>::decode","value":"fn (mut self) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Read the image (replaces `load`).","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\io\\free_functions.rs","byte_start":110339,"byte_end":110343,"line_start":65,"line_end":65,"column_start":8,"column_end":12},"name":"load","qualname":"::io::free_functions::load","value":"fn <R> (r: R, format: ImageFormat) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a Reader","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\io\\free_functions.rs","byte_start":110260,"byte_end":110286,"line_start":63,"line_end":63,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\io\\free_functions.rs","byte_start":119881,"byte_end":119893,"line_start":281,"line_end":281,"column_start":8,"column_end":20},"name":"guess_format","qualname":"::io::free_functions::guess_format","value":"fn (buffer: &[u8]) -> ImageResult<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Guess image format from memory block","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"flat","qualname":"::flat","value":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":527},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":543},{"krate":0,"index":546},{"krate":0,"index":3992},{"krate":0,"index":4000},{"krate":0,"index":3997},{"krate":0,"index":4003},{"krate":0,"index":4023},{"krate":0,"index":4022},{"krate":0,"index":4020},{"krate":0,"index":4016},{"krate":0,"index":4017},{"krate":0,"index":4013},{"krate":0,"index":4014},{"krate":0,"index":4010},{"krate":0,"index":4025},{"krate":0,"index":4051},{"krate":0,"index":4050},{"krate":0,"index":4048},{"krate":0,"index":4044},{"krate":0,"index":4045},{"krate":0,"index":4041},{"krate":0,"index":4042},{"krate":0,"index":4031},{"krate":0,"index":4029},{"krate":0,"index":549},{"krate":0,"index":572},{"krate":0,"index":576},{"krate":0,"index":618},{"krate":0,"index":4053},{"krate":0,"index":4062},{"krate":0,"index":4058},{"krate":0,"index":4066},{"krate":0,"index":4075},{"krate":0,"index":4071},{"krate":0,"index":4079},{"krate":0,"index":4101},{"krate":0,"index":4100},{"krate":0,"index":4098},{"krate":0,"index":4094},{"krate":0,"index":4095},{"krate":0,"index":4091},{"krate":0,"index":4092},{"krate":0,"index":4088},{"krate":0,"index":4103},{"krate":0,"index":4126},{"krate":0,"index":4125},{"krate":0,"index":4123},{"krate":0,"index":4120},{"krate":0,"index":4121},{"krate":0,"index":4117},{"krate":0,"index":4118},{"krate":0,"index":4114},{"krate":0,"index":623},{"krate":0,"index":636},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":655},{"krate":0,"index":659},{"krate":0,"index":671},{"krate":0,"index":683},{"krate":0,"index":691},{"krate":0,"index":696}],"decl_id":null,"docs":" Image representations for ffi.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3992},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":123861,"byte_end":123872,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"FlatSamples","qualname":"::flat::FlatSamples","value":"FlatSamples { samples, layout, color_hint }","parent":null,"children":[{"krate":0,"index":3994},{"krate":0,"index":3995},{"krate":0,"index":3996}],"decl_id":null,"docs":" A flat buffer over a (multi channel) image.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3994},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":123950,"byte_end":123957,"line_start":83,"line_end":83,"column_start":9,"column_end":16},"name":"samples","qualname":"::flat::FlatSamples::samples","value":"Buffer","parent":{"krate":0,"index":3992},"children":[],"decl_id":null,"docs":" Underlying linear container holding sample values.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3995},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":124041,"byte_end":124047,"line_start":86,"line_end":86,"column_start":9,"column_end":15},"name":"layout","qualname":"::flat::FlatSamples::layout","value":"flat::SampleLayout","parent":{"krate":0,"index":3992},"children":[],"decl_id":null,"docs":" A `repr(C)` description of the layout of buffer samples.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3996},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":124502,"byte_end":124512,"line_start":94,"line_end":94,"column_start":9,"column_end":19},"name":"color_hint","qualname":"::flat::FlatSamples::color_hint","value":"std::option::Option<color::ColorType>","parent":{"krate":0,"index":3992},"children":[],"decl_id":null,"docs":" Supplementary color information.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4003},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":124662,"byte_end":124674,"line_start":100,"line_end":100,"column_start":12,"column_end":24},"name":"SampleLayout","qualname":"::flat::SampleLayout","value":"SampleLayout { channels, channel_stride, width, width_stride, height, height_stride }","parent":null,"children":[{"krate":0,"index":4004},{"krate":0,"index":4005},{"krate":0,"index":4006},{"krate":0,"index":4007},{"krate":0,"index":4008},{"krate":0,"index":4009}],"decl_id":null,"docs":" A ffi compatible description of a sample buffer.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":124589,"byte_end":124599,"line_start":98,"line_end":98,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":4004},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":124758,"byte_end":124766,"line_start":102,"line_end":102,"column_start":9,"column_end":17},"name":"channels","qualname":"::flat::SampleLayout::channels","value":"u8","parent":{"krate":0,"index":4003},"children":[],"decl_id":null,"docs":" The number of channels in the color representation of the image.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4005},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":124852,"byte_end":124866,"line_start":105,"line_end":105,"column_start":9,"column_end":23},"name":"channel_stride","qualname":"::flat::SampleLayout::channel_stride","value":"usize","parent":{"krate":0,"index":4003},"children":[],"decl_id":null,"docs":" Add this to an index to get to the sample in the next channel.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4006},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":124928,"byte_end":124933,"line_start":108,"line_end":108,"column_start":9,"column_end":14},"name":"width","qualname":"::flat::SampleLayout::width","value":"u32","parent":{"krate":0,"index":4003},"children":[],"decl_id":null,"docs":" The width of the represented image.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4007},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":125020,"byte_end":125032,"line_start":111,"line_end":111,"column_start":9,"column_end":21},"name":"width_stride","qualname":"::flat::SampleLayout::width_stride","value":"usize","parent":{"krate":0,"index":4003},"children":[],"decl_id":null,"docs":" Add this to an index to get to the next sample in x-direction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4008},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":125095,"byte_end":125101,"line_start":114,"line_end":114,"column_start":9,"column_end":15},"name":"height","qualname":"::flat::SampleLayout::height","value":"u32","parent":{"krate":0,"index":4003},"children":[],"decl_id":null,"docs":" The height of the represented image.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4009},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":125188,"byte_end":125201,"line_start":117,"line_end":117,"column_start":9,"column_end":22},"name":"height_stride","qualname":"::flat::SampleLayout::height_stride","value":"usize","parent":{"krate":0,"index":4003},"children":[],"decl_id":null,"docs":" Add this to an index to get to the next sample in y-direction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":126176,"byte_end":126192,"line_start":141,"line_end":141,"column_start":12,"column_end":28},"name":"row_major_packed","qualname":"<SampleLayout>::row_major_packed","value":"fn (channels: u8, width: u32, height: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe a row-major image packed in all directions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":127443,"byte_end":127462,"line_start":170,"line_end":170,"column_start":12,"column_end":31},"name":"column_major_packed","qualname":"<SampleLayout>::column_major_packed","value":"fn (channels: u8, width: u32, height: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe a column-major image packed in all directions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":128078,"byte_end":128089,"line_start":187,"line_end":187,"column_start":12,"column_end":23},"name":"strides_cwh","qualname":"<SampleLayout>::strides_cwh","value":"fn (&self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the strides for indexing matrix-like `[(c, w, h)]`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":128406,"byte_end":128413,"line_start":195,"line_end":195,"column_start":12,"column_end":19},"name":"extents","qualname":"<SampleLayout>::extents","value":"fn (&self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the dimensions `(channels, width, height)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":128787,"byte_end":128793,"line_start":203,"line_end":203,"column_start":12,"column_end":18},"name":"bounds","qualname":"<SampleLayout>::bounds","value":"fn (&self) -> (u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Tuple of bounds in the order of coordinate inputs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":130946,"byte_end":130956,"line_start":258,"line_end":258,"column_start":12,"column_end":22},"name":"min_length","qualname":"<SampleLayout>::min_length","value":"fn (&self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":131288,"byte_end":131292,"line_start":268,"line_end":268,"column_start":12,"column_end":16},"name":"fits","qualname":"<SampleLayout>::fits","value":"fn (&self, len: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer of length `len` is large enough.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":132402,"byte_end":132421,"line_start":293,"line_end":293,"column_start":12,"column_end":31},"name":"has_aliased_samples","qualname":"<SampleLayout>::has_aliased_samples","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If there are any samples aliasing each other.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":133666,"byte_end":133675,"line_start":323,"line_end":323,"column_start":12,"column_end":21},"name":"is_normal","qualname":"<SampleLayout>::is_normal","value":"fn (&self, form: NormalForm) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer fulfills the requirements of a normal form.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":135373,"byte_end":135382,"line_start":378,"line_end":378,"column_start":12,"column_end":21},"name":"in_bounds","qualname":"<SampleLayout>::in_bounds","value":"fn (&self, channel: u8, x: u32, y: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that the pixel and the channel index are in bounds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":135656,"byte_end":135661,"line_start":385,"line_end":385,"column_start":12,"column_end":17},"name":"index","qualname":"<SampleLayout>::index","value":"fn (&self, channel: u8, x: u32, y: u32) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the index of a particular sample.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":136255,"byte_end":136276,"line_start":398,"line_end":398,"column_start":12,"column_end":33},"name":"index_ignoring_bounds","qualname":"<SampleLayout>::index_ignoring_bounds","value":"fn (&self, channel: usize, x: usize, y: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the theoretical position of sample (channel, x, y).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":137207,"byte_end":137222,"line_start":419,"line_end":419,"column_start":12,"column_end":27},"name":"in_bounds_index","qualname":"<SampleLayout>::in_bounds_index","value":"fn (&self, c: u8, x: u32, y: u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an index provided it is inbouds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":137750,"byte_end":137759,"line_start":430,"line_end":430,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<SampleLayout>::shrink_to","value":"fn (&mut self, channels: u8, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrink the image to the minimum of current and given extents.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":138432,"byte_end":138443,"line_start":457,"line_end":457,"column_start":12,"column_end":23},"name":"strides_cwh","qualname":"<FlatSamples<Buffer>>::strides_cwh","value":"fn (&self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the strides for indexing matrix-like `[(c, w, h)]`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":138725,"byte_end":138732,"line_start":465,"line_end":465,"column_start":12,"column_end":19},"name":"extents","qualname":"<FlatSamples<Buffer>>::extents","value":"fn (&self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the dimensions `(channels, width, height)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":139060,"byte_end":139066,"line_start":473,"line_end":473,"column_start":12,"column_end":18},"name":"bounds","qualname":"<FlatSamples<Buffer>>::bounds","value":"fn (&self) -> (u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Tuple of bounds in the order of coordinate inputs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":139180,"byte_end":139186,"line_start":478,"line_end":478,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<FlatSamples<Buffer>>::as_ref","value":"fn <T> (&self) -> FlatSamples<&[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference based version.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":139460,"byte_end":139466,"line_start":487,"line_end":487,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<FlatSamples<Buffer>>::as_mut","value":"fn <T> (&mut self) -> FlatSamples<&mut [T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference based version.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":139745,"byte_end":139751,"line_start":496,"line_end":496,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<FlatSamples<Buffer>>::to_vec","value":"fn <T> (&self) -> FlatSamples<Vec<T>>","parent":null,"children":[],"decl_id":null,"docs":" Copy the data into an owned vector.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":141024,"byte_end":141034,"line_start":527,"line_end":527,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<FlatSamples<Buffer>>::get_sample","value":"fn <T> (&self, channel: u8, x: u32, y: u32) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a single sample.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":142631,"byte_end":142645,"line_start":560,"line_end":560,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<FlatSamples<Buffer>>::get_mut_sample","value":"fn <T> (&mut self, channel: u8, x: u32, y: u32) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a single sample.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":143309,"byte_end":143316,"line_start":575,"line_end":575,"column_start":12,"column_end":19},"name":"as_view","qualname":"<FlatSamples<Buffer>>::as_view","value":"fn <P> (&self) -> Result<View<&[P::Subpixel], P>, Error>","parent":null,"children":[],"decl_id":null,"docs":" View this buffer as an image over some type of pixel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":144893,"byte_end":144917,"line_start":612,"line_end":612,"column_start":12,"column_end":36},"name":"as_view_with_mut_samples","qualname":"<FlatSamples<Buffer>>::as_view_with_mut_samples","value":"fn <P> (&mut self) -> Result<View<&mut [P::Subpixel], P>, Error>","parent":null,"children":[],"decl_id":null,"docs":" View this buffer but keep mutability at a sample level.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":146280,"byte_end":146291,"line_start":645,"line_end":645,"column_start":12,"column_end":23},"name":"as_view_mut","qualname":"<FlatSamples<Buffer>>::as_view_mut","value":"fn <P> (&mut self) -> Result<ViewMut<&mut [P::Subpixel], P>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Interpret this buffer as a mutable image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":147288,"byte_end":147296,"line_start":675,"line_end":675,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<FlatSamples<Buffer>>::as_slice","value":"fn <T> (&self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" View the samples as a slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":147607,"byte_end":147619,"line_start":683,"line_end":683,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<FlatSamples<Buffer>>::as_mut_slice","value":"fn <T> (&mut self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" View the samples as a slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":148050,"byte_end":148061,"line_start":692,"line_end":692,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<FlatSamples<Buffer>>::image_slice","value":"fn <T> (&self) -> Option<&[T]>","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":148478,"byte_end":148493,"line_start":707,"line_end":707,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<FlatSamples<Buffer>>::image_mut_slice","value":"fn <T> (&mut self) -> Option<&mut [T]>","parent":null,"children":[],"decl_id":null,"docs":" Mutable portion of the buffer that holds sample values.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":149147,"byte_end":149162,"line_start":726,"line_end":726,"column_start":12,"column_end":27},"name":"try_into_buffer","qualname":"<FlatSamples<Buffer>>::try_into_buffer","value":"fn <P> (self) -> Result<ImageBuffer<P, Buffer>, (Error, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Move the data into an image buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":151998,"byte_end":152008,"line_start":800,"line_end":800,"column_start":12,"column_end":22},"name":"min_length","qualname":"<FlatSamples<Buffer>>::min_length","value":"fn (&self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":152145,"byte_end":152149,"line_start":805,"line_end":805,"column_start":12,"column_end":16},"name":"fits","qualname":"<FlatSamples<Buffer>>::fits","value":"fn (&self, len: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer of length `len` is large enough.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":152570,"byte_end":152589,"line_start":814,"line_end":814,"column_start":12,"column_end":31},"name":"has_aliased_samples","qualname":"<FlatSamples<Buffer>>::has_aliased_samples","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If there are any samples aliasing each other.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":153170,"byte_end":153179,"line_start":825,"line_end":825,"column_start":12,"column_end":21},"name":"is_normal","qualname":"<FlatSamples<Buffer>>::is_normal","value":"fn (&self, form: NormalForm) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer fulfills the requirements of a normal form.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":153604,"byte_end":153613,"line_start":834,"line_end":834,"column_start":12,"column_end":21},"name":"in_bounds","qualname":"<FlatSamples<Buffer>>::in_bounds","value":"fn (&self, channel: u8, x: u32, y: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that the pixel and the channel index are in bounds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":153863,"byte_end":153868,"line_start":841,"line_end":841,"column_start":12,"column_end":17},"name":"index","qualname":"<FlatSamples<Buffer>>::index","value":"fn (&self, channel: u8, x: u32, y: u32) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the index of a particular sample.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":154347,"byte_end":154368,"line_start":850,"line_end":850,"column_start":12,"column_end":33},"name":"index_ignoring_bounds","qualname":"<FlatSamples<Buffer>>::index_ignoring_bounds","value":"fn (&self, channel: usize, x: usize, y: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the theoretical position of sample (x, y, channel).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":154800,"byte_end":154815,"line_start":859,"line_end":859,"column_start":12,"column_end":27},"name":"in_bounds_index","qualname":"<FlatSamples<Buffer>>::in_bounds_index","value":"fn (&self, channel: u8, x: u32, y: u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an index provided it is inbouds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":155250,"byte_end":155259,"line_start":868,"line_end":868,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<FlatSamples<Buffer>>::shrink_to","value":"fn (&mut self, channels: u8, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrink the image to the minimum of current and given extents.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":156145,"byte_end":156159,"line_start":894,"line_end":894,"column_start":12,"column_end":26},"name":"with_monocolor","qualname":"<FlatSamples<&'buf [Subpixel]>>::with_monocolor","value":"fn <P> (pixel: &'buf P, width: u32, height: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a monocolor image from a single pixel.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4053},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":157379,"byte_end":157383,"line_start":929,"line_end":929,"column_start":12,"column_end":16},"name":"View","qualname":"::flat::View","value":"View {  }","parent":null,"children":[{"krate":0,"index":4056},{"krate":0,"index":4057}],"decl_id":null,"docs":" A flat buffer that can be used as an image view.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4066},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":158229,"byte_end":158236,"line_start":952,"line_end":952,"column_start":12,"column_end":19},"name":"ViewMut","qualname":"::flat::ViewMut","value":"ViewMut {  }","parent":null,"children":[{"krate":0,"index":4069},{"krate":0,"index":4070}],"decl_id":null,"docs":" A mutable owning version of a flat buffer.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4080},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":158944,"byte_end":158952,"line_start":971,"line_end":971,"column_start":5,"column_end":13},"name":"TooLarge","qualname":"::flat::Error::TooLarge","value":"Error::TooLarge","parent":{"krate":0,"index":4079},"children":[],"decl_id":null,"docs":" The represented image was too large.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4082},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":159109,"byte_end":159127,"line_start":976,"line_end":976,"column_start":5,"column_end":23},"name":"NormalFormRequired","qualname":"::flat::Error::NormalFormRequired","value":"Error::NormalFormRequired(NormalForm)","parent":{"krate":0,"index":4079},"children":[],"decl_id":null,"docs":" The represented image can not use this representation.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4085},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":159736,"byte_end":159746,"line_start":987,"line_end":987,"column_start":5,"column_end":15},"name":"WrongColor","qualname":"::flat::Error::WrongColor","value":"Error::WrongColor(ColorType)","parent":{"krate":0,"index":4079},"children":[],"decl_id":null,"docs":" The color format did not match the channel count.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4079},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":158809,"byte_end":158814,"line_start":967,"line_end":967,"column_start":10,"column_end":15},"name":"Error","qualname":"::flat::Error","value":"Error::{TooLarge, NormalFormRequired, WrongColor}","parent":null,"children":[{"krate":0,"index":4080},{"krate":0,"index":4082},{"krate":0,"index":4085}],"decl_id":null,"docs":" Denotes invalid flat sample buffers when trying to convert to stricter types.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4104},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":160245,"byte_end":160254,"line_start":1000,"line_end":1000,"column_start":5,"column_end":14},"name":"Unaliased","qualname":"::flat::NormalForm::Unaliased","value":"NormalForm::Unaliased","parent":{"krate":0,"index":4103},"children":[],"decl_id":null,"docs":" No pixel aliases another.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4106},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":160484,"byte_end":160495,"line_start":1006,"line_end":1006,"column_start":5,"column_end":16},"name":"PixelPacked","qualname":"::flat::NormalForm::PixelPacked","value":"NormalForm::PixelPacked","parent":{"krate":0,"index":4103},"children":[],"decl_id":null,"docs":" At least pixels are packed.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4108},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":160779,"byte_end":160790,"line_start":1013,"line_end":1013,"column_start":5,"column_end":16},"name":"ImagePacked","qualname":"::flat::NormalForm::ImagePacked","value":"NormalForm::ImagePacked","parent":{"krate":0,"index":4103},"children":[],"decl_id":null,"docs":" All samples are packed.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4110},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":161000,"byte_end":161014,"line_start":1019,"line_end":1019,"column_start":5,"column_end":19},"name":"RowMajorPacked","qualname":"::flat::NormalForm::RowMajorPacked","value":"NormalForm::RowMajorPacked","parent":{"krate":0,"index":4103},"children":[],"decl_id":null,"docs":" The samples are in row-major form and all samples are packed.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4112},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":161230,"byte_end":161247,"line_start":1025,"line_end":1025,"column_start":5,"column_end":22},"name":"ColumnMajorPacked","qualname":"::flat::NormalForm::ColumnMajorPacked","value":"NormalForm::ColumnMajorPacked","parent":{"krate":0,"index":4103},"children":[],"decl_id":null,"docs":" The samples are in column-major form and all samples are packed.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4103},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":160005,"byte_end":160015,"line_start":995,"line_end":995,"column_start":10,"column_end":20},"name":"NormalForm","qualname":"::flat::NormalForm","value":"NormalForm::{Unaliased, PixelPacked, ImagePacked, RowMajorPacked, ColumnMajorPacked}","parent":null,"children":[{"krate":0,"index":4104},{"krate":0,"index":4106},{"krate":0,"index":4108},{"krate":0,"index":4110},{"krate":0,"index":4112}],"decl_id":null,"docs":" Different normal forms of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":161455,"byte_end":161465,"line_start":1035,"line_end":1035,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<View<Buffer, P>>::into_inner","value":"fn (self) -> FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Take out the sample buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":161948,"byte_end":161952,"line_start":1045,"line_end":1045,"column_start":12,"column_end":16},"name":"flat","qualname":"<View<Buffer, P>>::flat","value":"fn (&self) -> &FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner sample descriptor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":162231,"byte_end":162238,"line_start":1053,"line_end":1053,"column_start":12,"column_end":19},"name":"samples","qualname":"<View<Buffer, P>>::samples","value":"fn (&self) -> &Buffer","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":162557,"byte_end":162567,"line_start":1061,"line_end":1061,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<View<Buffer, P>>::get_sample","value":"fn (&self, channel: u8, x: u32, y: u32) -> Option<&P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a selected subpixel if it is in-bounds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":163441,"byte_end":163455,"line_start":1079,"line_end":1079,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<View<Buffer, P>>::get_mut_sample","value":"fn (&mut self, channel: u8, x: u32, y: u32) -> Option<&mut P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a selected subpixel if it is in-bounds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":164032,"byte_end":164042,"line_start":1094,"line_end":1094,"column_start":12,"column_end":22},"name":"min_length","qualname":"<View<Buffer, P>>::min_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":164376,"byte_end":164387,"line_start":1102,"line_end":1102,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<View<Buffer, P>>::image_slice","value":"fn (&self) -> &[P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":164844,"byte_end":164859,"line_start":1111,"line_end":1111,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<View<Buffer, P>>::image_mut_slice","value":"fn (&mut self) -> &mut [P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the mutable portion of the buffer that holds sample values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":165382,"byte_end":165391,"line_start":1123,"line_end":1123,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<View<Buffer, P>>::shrink_to","value":"fn (&mut self, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrink the inner image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":166395,"byte_end":166406,"line_start":1146,"line_end":1146,"column_start":12,"column_end":23},"name":"try_upgrade","qualname":"<View<Buffer, P>>::try_upgrade","value":"fn (self) -> Result<ViewMut<Buffer, P>, (Error, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this into an image with mutable pixels.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":167047,"byte_end":167057,"line_start":1168,"line_end":1168,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ViewMut<Buffer, P>>::into_inner","value":"fn (self) -> FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Take out the sample buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":167541,"byte_end":167545,"line_start":1178,"line_end":1178,"column_start":12,"column_end":16},"name":"flat","qualname":"<ViewMut<Buffer, P>>::flat","value":"fn (&self) -> &FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the sample buffer descriptor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":167918,"byte_end":167925,"line_start":1187,"line_end":1187,"column_start":12,"column_end":19},"name":"samples","qualname":"<ViewMut<Buffer, P>>::samples","value":"fn (&self) -> &Buffer","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":168167,"byte_end":168177,"line_start":1194,"line_end":1194,"column_start":12,"column_end":22},"name":"min_length","qualname":"<ViewMut<Buffer, P>>::min_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":168488,"byte_end":168498,"line_start":1202,"line_end":1202,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<ViewMut<Buffer, P>>::get_sample","value":"fn (&self, channel: u8, x: u32, y: u32) -> Option<&P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a selected subpixel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":169123,"byte_end":169137,"line_start":1218,"line_end":1218,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<ViewMut<Buffer, P>>::get_mut_sample","value":"fn (&mut self, channel: u8, x: u32, y: u32) -> Option<&mut P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a selected sample.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":169748,"byte_end":169759,"line_start":1232,"line_end":1232,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<ViewMut<Buffer, P>>::image_slice","value":"fn (&self) -> &[P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":169958,"byte_end":169973,"line_start":1237,"line_end":1237,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<ViewMut<Buffer, P>>::image_mut_slice","value":"fn (&mut self) -> &mut [P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the mutable buffer that holds sample values.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":170441,"byte_end":170450,"line_start":1247,"line_end":1247,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<ViewMut<Buffer, P>>::shrink_to","value":"fn (&mut self, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrink the inner image.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":698},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bmp","qualname":"::bmp","value":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\mod.rs","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":909}],"decl_id":null,"docs":"  Decoding and Encoding of BMP Images","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8676,"byte_end":8699,"line_start":212,"line_end":212,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":200980,"byte_end":200990,"line_start":545,"line_end":545,"column_start":12,"column_end":22},"name":"BmpDecoder","qualname":"::bmp::decoder::BmpDecoder","value":"BmpDecoder {  }","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822}],"decl_id":null,"docs":" A bmp decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":203558,"byte_end":203561,"line_start":632,"line_end":632,"column_start":12,"column_end":15},"name":"new","qualname":"<BmpDecoder<R>>::new","value":"fn (reader: R) -> ImageResult<BmpDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":215359,"byte_end":215386,"line_start":945,"line_end":945,"column_start":12,"column_end":39},"name":"read_metadata_in_ico_format","qualname":"<BmpDecoder<R>>::read_metadata_in_ico_format","value":"fn (&mut self) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":215305,"byte_end":215328,"line_start":943,"line_end":943,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":885},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":235315,"byte_end":235324,"line_start":1419,"line_end":1419,"column_start":12,"column_end":21},"name":"BmpReader","qualname":"::bmp::decoder::BmpReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":926},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\encoder.rs","byte_start":237950,"byte_end":237960,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"BMPEncoder","qualname":"::bmp::encoder::BMPEncoder","value":"BMPEncoder {  }","parent":null,"children":[{"krate":0,"index":929}],"decl_id":null,"docs":" The representation of a BMP encoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\encoder.rs","byte_start":238119,"byte_end":238122,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<BMPEncoder>::new","value":"fn (w: &'a mut W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\encoder.rs","byte_start":238330,"byte_end":238336,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"encode","qualname":"<BMPEncoder>::encode","value":"fn (&mut self, image: &[u8], width: u32, height: u32, c: color::ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dds.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dds","qualname":"::dds","value":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dds.rs","parent":null,"children":[{"krate":0,"index":949},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":961},{"krate":0,"index":968},{"krate":0,"index":4316},{"krate":0,"index":4349},{"krate":0,"index":4348},{"krate":0,"index":4346},{"krate":0,"index":4343},{"krate":0,"index":4339},{"krate":0,"index":4340},{"krate":0,"index":4336},{"krate":0,"index":4337},{"krate":0,"index":4330},{"krate":0,"index":4328},{"krate":0,"index":971},{"krate":0,"index":973},{"krate":0,"index":975},{"krate":0,"index":4351},{"krate":0,"index":4361},{"krate":0,"index":4363},{"krate":0,"index":4372},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":992}],"decl_id":null,"docs":"  Decoding of DDS images","sig":null,"attributes":[{"value":"cfg(feature = \"dds\")","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8713,"byte_end":8736,"line_start":214,"line_end":214,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":985},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dds.rs","byte_start":253999,"byte_end":254009,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"DdsDecoder","qualname":"::dds::DdsDecoder","value":"DdsDecoder {  }","parent":null,"children":[{"krate":0,"index":987}],"decl_id":null,"docs":" The representation of a DDS decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dds.rs","byte_start":254153,"byte_end":254156,"line_start":161,"line_end":161,"column_start":12,"column_end":15},"name":"new","qualname":"<DdsDecoder<R>>::new","value":"fn (mut r: R) -> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream `r`\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1001},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dxt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dxt","qualname":"::dxt","value":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dxt.rs","parent":null,"children":[{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1015},{"krate":0,"index":4374},{"krate":0,"index":4390},{"krate":0,"index":4389},{"krate":0,"index":4387},{"krate":0,"index":4384},{"krate":0,"index":4385},{"krate":0,"index":4381},{"krate":0,"index":4382},{"krate":0,"index":1021},{"krate":0,"index":1025},{"krate":0,"index":1032},{"krate":0,"index":1036},{"krate":0,"index":1045},{"krate":0,"index":1053},{"krate":0,"index":1057},{"krate":0,"index":1061},{"krate":0,"index":1064},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1077},{"krate":0,"index":1080},{"krate":0,"index":1082},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1087},{"krate":0,"index":1089},{"krate":0,"index":1091},{"krate":0,"index":1102},{"krate":0,"index":1106},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1114},{"krate":0,"index":1116}],"decl_id":null,"docs":"  Decoding of DXT (S3TC) compression","sig":null,"attributes":[{"value":"cfg(feature = \"dxt\")","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8750,"byte_end":8773,"line_start":216,"line_end":216,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4375},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dxt.rs","byte_start":257093,"byte_end":257097,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"DXT1","qualname":"::dxt::DXTVariant::DXT1","value":"DXTVariant::DXT1","parent":{"krate":0,"index":4374},"children":[],"decl_id":null,"docs":" The DXT1 format. 48 bytes of RGB data in a 4x4 pixel square is\n compressed into an 8 byte block of DXT1 data\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4377},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dxt.rs","byte_start":257228,"byte_end":257232,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"DXT3","qualname":"::dxt::DXTVariant::DXT3","value":"DXTVariant::DXT3","parent":{"krate":0,"index":4374},"children":[],"decl_id":null,"docs":" The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel square is\n compressed into a 16 byte block of DXT3 data\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4379},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dxt.rs","byte_start":257363,"byte_end":257367,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"DXT5","qualname":"::dxt::DXTVariant::DXT5","value":"DXTVariant::DXT5","parent":{"krate":0,"index":4374},"children":[],"decl_id":null,"docs":" The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel square is\n compressed into a 16 byte block of DXT5 data\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4374},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dxt.rs","byte_start":256952,"byte_end":256962,"line_start":21,"line_end":21,"column_start":10,"column_end":20},"name":"DXTVariant","qualname":"::dxt::DXTVariant","value":"DXTVariant::{DXT1, DXT3, DXT5}","parent":null,"children":[{"krate":0,"index":4375},{"krate":0,"index":4377},{"krate":0,"index":4379}],"decl_id":null,"docs":" What version of DXT compression are we using?\n Note that DXT2 and DXT4 are left away as they're\n just DXT3 and DXT5 with premultiplied alpha\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dxt.rs","byte_start":257988,"byte_end":257998,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"color_type","qualname":"<DXTVariant>::color_type","value":"fn (self) -> ColorType","parent":null,"children":[],"decl_id":null,"docs":" Returns the color type that is stored in this DXT variant\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1025},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dxt.rs","byte_start":258205,"byte_end":258215,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"DxtDecoder","qualname":"::dxt::DxtDecoder","value":"DxtDecoder {  }","parent":null,"children":[{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031}],"decl_id":null,"docs":" DXT decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dxt.rs","byte_start":258795,"byte_end":258798,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<DxtDecoder<R>>::new","value":"fn (r: R, width: u32, height: u32, variant: DXTVariant) -> Result<DxtDecoder<R>, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new DXT decoder that decodes from the stream ```r```.\n As DXT is often stored as raw buffers with the width/height\n somewhere else the width and height of the image need\n to be passed in ```width``` and ```height```, as well as the\n DXT variant in ```variant```.\n width and height are required to be powers of 2 and at least 4.\n otherwise an error will be returned\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1053},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dxt.rs","byte_start":261894,"byte_end":261903,"line_start":175,"line_end":175,"column_start":12,"column_end":21},"name":"DXTReader","qualname":"::dxt::DXTReader","value":"DXTReader {  }","parent":null,"children":[{"krate":0,"index":1055},{"krate":0,"index":1056}],"decl_id":null,"docs":" DXT reader\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1061},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dxt.rs","byte_start":262215,"byte_end":262225,"line_start":187,"line_end":187,"column_start":12,"column_end":22},"name":"DXTEncoder","qualname":"::dxt::DXTEncoder","value":"DXTEncoder {  }","parent":null,"children":[{"krate":0,"index":1063}],"decl_id":null,"docs":" DXT encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dxt.rs","byte_start":262356,"byte_end":262359,"line_start":193,"line_end":193,"column_start":12,"column_end":15},"name":"new","qualname":"<DXTEncoder<W>>::new","value":"fn (w: W) -> DXTEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dxt.rs","byte_start":262623,"byte_end":262629,"line_start":201,"line_end":201,"column_start":12,"column_end":18},"name":"encode","qualname":"<DXTEncoder<W>>::encode","value":"fn (mut self, data: &[u8], width: u32, height: u32, variant: DXTVariant) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image data ```data```\n that has dimensions ```width``` and ```height```\n in ```DXTVariant``` ```variant```\n data is assumed to be in variant.color_type()\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1118},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gif","qualname":"::gif","value":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","parent":null,"children":[{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1131},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1140},{"krate":0,"index":1148},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1157},{"krate":0,"index":1160},{"krate":0,"index":1165},{"krate":0,"index":1169},{"krate":0,"index":1179},{"krate":0,"index":1185},{"krate":0,"index":1188},{"krate":0,"index":1194},{"krate":0,"index":1198},{"krate":0,"index":1202},{"krate":0,"index":1216}],"decl_id":null,"docs":"  Decoding of GIF Images","sig":null,"attributes":[{"value":"cfg(feature = \"gif\")","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8787,"byte_end":8810,"line_start":218,"line_end":218,"column_start":1,"column_end":24}},{"value":"allow(clippy :: while_let_loop)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","byte_start":285441,"byte_end":285474,"line_start":27,"line_end":27,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1154},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","byte_start":286059,"byte_end":286069,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"GifDecoder","qualname":"::gif::GifDecoder","value":"GifDecoder {  }","parent":null,"children":[{"krate":0,"index":1156}],"decl_id":null,"docs":" GIF decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","byte_start":286220,"byte_end":286223,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<GifDecoder<R>>::new","value":"fn (r: R) -> ImageResult<GifDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes the input steam ```r```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1160},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","byte_start":286524,"byte_end":286533,"line_start":64,"line_end":64,"column_start":12,"column_end":21},"name":"GifReader","qualname":"::gif::GifReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1198},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","byte_start":295492,"byte_end":295499,"line_start":293,"line_end":293,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::gif::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":1200},{"krate":0,"index":1201}],"decl_id":null,"docs":" GIF encoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","byte_start":295649,"byte_end":295652,"line_start":300,"line_end":300,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder<W>>::new","value":"fn (w: W) -> Encoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new GIF encoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","byte_start":295807,"byte_end":295813,"line_start":308,"line_end":308,"column_start":12,"column_end":18},"name":"encode","qualname":"<Encoder<W>>::encode","value":"fn (&mut self, data: &[u8], width: u32, height: u32, color: ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode a single image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","byte_start":296528,"byte_end":296540,"line_start":329,"line_end":329,"column_start":12,"column_end":24},"name":"encode_frame","qualname":"<Encoder<W>>::encode_frame","value":"fn (&mut self, img_frame: animation::Frame) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode one frame of animation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","byte_start":296826,"byte_end":296839,"line_start":336,"line_end":336,"column_start":12,"column_end":25},"name":"encode_frames","qualname":"<Encoder<W>>::encode_frames","value":"fn <F> (&mut self, frames: F) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes Frames.\n Consider using `try_encode_frames` instead to encode an `animation::Frames` like iterator.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1209},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","byte_start":297317,"byte_end":297334,"line_start":349,"line_end":349,"column_start":12,"column_end":29},"name":"try_encode_frames","qualname":"<Encoder<W>>::try_encode_frames","value":"fn <F> (&mut self, frames: F) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Try to encode a collection of `ImageResult<animation::Frame>` objects.\n Use this function to encode an `animation::Frames` like iterator.\n Whenever an `Err` item is encountered, that value is returned without further actions.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1219},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hdr","qualname":"::hdr","value":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\mod.rs","parent":null,"children":[{"krate":0,"index":1220},{"krate":0,"index":1390},{"krate":0,"index":1441},{"krate":0,"index":1442}],"decl_id":null,"docs":"  Decoding of Radiance HDR Images","sig":null,"attributes":[{"value":"cfg(feature = \"hdr\")","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8824,"byte_end":8847,"line_start":220,"line_end":220,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":4465},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":304706,"byte_end":304716,"line_start":118,"line_end":118,"column_start":12,"column_end":22},"name":"HDRAdapter","qualname":"::hdr::decoder::HDRAdapter","value":"HDRAdapter {  }","parent":null,"children":[{"krate":0,"index":4467},{"krate":0,"index":4468}],"decl_id":null,"docs":" Adapter to conform to ```ImageDecoder``` trait\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":304889,"byte_end":304892,"line_start":126,"line_end":126,"column_start":12,"column_end":15},"name":"new","qualname":"<HDRAdapter<R>>::new","value":"fn (r: R) -> ImageResult<HDRAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates adapter\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":305165,"byte_end":305178,"line_start":136,"line_end":136,"column_start":12,"column_end":25},"name":"new_nonstrict","qualname":"<HDRAdapter<R>>::new_nonstrict","value":"fn (r: R) -> ImageResult<HDRAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Allows reading old Radiance HDR images\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1272},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":306155,"byte_end":306164,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"name":"HdrReader","qualname":"::hdr::decoder::HdrReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1296},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":307608,"byte_end":307617,"line_start":216,"line_end":216,"column_start":11,"column_end":20},"name":"SIGNATURE","qualname":"::hdr::decoder::SIGNATURE","value":"&[u8]","parent":null,"children":[],"decl_id":null,"docs":" Radiance HDR file signature\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4472},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":307735,"byte_end":307745,"line_start":221,"line_end":221,"column_start":12,"column_end":22},"name":"HdrDecoder","qualname":"::hdr::decoder::HdrDecoder","value":"HdrDecoder {  }","parent":null,"children":[{"krate":0,"index":4474},{"krate":0,"index":4475},{"krate":0,"index":4476},{"krate":0,"index":4477}],"decl_id":null,"docs":" An Radiance HDR decoder\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4481},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":307970,"byte_end":307980,"line_start":231,"line_end":231,"column_start":12,"column_end":22},"name":"RGBE8Pixel","qualname":"::hdr::decoder::RGBE8Pixel","value":"RGBE8Pixel { c, e }","parent":null,"children":[{"krate":0,"index":4482},{"krate":0,"index":4484}],"decl_id":null,"docs":" Refer to [wikipedia](https://en.wikipedia.org/wiki/RGBE_image_format)\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":307894,"byte_end":307904,"line_start":229,"line_end":229,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":4482},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":308016,"byte_end":308017,"line_start":233,"line_end":233,"column_start":9,"column_end":10},"name":"c","qualname":"::hdr::decoder::RGBE8Pixel::c","value":"[u8; _]","parent":{"krate":0,"index":4481},"children":[],"decl_id":null,"docs":" Color components\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4484},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":308053,"byte_end":308054,"line_start":235,"line_end":235,"column_start":9,"column_end":10},"name":"e","qualname":"::hdr::decoder::RGBE8Pixel::e","value":"u8","parent":{"krate":0,"index":4481},"children":[],"decl_id":null,"docs":" Exponent\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1298},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":308115,"byte_end":308120,"line_start":239,"line_end":239,"column_start":8,"column_end":13},"name":"rgbe8","qualname":"::hdr::decoder::rgbe8","value":"fn (r: u8, g: u8, b: u8, e: u8) -> RGBE8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Creates ```RGBE8Pixel``` from components\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1300},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":308309,"byte_end":308315,"line_start":246,"line_end":246,"column_start":12,"column_end":18},"name":"to_hdr","qualname":"<RGBE8Pixel>::to_hdr","value":"fn (self) -> Rgb<f32>","parent":null,"children":[],"decl_id":null,"docs":" Converts ```RGBE8Pixel``` into ```Rgb<f32>``` linearly\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":308288,"byte_end":308297,"line_start":245,"line_end":245,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1301},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":309075,"byte_end":309081,"line_start":268,"line_end":268,"column_start":12,"column_end":18},"name":"to_ldr","qualname":"<RGBE8Pixel>::to_ldr","value":"fn <T> (self) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts ```RGBE8Pixel``` into ```Rgb<T>``` with scale=1 and gamma=2.2","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":309054,"byte_end":309063,"line_start":267,"line_end":267,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":309467,"byte_end":309485,"line_start":281,"line_end":281,"column_start":12,"column_end":30},"name":"to_ldr_scale_gamma","qualname":"<RGBE8Pixel>::to_ldr_scale_gamma","value":"fn <T> (self, scale: f32, gamma: f32) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts RGBE8Pixel into Rgb<T> using provided scale and gamma","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":309446,"byte_end":309455,"line_start":280,"line_end":280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1309},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":310693,"byte_end":310696,"line_start":312,"line_end":312,"column_start":12,"column_end":15},"name":"new","qualname":"<HdrDecoder<R>>::new","value":"fn (reader: R) -> ImageResult<HdrDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```r```\n if the header is valid, creates HdrDecoder\n strict mode is enabled\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1310},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":311104,"byte_end":311119,"line_start":323,"line_end":323,"column_start":12,"column_end":27},"name":"with_strictness","qualname":"<HdrDecoder<R>>::with_strictness","value":"fn (mut reader: R, strict: bool) -> ImageResult<HdrDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```reader```,\n if the header is valid, creates ```HdrDecoder```.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":313672,"byte_end":313680,"line_start":390,"line_end":390,"column_start":12,"column_end":20},"name":"metadata","qualname":"<HdrDecoder<R>>::metadata","value":"fn (&self) -> HDRMetadata","parent":null,"children":[],"decl_id":null,"docs":" Returns file metadata. Refer to ```HDRMetadata``` for details.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1313},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":313811,"byte_end":313828,"line_start":395,"line_end":395,"column_start":12,"column_end":29},"name":"read_image_native","qualname":"<HdrDecoder<R>>::read_image_native","value":"fn (mut self) -> ImageResult<Vec<RGBE8Pixel>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of RGBE8 pixels\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":314461,"byte_end":314481,"line_start":410,"line_end":410,"column_start":12,"column_end":32},"name":"read_image_transform","qualname":"<HdrDecoder<R>>::read_image_transform","value":"fn <T, F> (mut self, f: F, output_slice: &mut [T]) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of transformed pixels\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1319},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":315620,"byte_end":315634,"line_start":446,"line_end":446,"column_start":12,"column_end":26},"name":"read_image_ldr","qualname":"<HdrDecoder<R>>::read_image_ldr","value":"fn (self) -> ImageResult<Vec<Rgb<u8>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<u8> pixels.\n scale = 1, gamma = 2.2\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":315938,"byte_end":315952,"line_start":454,"line_end":454,"column_start":12,"column_end":26},"name":"read_image_hdr","qualname":"<HdrDecoder<R>>::read_image_hdr","value":"fn (self) -> ImageResult<Vec<Rgb<f32>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<f32> pixels.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1328},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":316763,"byte_end":316786,"line_start":479,"line_end":479,"column_start":12,"column_end":35},"name":"HDRImageDecoderIterator","qualname":"::hdr::decoder::HDRImageDecoderIterator","value":"HDRImageDecoderIterator {  }","parent":null,"children":[{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336}],"decl_id":null,"docs":" Scanline buffered pixel by pixel iterator\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4501},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":324351,"byte_end":324362,"line_start":701,"line_end":701,"column_start":12,"column_end":23},"name":"HDRMetadata","qualname":"::hdr::decoder::HDRMetadata","value":"HDRMetadata { width, height, orientation, exposure, color_correction, pixel_aspect_ratio, custom_attributes }","parent":null,"children":[{"krate":0,"index":4502},{"krate":0,"index":4503},{"krate":0,"index":4504},{"krate":0,"index":4505},{"krate":0,"index":4506},{"krate":0,"index":4507},{"krate":0,"index":4508}],"decl_id":null,"docs":" Metadata for Radiance HDR image\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4502},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":324500,"byte_end":324505,"line_start":704,"line_end":704,"column_start":9,"column_end":14},"name":"width","qualname":"::hdr::decoder::HDRMetadata::width","value":"u32","parent":{"krate":0,"index":4501},"children":[],"decl_id":null,"docs":" Width of decoded image. It could be either scanline length,\n or scanline count, depending on image orientation.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4503},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":324584,"byte_end":324590,"line_start":706,"line_end":706,"column_start":9,"column_end":15},"name":"height","qualname":"::hdr::decoder::HDRMetadata::height","value":"u32","parent":{"krate":0,"index":4501},"children":[],"decl_id":null,"docs":" Height of decoded image. It depends on orientation too.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4504},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":324865,"byte_end":324876,"line_start":710,"line_end":710,"column_start":9,"column_end":20},"name":"orientation","qualname":"::hdr::decoder::HDRMetadata::orientation","value":"((i8, i8), (i8, i8))","parent":{"krate":0,"index":4501},"children":[],"decl_id":null,"docs":" Orientation matrix. For standard orientation it is ((1,0),(0,1)) - left to right, top to bottom.\n First pair tells how resulting pixel coordinates change along a scanline.\n Second pair tells how they change from one scanline to the next.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4505},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":325101,"byte_end":325109,"line_start":715,"line_end":715,"column_start":9,"column_end":17},"name":"exposure","qualname":"::hdr::decoder::HDRMetadata::exposure","value":"std::option::Option<f32>","parent":{"krate":0,"index":4501},"children":[],"decl_id":null,"docs":" Divide color values by exposure to get to get physical radiance in\n watts/steradian/m<sup>2</sup>","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4506},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":325353,"byte_end":325369,"line_start":720,"line_end":720,"column_start":9,"column_end":25},"name":"color_correction","qualname":"::hdr::decoder::HDRMetadata::color_correction","value":"std::option::Option<(f32, f32, f32)>","parent":{"krate":0,"index":4501},"children":[],"decl_id":null,"docs":" Divide color values by corresponding tuple member (r, g, b) to get to get physical radiance\n in watts/steradian/m<sup>2</sup>","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4507},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":325448,"byte_end":325466,"line_start":722,"line_end":722,"column_start":9,"column_end":27},"name":"pixel_aspect_ratio","qualname":"::hdr::decoder::HDRMetadata::pixel_aspect_ratio","value":"std::option::Option<f32>","parent":{"krate":0,"index":4501},"children":[],"decl_id":null,"docs":" Pixel height divided by pixel width\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4508},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":325695,"byte_end":325712,"line_start":726,"line_end":726,"column_start":9,"column_end":26},"name":"custom_attributes","qualname":"::hdr::decoder::HDRMetadata::custom_attributes","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":4501},"children":[],"decl_id":null,"docs":" All lines contained in image header are put here. Ordering of lines is preserved.\n Lines in the form \"key=value\" are represented as (\"key\", \"value\").\n All other lines are (\"\", \"line\")\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1383},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":334804,"byte_end":334817,"line_start":947,"line_end":947,"column_start":8,"column_end":21},"name":"read_raw_file","qualname":"::hdr::decoder::read_raw_file","value":"fn <P> (path: P) -> ::std::io::Result<Vec<Rgb<f32>>>","parent":null,"children":[],"decl_id":null,"docs":" Helper function for reading raw 3-channel f32 images\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1401},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\encoder.rs","byte_start":335638,"byte_end":335648,"line_start":8,"line_end":8,"column_start":12,"column_end":22},"name":"HDREncoder","qualname":"::hdr::encoder::HDREncoder","value":"HDREncoder {  }","parent":null,"children":[{"krate":0,"index":1403}],"decl_id":null,"docs":" Radiance HDR encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1406},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\encoder.rs","byte_start":335740,"byte_end":335743,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"new","qualname":"<HDREncoder<W>>::new","value":"fn (w: W) -> HDREncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1407},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\encoder.rs","byte_start":335906,"byte_end":335912,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"name":"encode","qualname":"<HDREncoder<W>>::encode","value":"fn (mut self, data: &[Rgb<f32>], width: usize, height: usize) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```data```\n that has dimensions ```width``` and ```height```\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1439},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\encoder.rs","byte_start":343342,"byte_end":343350,"line_start":228,"line_end":228,"column_start":8,"column_end":16},"name":"to_rgbe8","qualname":"::hdr::encoder::to_rgbe8","value":"fn (pix: Rgb<f32>) -> RGBE8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Converts ```Rgb<f32>``` into ```RGBE8Pixel```\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1443},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ico","qualname":"::ico","value":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\mod.rs","parent":null,"children":[{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1537}],"decl_id":null,"docs":"  Decoding and Encoding of ICO files","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8861,"byte_end":8884,"line_start":222,"line_end":222,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1487},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\decoder.rs","byte_start":355155,"byte_end":355165,"line_start":105,"line_end":105,"column_start":12,"column_end":22},"name":"IcoDecoder","qualname":"::ico::decoder::IcoDecoder","value":"IcoDecoder {  }","parent":null,"children":[{"krate":0,"index":1489},{"krate":0,"index":1490}],"decl_id":null,"docs":" An ico decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1501},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\decoder.rs","byte_start":355663,"byte_end":355666,"line_start":131,"line_end":131,"column_start":12,"column_end":15},"name":"new","qualname":"<IcoDecoder<R>>::new","value":"fn (mut r: R) -> ImageResult<IcoDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1520},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\decoder.rs","byte_start":359134,"byte_end":359143,"line_start":248,"line_end":248,"column_start":12,"column_end":21},"name":"IcoReader","qualname":"::ico::decoder::IcoReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1551},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\encoder.rs","byte_start":364709,"byte_end":364719,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"ICOEncoder","qualname":"::ico::encoder::ICOEncoder","value":"ICOEncoder {  }","parent":null,"children":[{"krate":0,"index":1553}],"decl_id":null,"docs":" ICO encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\encoder.rs","byte_start":364851,"byte_end":364854,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<ICOEncoder<W>>::new","value":"fn (w: W) -> ICOEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1557},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\encoder.rs","byte_start":365152,"byte_end":365158,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"encode","qualname":"<ICOEncoder<W>>::encode","value":"fn (mut self, data: &[u8], width: u32, height: u32, color: ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image``` that has dimensions ```width``` and\n ```height``` and ```ColorType``` ```c```.  The dimensions of the image\n must be between 1 and 256 (inclusive) or an error will be returned.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1567},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"jpeg","qualname":"::jpeg","value":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\mod.rs","parent":null,"children":[{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1573},{"krate":0,"index":1622},{"krate":0,"index":1765},{"krate":0,"index":1768}],"decl_id":null,"docs":" Decoding and Encoding of JPEG Images","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8898,"byte_end":8922,"line_start":224,"line_end":224,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1591},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\decoder.rs","byte_start":368256,"byte_end":368267,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"JpegDecoder","qualname":"::jpeg::decoder::JpegDecoder","value":"JpegDecoder {  }","parent":null,"children":[{"krate":0,"index":1593},{"krate":0,"index":1594}],"decl_id":null,"docs":" JPEG decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1597},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\decoder.rs","byte_start":368446,"byte_end":368449,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<JpegDecoder<R>>::new","value":"fn (r: R) -> ImageResult<JpegDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1598},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\decoder.rs","byte_start":369007,"byte_end":369017,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"JpegReader","qualname":"::jpeg::decoder::JpegReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4634},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\encoder.rs","byte_start":400685,"byte_end":400701,"line_start":280,"line_end":280,"column_start":5,"column_end":21},"name":"PixelAspectRatio","qualname":"::jpeg::encoder::PixelDensityUnit::PixelAspectRatio","value":"PixelDensityUnit::PixelAspectRatio","parent":{"krate":0,"index":4633},"children":[],"decl_id":null,"docs":" Represents the absence of a unit, the values indicate only a\n [pixel aspect ratio](https://en.wikipedia.org/wiki/Pixel_aspect_ratio)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4636},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\encoder.rs","byte_start":400742,"byte_end":400748,"line_start":283,"line_end":283,"column_start":5,"column_end":11},"name":"Inches","qualname":"::jpeg::encoder::PixelDensityUnit::Inches","value":"PixelDensityUnit::Inches","parent":{"krate":0,"index":4633},"children":[],"decl_id":null,"docs":" Pixels per inch (2.54 cm)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4638},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\encoder.rs","byte_start":400785,"byte_end":400796,"line_start":286,"line_end":286,"column_start":5,"column_end":16},"name":"Centimeters","qualname":"::jpeg::encoder::PixelDensityUnit::Centimeters","value":"PixelDensityUnit::Centimeters","parent":{"krate":0,"index":4633},"children":[],"decl_id":null,"docs":" Pixels per centimeter\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4633},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\encoder.rs","byte_start":400514,"byte_end":400530,"line_start":277,"line_end":277,"column_start":10,"column_end":26},"name":"PixelDensityUnit","qualname":"::jpeg::encoder::PixelDensityUnit","value":"PixelDensityUnit::{PixelAspectRatio, Inches, Centimeters}","parent":null,"children":[{"krate":0,"index":4634},{"krate":0,"index":4636},{"krate":0,"index":4638}],"decl_id":null,"docs":" Represents a unit in which the density of an image is measured\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4651},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\encoder.rs","byte_start":401133,"byte_end":401145,"line_start":299,"line_end":299,"column_start":12,"column_end":24},"name":"PixelDensity","qualname":"::jpeg::encoder::PixelDensity","value":"PixelDensity { density, unit }","parent":null,"children":[{"krate":0,"index":4652},{"krate":0,"index":4653}],"decl_id":null,"docs":" Represents the pixel density of an image","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4652},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\encoder.rs","byte_start":401208,"byte_end":401215,"line_start":301,"line_end":301,"column_start":9,"column_end":16},"name":"density","qualname":"::jpeg::encoder::PixelDensity::density","value":"(u16, u16)","parent":{"krate":0,"index":4651},"children":[],"decl_id":null,"docs":" A couple of values for (Xdensity, Ydensity)\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4653},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\encoder.rs","byte_start":401287,"byte_end":401291,"line_start":303,"line_end":303,"column_start":9,"column_end":13},"name":"unit","qualname":"::jpeg::encoder::PixelDensity::unit","value":"jpeg::encoder::PixelDensityUnit","parent":{"krate":0,"index":4651},"children":[],"decl_id":null,"docs":" The unit in which the density is measured\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1701},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\encoder.rs","byte_start":401497,"byte_end":401500,"line_start":310,"line_end":310,"column_start":12,"column_end":15},"name":"dpi","qualname":"<PixelDensity>::dpi","value":"fn (density: u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates the most common pixel density type:\n the horizontal and the vertical density are equal,\n and measured in pixels per inch.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1704},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\encoder.rs","byte_start":401951,"byte_end":401962,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"name":"JPEGEncoder","qualname":"::jpeg::encoder::JPEGEncoder","value":"JPEGEncoder {  }","parent":null,"children":[{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714}],"decl_id":null,"docs":" The representation of a JPEG encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\encoder.rs","byte_start":402352,"byte_end":402355,"line_start":345,"line_end":345,"column_start":12,"column_end":15},"name":"new","qualname":"<JPEGEncoder>::new","value":"fn (w: &mut W) -> JPEGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1719},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\encoder.rs","byte_start":402648,"byte_end":402664,"line_start":352,"line_end":352,"column_start":12,"column_end":28},"name":"new_with_quality","qualname":"<JPEGEncoder>::new_with_quality","value":"fn (w: &mut W, quality: u8) -> JPEGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```, and has\n the quality parameter ```quality``` with a value in the range 1-100\n where 1 is the worst and 100 is the best.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1721},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\encoder.rs","byte_start":405032,"byte_end":405049,"line_start":424,"line_end":424,"column_start":12,"column_end":29},"name":"set_pixel_density","qualname":"<JPEGEncoder>::set_pixel_density","value":"fn (&mut self, pixel_density: PixelDensity) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the pixel density of the images the encoder will encode.\n If this method is not called, then a default pixel aspect ratio of 1x1 will be applied,\n and no DPI information will be stored in the image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1722},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\encoder.rs","byte_start":405381,"byte_end":405387,"line_start":433,"line_end":433,"column_start":12,"column_end":18},"name":"encode","qualname":"<JPEGEncoder>::encode","value":"fn (&mut self, image: &[u8], width: u32, height: u32, color_type: ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image stored in the raw byte buffer ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1723},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\encoder.rs","byte_start":407595,"byte_end":407607,"line_start":485,"line_end":485,"column_start":12,"column_end":24},"name":"encode_image","qualname":"<JPEGEncoder>::encode_image","value":"fn <I> (&mut self, image: &I) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the given image.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1784},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"png","qualname":"::png","value":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","parent":null,"children":[{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1794},{"krate":0,"index":1803},{"krate":0,"index":1807},{"krate":0,"index":1811},{"krate":0,"index":1821},{"krate":0,"index":1826},{"krate":0,"index":1831},{"krate":0,"index":1834},{"krate":0,"index":1838},{"krate":0,"index":1842},{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1862},{"krate":0,"index":1870},{"krate":0,"index":1876},{"krate":0,"index":1888},{"krate":0,"index":4666},{"krate":0,"index":4690},{"krate":0,"index":4689},{"krate":0,"index":4687},{"krate":0,"index":4684},{"krate":0,"index":4685},{"krate":0,"index":4680},{"krate":0,"index":4681},{"krate":0,"index":4692},{"krate":0,"index":4716},{"krate":0,"index":4715},{"krate":0,"index":4713},{"krate":0,"index":4710},{"krate":0,"index":4711},{"krate":0,"index":4706},{"krate":0,"index":4707},{"krate":0,"index":1893},{"krate":0,"index":1900},{"krate":0,"index":1908},{"krate":0,"index":1911},{"krate":0,"index":1913}],"decl_id":null,"docs":" Decoding and Encoding of PNG Images","sig":null,"attributes":[{"value":"cfg(feature = \"png\")","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8937,"byte_end":8960,"line_start":226,"line_end":226,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1826},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":433425,"byte_end":433434,"line_start":28,"line_end":28,"column_start":12,"column_end":21},"name":"PNGReader","qualname":"::png::PNGReader","value":"PNGReader {  }","parent":null,"children":[{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1830}],"decl_id":null,"docs":" PNG Reader","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1838},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":435467,"byte_end":435477,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"PngDecoder","qualname":"::png::PngDecoder","value":"PngDecoder {  }","parent":null,"children":[{"krate":0,"index":1840},{"krate":0,"index":1841}],"decl_id":null,"docs":" PNG decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1844},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":435655,"byte_end":435658,"line_start":106,"line_end":106,"column_start":12,"column_end":15},"name":"new","qualname":"<PngDecoder<R>>::new","value":"fn (r: R) -> ImageResult<PngDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1845},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":439411,"byte_end":439415,"line_start":171,"line_end":171,"column_start":12,"column_end":16},"name":"apng","qualname":"<PngDecoder<R>>::apng","value":"fn (self) -> ApngDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Turn this into an iterator over the animation frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1846},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":439838,"byte_end":439845,"line_start":181,"line_end":181,"column_start":12,"column_end":19},"name":"is_apng","qualname":"<PngDecoder<R>>::is_apng","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the image contains an animation.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1862},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":441814,"byte_end":441825,"line_start":242,"line_end":242,"column_start":12,"column_end":23},"name":"ApngDecoder","qualname":"::png::ApngDecoder","value":"ApngDecoder {  }","parent":null,"children":[{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1869}],"decl_id":null,"docs":" An [`AnimationDecoder`] adapter of [`PngDecoder`].","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1888},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":449025,"byte_end":449035,"line_start":429,"line_end":429,"column_start":12,"column_end":22},"name":"PNGEncoder","qualname":"::png::PNGEncoder","value":"PNGEncoder {  }","parent":null,"children":[{"krate":0,"index":1890},{"krate":0,"index":1891},{"krate":0,"index":1892}],"decl_id":null,"docs":" PNG encoder\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4667},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":449300,"byte_end":449307,"line_start":439,"line_end":439,"column_start":5,"column_end":12},"name":"Default","qualname":"::png::CompressionType::Default","value":"CompressionType::Default","parent":{"krate":0,"index":4666},"children":[],"decl_id":null,"docs":" Default compression level\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4669},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":449347,"byte_end":449351,"line_start":441,"line_end":441,"column_start":5,"column_end":9},"name":"Fast","qualname":"::png::CompressionType::Fast","value":"CompressionType::Fast","parent":{"krate":0,"index":4666},"children":[],"decl_id":null,"docs":" Fast, minimal compression\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4671},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":449388,"byte_end":449392,"line_start":443,"line_end":443,"column_start":5,"column_end":9},"name":"Best","qualname":"::png::CompressionType::Best","value":"CompressionType::Best","parent":{"krate":0,"index":4666},"children":[],"decl_id":null,"docs":" High compression level\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4673},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":449433,"byte_end":449440,"line_start":445,"line_end":445,"column_start":5,"column_end":12},"name":"Huffman","qualname":"::png::CompressionType::Huffman","value":"CompressionType::Huffman","parent":{"krate":0,"index":4666},"children":[],"decl_id":null,"docs":" Huffman coding compression\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4675},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":449486,"byte_end":449489,"line_start":447,"line_end":447,"column_start":5,"column_end":8},"name":"Rle","qualname":"::png::CompressionType::Rle","value":"CompressionType::Rle","parent":{"krate":0,"index":4666},"children":[],"decl_id":null,"docs":" Run-length encoding compression\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4677},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":449515,"byte_end":449530,"line_start":450,"line_end":450,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::png::CompressionType::__NonExhaustive","value":"CompressionType::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":4666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4666},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":449244,"byte_end":449259,"line_start":437,"line_end":437,"column_start":10,"column_end":25},"name":"CompressionType","qualname":"::png::CompressionType","value":"CompressionType::{Default, Fast, Best, Huffman, Rle, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":4667},{"krate":0,"index":4669},{"krate":0,"index":4671},{"krate":0,"index":4673},{"krate":0,"index":4675},{"krate":0,"index":4677}],"decl_id":null,"docs":" Compression level of a PNG encoder. The default setting is `Fast`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4693},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":449965,"byte_end":449973,"line_start":461,"line_end":461,"column_start":5,"column_end":13},"name":"NoFilter","qualname":"::png::FilterType::NoFilter","value":"FilterType::NoFilter","parent":{"krate":0,"index":4692},"children":[],"decl_id":null,"docs":" No processing done, best used for low bit depth greyscale or data with a\n low color count\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4695},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":450040,"byte_end":450043,"line_start":463,"line_end":463,"column_start":5,"column_end":8},"name":"Sub","qualname":"::png::FilterType::Sub","value":"FilterType::Sub","parent":{"krate":0,"index":4692},"children":[],"decl_id":null,"docs":" Filters based on previous pixel in the same scanline\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4697},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":450093,"byte_end":450095,"line_start":465,"line_end":465,"column_start":5,"column_end":7},"name":"Up","qualname":"::png::FilterType::Up","value":"FilterType::Up","parent":{"krate":0,"index":4692},"children":[],"decl_id":null,"docs":" Filters based on the scanline above\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4699},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":450172,"byte_end":450175,"line_start":467,"line_end":467,"column_start":5,"column_end":8},"name":"Avg","qualname":"::png::FilterType::Avg","value":"FilterType::Avg","parent":{"krate":0,"index":4692},"children":[],"decl_id":null,"docs":" Filters based on the average of left and right neighbor pixels\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4701},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":450262,"byte_end":450267,"line_start":469,"line_end":469,"column_start":5,"column_end":10},"name":"Paeth","qualname":"::png::FilterType::Paeth","value":"FilterType::Paeth","parent":{"krate":0,"index":4692},"children":[],"decl_id":null,"docs":" Algorithm that takes into account the left, upper left, and above pixels\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4703},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":450293,"byte_end":450308,"line_start":472,"line_end":472,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::png::FilterType::__NonExhaustive","value":"FilterType::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":4692},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4692},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":449843,"byte_end":449853,"line_start":458,"line_end":458,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::png::FilterType","value":"FilterType::{NoFilter, Sub, Up, Avg, Paeth, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":4693},{"krate":0,"index":4695},{"krate":0,"index":4697},{"krate":0,"index":4699},{"krate":0,"index":4701},{"krate":0,"index":4703}],"decl_id":null,"docs":" Filter algorithms used to process image data to improve compression.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1895},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":450453,"byte_end":450456,"line_start":477,"line_end":477,"column_start":12,"column_end":15},"name":"new","qualname":"<PNGEncoder<W>>::new","value":"fn (w: W) -> PNGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1896},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":451638,"byte_end":451654,"line_start":499,"line_end":499,"column_start":12,"column_end":28},"name":"new_with_quality","qualname":"<PNGEncoder<W>>::new_with_quality","value":"fn (w: W, compression: CompressionType, filter: FilterType) -> PNGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to `w` with `CompressionType` `compression` and\n `FilterType` `filter`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1897},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":451934,"byte_end":451940,"line_start":508,"line_end":508,"column_start":12,"column_end":18},"name":"encode","qualname":"<PNGEncoder<W>>::encode","value":"fn (self, data: &[u8], width: u32, height: u32, color: ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image `data` that has dimensions `width` and `height` and `ColorType` `c`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1915},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pnm","qualname":"::pnm","value":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\mod.rs","parent":null,"children":[{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1926},{"krate":0,"index":1930},{"krate":0,"index":1950},{"krate":0,"index":2116},{"krate":0,"index":2252}],"decl_id":null,"docs":" Decoding of netpbm image formats (pbm, pgm, ppm and pam).","sig":null,"attributes":[{"value":"cfg(feature = \"pnm\")","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8974,"byte_end":8997,"line_start":228,"line_end":228,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":2021},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":475262,"byte_end":475272,"line_start":220,"line_end":220,"column_start":12,"column_end":22},"name":"PnmDecoder","qualname":"::pnm::decoder::PnmDecoder","value":"PnmDecoder {  }","parent":null,"children":[{"krate":0,"index":2023},{"krate":0,"index":2024},{"krate":0,"index":2025}],"decl_id":null,"docs":" PNM decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2028},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":475462,"byte_end":475465,"line_start":228,"line_end":228,"column_start":12,"column_end":15},"name":"new","qualname":"<PnmDecoder<R>>::new","value":"fn (read: R) -> ImageResult<PnmDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```read```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2029},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":476639,"byte_end":476649,"line_start":252,"line_end":252,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PnmDecoder<R>>::into_inner","value":"fn (self) -> (R, PNMHeader)","parent":null,"children":[],"decl_id":null,"docs":" Extract the reader and header after an image has been read.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2056},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":486126,"byte_end":486135,"line_start":514,"line_end":514,"column_start":12,"column_end":21},"name":"PnmReader","qualname":"::pnm::decoder::PnmReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":489727,"byte_end":489734,"line_start":611,"line_end":611,"column_start":12,"column_end":19},"name":"subtype","qualname":"<PnmDecoder<R>>::subtype","value":"fn (&self) -> PNMSubtype","parent":null,"children":[],"decl_id":null,"docs":" Get the pnm subtype, depending on the magic constant contained in the header\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4851},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":512212,"byte_end":512214,"line_start":27,"line_end":27,"column_start":5,"column_end":7},"name":"U8","qualname":"::pnm::encoder::FlatSamples::U8","value":"FlatSamples::U8(&'a [u8])","parent":{"krate":0,"index":4849},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4854},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":512230,"byte_end":512233,"line_start":28,"line_end":28,"column_start":5,"column_end":8},"name":"U16","qualname":"::pnm::encoder::FlatSamples::U16","value":"FlatSamples::U16(&'a [u16])","parent":{"krate":0,"index":4849},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4849},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":512190,"byte_end":512201,"line_start":26,"line_end":26,"column_start":10,"column_end":21},"name":"FlatSamples","qualname":"::pnm::encoder::FlatSamples","value":"FlatSamples::{U8, U16}","parent":null,"children":[{"krate":0,"index":4851},{"krate":0,"index":4854}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2157},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":512314,"byte_end":512324,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"PNMEncoder","qualname":"::pnm::encoder::PNMEncoder","value":"PNMEncoder {  }","parent":null,"children":[{"krate":0,"index":2159},{"krate":0,"index":2160}],"decl_id":null,"docs":" Encodes images to any of the `pnm` image formats.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2195},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":513714,"byte_end":513717,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<PNMEncoder<W>>::new","value":"fn (writer: W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new PNMEncoder from the `writer`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2196},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":514267,"byte_end":514279,"line_start":101,"line_end":101,"column_start":12,"column_end":24},"name":"with_subtype","qualname":"<PNMEncoder<W>>::with_subtype","value":"fn (self, subtype: PNMSubtype) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encode a specific pnm subtype image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2197},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":514985,"byte_end":514996,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"with_header","qualname":"<PNMEncoder<W>>::with_header","value":"fn (self, header: PNMHeader) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enforce the use of a chosen header.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2198},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":515567,"byte_end":515586,"line_start":131,"line_end":131,"column_start":12,"column_end":31},"name":"with_dynamic_header","qualname":"<PNMEncoder<W>>::with_dynamic_header","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create the header dynamically for each image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2199},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":515962,"byte_end":515968,"line_start":142,"line_end":142,"column_start":12,"column_end":18},"name":"encode","qualname":"<PNMEncoder<W>>::encode","value":"fn <'s, S> (&mut self, image: S, width: u32, height: u32, color: ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode an image whose samples are represented as `u8`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4863},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":535015,"byte_end":535021,"line_start":7,"line_end":7,"column_start":5,"column_end":11},"name":"Binary","qualname":"::pnm::header::SampleEncoding::Binary","value":"SampleEncoding::Binary","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Samples are unsigned binary integers in big endian\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4865},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":535105,"byte_end":535110,"line_start":10,"line_end":10,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::pnm::header::SampleEncoding::Ascii","value":"SampleEncoding::Ascii","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" Samples are encoded as decimal ascii strings separated by whitespace\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4862},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":534935,"byte_end":534949,"line_start":5,"line_end":5,"column_start":10,"column_end":24},"name":"SampleEncoding","qualname":"::pnm::header::SampleEncoding","value":"SampleEncoding::{Binary, Ascii}","parent":null,"children":[{"krate":0,"index":4863},{"krate":0,"index":4865}],"decl_id":null,"docs":" The kind of encoding used to store sample values\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4879},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":535263,"byte_end":535269,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Bitmap","qualname":"::pnm::header::PNMSubtype::Bitmap","value":"PNMSubtype::Bitmap(SampleEncoding)","parent":{"krate":0,"index":4878},"children":[],"decl_id":null,"docs":" Magic numbers P1 and P4\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4882},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":535324,"byte_end":535331,"line_start":20,"line_end":20,"column_start":5,"column_end":12},"name":"Graymap","qualname":"::pnm::header::PNMSubtype::Graymap","value":"PNMSubtype::Graymap(SampleEncoding)","parent":{"krate":0,"index":4878},"children":[],"decl_id":null,"docs":" Magic numbers P2 and P5\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4885},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":535386,"byte_end":535392,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Pixmap","qualname":"::pnm::header::PNMSubtype::Pixmap","value":"PNMSubtype::Pixmap(SampleEncoding)","parent":{"krate":0,"index":4878},"children":[],"decl_id":null,"docs":" Magic numbers P3 and P6\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4888},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":535439,"byte_end":535451,"line_start":26,"line_end":26,"column_start":5,"column_end":17},"name":"ArbitraryMap","qualname":"::pnm::header::PNMSubtype::ArbitraryMap","value":"PNMSubtype::ArbitraryMap","parent":{"krate":0,"index":4878},"children":[],"decl_id":null,"docs":" Magic number P7\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4878},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":535214,"byte_end":535224,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"name":"PNMSubtype","qualname":"::pnm::header::PNMSubtype","value":"PNMSubtype::{Bitmap, Graymap, Pixmap, ArbitraryMap}","parent":null,"children":[{"krate":0,"index":4879},{"krate":0,"index":4882},{"krate":0,"index":4885},{"krate":0,"index":4888}],"decl_id":null,"docs":" Denotes the category of the magic number\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2256},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":535843,"byte_end":535852,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"PNMHeader","qualname":"::pnm::header::PNMHeader","value":"PNMHeader {  }","parent":null,"children":[{"krate":0,"index":2257},{"krate":0,"index":2258}],"decl_id":null,"docs":" Stores the complete header data of a file.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4902},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":536181,"byte_end":536193,"line_start":49,"line_end":49,"column_start":12,"column_end":24},"name":"BitmapHeader","qualname":"::pnm::header::BitmapHeader","value":"BitmapHeader { encoding, height, width }","parent":null,"children":[{"krate":0,"index":4903},{"krate":0,"index":4904},{"krate":0,"index":4905}],"decl_id":null,"docs":" Header produced by a `pbm` file (\"Portable Bit Map\")\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4903},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":536241,"byte_end":536249,"line_start":51,"line_end":51,"column_start":9,"column_end":17},"name":"encoding","qualname":"::pnm::header::BitmapHeader::encoding","value":"pnm::header::SampleEncoding","parent":{"krate":0,"index":4902},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4904},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":536309,"byte_end":536315,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::BitmapHeader::height","value":"u32","parent":{"krate":0,"index":4902},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4905},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":536363,"byte_end":536368,"line_start":57,"line_end":57,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::BitmapHeader::width","value":"u32","parent":{"krate":0,"index":4902},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4911},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":536477,"byte_end":536490,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"GraymapHeader","qualname":"::pnm::header::GraymapHeader","value":"GraymapHeader { encoding, height, width, maxwhite }","parent":null,"children":[{"krate":0,"index":4912},{"krate":0,"index":4913},{"krate":0,"index":4914},{"krate":0,"index":4915}],"decl_id":null,"docs":" Header produced by a `pgm` file (\"Portable Gray Map\")\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4912},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":536538,"byte_end":536546,"line_start":64,"line_end":64,"column_start":9,"column_end":17},"name":"encoding","qualname":"::pnm::header::GraymapHeader::encoding","value":"pnm::header::SampleEncoding","parent":{"krate":0,"index":4911},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4913},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":536606,"byte_end":536612,"line_start":67,"line_end":67,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::GraymapHeader::height","value":"u32","parent":{"krate":0,"index":4911},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4914},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":536660,"byte_end":536665,"line_start":70,"line_end":70,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::GraymapHeader::width","value":"u32","parent":{"krate":0,"index":4911},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4915},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":536727,"byte_end":536735,"line_start":73,"line_end":73,"column_start":9,"column_end":17},"name":"maxwhite","qualname":"::pnm::header::GraymapHeader::maxwhite","value":"u32","parent":{"krate":0,"index":4911},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4921},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":536845,"byte_end":536857,"line_start":78,"line_end":78,"column_start":12,"column_end":24},"name":"PixmapHeader","qualname":"::pnm::header::PixmapHeader","value":"PixmapHeader { encoding, height, width, maxval }","parent":null,"children":[{"krate":0,"index":4922},{"krate":0,"index":4923},{"krate":0,"index":4924},{"krate":0,"index":4925}],"decl_id":null,"docs":" Header produced by a `ppm` file (\"Portable Pixel Map\")\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4922},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":536905,"byte_end":536913,"line_start":80,"line_end":80,"column_start":9,"column_end":17},"name":"encoding","qualname":"::pnm::header::PixmapHeader::encoding","value":"pnm::header::SampleEncoding","parent":{"krate":0,"index":4921},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4923},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":536973,"byte_end":536979,"line_start":83,"line_end":83,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::PixmapHeader::height","value":"u32","parent":{"krate":0,"index":4921},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4924},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":537027,"byte_end":537032,"line_start":86,"line_end":86,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::PixmapHeader::width","value":"u32","parent":{"krate":0,"index":4921},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4925},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":537094,"byte_end":537100,"line_start":89,"line_end":89,"column_start":9,"column_end":15},"name":"maxval","qualname":"::pnm::header::PixmapHeader::maxval","value":"u32","parent":{"krate":0,"index":4921},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4931},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":537208,"byte_end":537223,"line_start":94,"line_end":94,"column_start":12,"column_end":27},"name":"ArbitraryHeader","qualname":"::pnm::header::ArbitraryHeader","value":"ArbitraryHeader { height, width, depth, maxval, tupltype }","parent":null,"children":[{"krate":0,"index":4932},{"krate":0,"index":4933},{"krate":0,"index":4934},{"krate":0,"index":4935},{"krate":0,"index":4936}],"decl_id":null,"docs":" Header produced by a `pam` file (\"Portable Arbitrary Map\")\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4932},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":537267,"byte_end":537273,"line_start":96,"line_end":96,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::ArbitraryHeader::height","value":"u32","parent":{"krate":0,"index":4931},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4933},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":537321,"byte_end":537326,"line_start":99,"line_end":99,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::ArbitraryHeader::width","value":"u32","parent":{"krate":0,"index":4931},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4934},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":537375,"byte_end":537380,"line_start":102,"line_end":102,"column_start":9,"column_end":14},"name":"depth","qualname":"::pnm::header::ArbitraryHeader::depth","value":"u32","parent":{"krate":0,"index":4931},"children":[],"decl_id":null,"docs":" Number of color channels\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4935},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":537442,"byte_end":537448,"line_start":105,"line_end":105,"column_start":9,"column_end":15},"name":"maxval","qualname":"::pnm::header::ArbitraryHeader::maxval","value":"u32","parent":{"krate":0,"index":4931},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4936},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":537509,"byte_end":537517,"line_start":108,"line_end":108,"column_start":9,"column_end":17},"name":"tupltype","qualname":"::pnm::header::ArbitraryHeader::tupltype","value":"std::option::Option<pnm::header::ArbitraryTuplType>","parent":{"krate":0,"index":4931},"children":[],"decl_id":null,"docs":" Color interpretation of image pixels\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4942},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":537720,"byte_end":537733,"line_start":115,"line_end":115,"column_start":5,"column_end":18},"name":"BlackAndWhite","qualname":"::pnm::header::ArbitraryTuplType::BlackAndWhite","value":"ArbitraryTuplType::BlackAndWhite","parent":{"krate":0,"index":4941},"children":[],"decl_id":null,"docs":" Pixels are either black (0) or white (1)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4944},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":537816,"byte_end":537834,"line_start":118,"line_end":118,"column_start":5,"column_end":23},"name":"BlackAndWhiteAlpha","qualname":"::pnm::header::ArbitraryTuplType::BlackAndWhiteAlpha","value":"ArbitraryTuplType::BlackAndWhiteAlpha","parent":{"krate":0,"index":4941},"children":[],"decl_id":null,"docs":" Pixels are either black (0) or white (1) and a second alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4946},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":537886,"byte_end":537895,"line_start":121,"line_end":121,"column_start":5,"column_end":14},"name":"Grayscale","qualname":"::pnm::header::ArbitraryTuplType::Grayscale","value":"ArbitraryTuplType::Grayscale","parent":{"krate":0,"index":4941},"children":[],"decl_id":null,"docs":" Pixels represent the amount of white\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4948},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":537953,"byte_end":537967,"line_start":124,"line_end":124,"column_start":5,"column_end":19},"name":"GrayscaleAlpha","qualname":"::pnm::header::ArbitraryTuplType::GrayscaleAlpha","value":"ArbitraryTuplType::GrayscaleAlpha","parent":{"krate":0,"index":4941},"children":[],"decl_id":null,"docs":" Grayscale with an additional alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4950},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":538015,"byte_end":538018,"line_start":127,"line_end":127,"column_start":5,"column_end":8},"name":"RGB","qualname":"::pnm::header::ArbitraryTuplType::RGB","value":"ArbitraryTuplType::RGB","parent":{"krate":0,"index":4941},"children":[],"decl_id":null,"docs":" Three channels: Red, Green, Blue\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4952},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":538072,"byte_end":538080,"line_start":130,"line_end":130,"column_start":5,"column_end":13},"name":"RGBAlpha","qualname":"::pnm::header::ArbitraryTuplType::RGBAlpha","value":"ArbitraryTuplType::RGBAlpha","parent":{"krate":0,"index":4941},"children":[],"decl_id":null,"docs":" Four channels: Red, Green, Blue, Alpha\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4954},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":538137,"byte_end":538143,"line_start":133,"line_end":133,"column_start":5,"column_end":11},"name":"Custom","qualname":"::pnm::header::ArbitraryTuplType::Custom","value":"ArbitraryTuplType::Custom(String)","parent":{"krate":0,"index":4941},"children":[],"decl_id":null,"docs":" An image format which is not standardized\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4941},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":537647,"byte_end":537664,"line_start":113,"line_end":113,"column_start":10,"column_end":27},"name":"ArbitraryTuplType","qualname":"::pnm::header::ArbitraryTuplType","value":"ArbitraryTuplType::{BlackAndWhite, BlackAndWhiteAlpha, Grayscale, GrayscaleAlpha, RGB, RGBAlpha, Custom}","parent":null,"children":[{"krate":0,"index":4942},{"krate":0,"index":4944},{"krate":0,"index":4946},{"krate":0,"index":4948},{"krate":0,"index":4950},{"krate":0,"index":4952},{"krate":0,"index":4954}],"decl_id":null,"docs":" Standardized tuple type specifiers in the header of a `pam`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2275},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":538793,"byte_end":538807,"line_start":152,"line_end":152,"column_start":12,"column_end":26},"name":"magic_constant","qualname":"<PNMSubtype>::magic_constant","value":"fn (self) -> &'static [u8; 2]","parent":null,"children":[],"decl_id":null,"docs":" Get the two magic constant bytes corresponding to this format subtype.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2277},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":539386,"byte_end":539401,"line_start":165,"line_end":165,"column_start":12,"column_end":27},"name":"sample_encoding","qualname":"<PNMSubtype>::sample_encoding","value":"fn (self) -> SampleEncoding","parent":null,"children":[],"decl_id":null,"docs":" Whether samples are stored as binary or as decimal ascii\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2279},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":539764,"byte_end":539771,"line_start":177,"line_end":177,"column_start":12,"column_end":19},"name":"subtype","qualname":"<PNMHeader>::subtype","value":"fn (&self) -> PNMSubtype","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the format subtype from which the header was created.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2280},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":540286,"byte_end":540291,"line_start":187,"line_end":187,"column_start":12,"column_end":17},"name":"width","qualname":"<PNMHeader>::width","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of the image this header is for.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2281},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":540709,"byte_end":540715,"line_start":197,"line_end":197,"column_start":12,"column_end":18},"name":"height","qualname":"<PNMHeader>::height","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of the image this header is for.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2282},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":541173,"byte_end":541187,"line_start":207,"line_end":207,"column_start":12,"column_end":26},"name":"maximal_sample","qualname":"<PNMHeader>::maximal_sample","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The biggest value a sample can have. In other words, the colour resolution.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2283},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":541605,"byte_end":541614,"line_start":217,"line_end":217,"column_start":12,"column_end":21},"name":"as_bitmap","qualname":"<PNMHeader>::as_bitmap","value":"fn (&self) -> Option<&BitmapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying bitmap header if any\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2284},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":541845,"byte_end":541855,"line_start":225,"line_end":225,"column_start":12,"column_end":22},"name":"as_graymap","qualname":"<PNMHeader>::as_graymap","value":"fn (&self) -> Option<&GraymapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying graymap header if any\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2285},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":542089,"byte_end":542098,"line_start":233,"line_end":233,"column_start":12,"column_end":21},"name":"as_pixmap","qualname":"<PNMHeader>::as_pixmap","value":"fn (&self) -> Option<&PixmapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying pixmap header if any\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2286},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":542331,"byte_end":542343,"line_start":241,"line_end":241,"column_start":12,"column_end":24},"name":"as_arbitrary","qualname":"<PNMHeader>::as_arbitrary","value":"fn (&self) -> Option<&ArbitraryHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying arbitrary header if any\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2287},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":542583,"byte_end":542588,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"write","qualname":"<PNMHeader>::write","value":"fn (&self, writer: &mut dyn io::Write) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the header back into a binary stream\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2303},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tga\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tga","qualname":"::tga","value":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tga\\mod.rs","parent":null,"children":[{"krate":0,"index":2304},{"krate":0,"index":2305}],"decl_id":null,"docs":" Decoding of TGA Images","sig":null,"attributes":[{"value":"cfg(feature = \"tga\")","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":9011,"byte_end":9034,"line_start":230,"line_end":230,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":2365},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tga\\decoder.rs","byte_start":550530,"byte_end":550540,"line_start":158,"line_end":158,"column_start":12,"column_end":22},"name":"TgaDecoder","qualname":"::tga::decoder::TgaDecoder","value":"TgaDecoder {  }","parent":null,"children":[{"krate":0,"index":2367},{"krate":0,"index":2368},{"krate":0,"index":2369},{"krate":0,"index":2370},{"krate":0,"index":2371},{"krate":0,"index":2372},{"krate":0,"index":2373},{"krate":0,"index":2374},{"krate":0,"index":2375},{"krate":0,"index":2376},{"krate":0,"index":2377}],"decl_id":null,"docs":" The representation of a TGA decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2380},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tga\\decoder.rs","byte_start":550966,"byte_end":550969,"line_start":179,"line_end":179,"column_start":12,"column_end":15},"name":"new","qualname":"<TgaDecoder<R>>::new","value":"fn (r: R) -> ImageResult<TgaDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream `r`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2404},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tga\\decoder.rs","byte_start":563427,"byte_end":563436,"line_start":531,"line_end":531,"column_start":12,"column_end":21},"name":"TGAReader","qualname":"::tga::decoder::TGAReader","value":"TGAReader {  }","parent":null,"children":[{"krate":0,"index":2406},{"krate":0,"index":2407}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2412},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tiff.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tiff","qualname":"::tiff","value":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tiff.rs","parent":null,"children":[{"krate":0,"index":2413},{"krate":0,"index":2414},{"krate":0,"index":2415},{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2426},{"krate":0,"index":2437},{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2447},{"krate":0,"index":2450},{"krate":0,"index":2451},{"krate":0,"index":2454},{"krate":0,"index":2459},{"krate":0,"index":2463},{"krate":0,"index":2471},{"krate":0,"index":2474},{"krate":0,"index":2476},{"krate":0,"index":2480}],"decl_id":null,"docs":" Decoding and Encoding of TIFF Images","sig":null,"attributes":[{"value":"cfg(feature = \"tiff\")","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":9048,"byte_end":9072,"line_start":232,"line_end":232,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":2442},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tiff.rs","byte_start":564498,"byte_end":564509,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"TiffDecoder","qualname":"::tiff::TiffDecoder","value":"TiffDecoder {  }","parent":null,"children":[{"krate":0,"index":2444},{"krate":0,"index":2445},{"krate":0,"index":2446}],"decl_id":null,"docs":" Decoder for TIFF images.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2449},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tiff.rs","byte_start":564731,"byte_end":564734,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<TiffDecoder<R>>::new","value":"fn (r: R) -> Result<TiffDecoder<R>, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TiffDecoder.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2454},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tiff.rs","byte_start":568024,"byte_end":568034,"line_start":114,"line_end":114,"column_start":12,"column_end":22},"name":"TiffReader","qualname":"::tiff::TiffReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2471},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tiff.rs","byte_start":570116,"byte_end":570127,"line_start":180,"line_end":180,"column_start":12,"column_end":23},"name":"TiffEncoder","qualname":"::tiff::TiffEncoder","value":"TiffEncoder {  }","parent":null,"children":[{"krate":0,"index":2473}],"decl_id":null,"docs":" Encoder for tiff images\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2478},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tiff.rs","byte_start":570853,"byte_end":570856,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"new","qualname":"<TiffEncoder<W>>::new","value":"fn (w: W) -> TiffEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to `w`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2479},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tiff.rs","byte_start":571088,"byte_end":571094,"line_start":207,"line_end":207,"column_start":12,"column_end":18},"name":"encode","qualname":"<TiffEncoder<W>>::encode","value":"fn (self, data: &[u8], width: u32, height: u32, color: ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image `image` that has dimensions `width` and `height` and `ColorType` `c`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2483},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"webp","qualname":"::webp","value":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\mod.rs","parent":null,"children":[{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2556},{"krate":0,"index":2562}],"decl_id":null,"docs":" Decoding of WebP Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"webp\")","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":9087,"byte_end":9111,"line_start":234,"line_end":234,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":2523},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\decoder.rs","byte_start":574599,"byte_end":574610,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"name":"WebPDecoder","qualname":"::webp::decoder::WebPDecoder","value":"WebPDecoder {  }","parent":null,"children":[{"krate":0,"index":2525},{"krate":0,"index":2526},{"krate":0,"index":2527}],"decl_id":null,"docs":" WebP Image format decoder. Currently only supportes the luma channel (meaning that decoded\n images will be grayscale).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2530},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\decoder.rs","byte_start":574822,"byte_end":574825,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"new","qualname":"<WebPDecoder<R>>::new","value":"fn (r: R) -> ImageResult<WebPDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new WebPDecoder from the Reader ```r```.\n This function takes ownership of the Reader.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2539},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\decoder.rs","byte_start":577502,"byte_end":577512,"line_start":149,"line_end":149,"column_start":12,"column_end":22},"name":"WebpReader","qualname":"::webp::decoder::WebpReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2562},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vp8","qualname":"::webp::vp8","value":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","parent":null,"children":[{"krate":0,"index":2563},{"krate":0,"index":2566},{"krate":0,"index":2567},{"krate":0,"index":2571},{"krate":0,"index":2572},{"krate":0,"index":2573},{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2584},{"krate":0,"index":2585},{"krate":0,"index":2586},{"krate":0,"index":2587},{"krate":0,"index":2588},{"krate":0,"index":2589},{"krate":0,"index":2590},{"krate":0,"index":2591},{"krate":0,"index":2592},{"krate":0,"index":2593},{"krate":0,"index":2594},{"krate":0,"index":2595},{"krate":0,"index":2596},{"krate":0,"index":2597},{"krate":0,"index":4992},{"krate":0,"index":5017},{"krate":0,"index":5016},{"krate":0,"index":5014},{"krate":0,"index":5011},{"krate":0,"index":5012},{"krate":0,"index":5008},{"krate":0,"index":5009},{"krate":0,"index":5019},{"krate":0,"index":5041},{"krate":0,"index":5040},{"krate":0,"index":5038},{"krate":0,"index":5035},{"krate":0,"index":5036},{"krate":0,"index":5032},{"krate":0,"index":5033},{"krate":0,"index":5043},{"krate":0,"index":5083},{"krate":0,"index":5082},{"krate":0,"index":5080},{"krate":0,"index":5077},{"krate":0,"index":5078},{"krate":0,"index":5074},{"krate":0,"index":5075},{"krate":0,"index":2598},{"krate":0,"index":2599},{"krate":0,"index":2601},{"krate":0,"index":2603},{"krate":0,"index":2605},{"krate":0,"index":2607},{"krate":0,"index":2611},{"krate":0,"index":2613},{"krate":0,"index":2615},{"krate":0,"index":2620},{"krate":0,"index":2621},{"krate":0,"index":2622},{"krate":0,"index":2623},{"krate":0,"index":2624},{"krate":0,"index":2625},{"krate":0,"index":2626},{"krate":0,"index":2627},{"krate":0,"index":2628},{"krate":0,"index":2629},{"krate":0,"index":2630},{"krate":0,"index":2631},{"krate":0,"index":2632},{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2636},{"krate":0,"index":2639},{"krate":0,"index":2641},{"krate":0,"index":5085},{"krate":0,"index":5087},{"krate":0,"index":2643},{"krate":0,"index":5089},{"krate":0,"index":5112},{"krate":0,"index":5109},{"krate":0,"index":5108},{"krate":0,"index":2645},{"krate":0,"index":2647},{"krate":0,"index":2649},{"krate":0,"index":2650},{"krate":0,"index":2656},{"krate":0,"index":5114},{"krate":0,"index":5127},{"krate":0,"index":5123},{"krate":0,"index":5122},{"krate":0,"index":5129},{"krate":0,"index":5144},{"krate":0,"index":5142},{"krate":0,"index":5140},{"krate":0,"index":5146},{"krate":0,"index":5159},{"krate":0,"index":5158},{"krate":0,"index":5156},{"krate":0,"index":2664},{"krate":0,"index":2687},{"krate":0,"index":2714},{"krate":0,"index":2717},{"krate":0,"index":2719},{"krate":0,"index":2721},{"krate":0,"index":2723},{"krate":0,"index":2725},{"krate":0,"index":2727},{"krate":0,"index":2729},{"krate":0,"index":2732},{"krate":0,"index":2733},{"krate":0,"index":2734},{"krate":0,"index":2736},{"krate":0,"index":2738},{"krate":0,"index":2739},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2743},{"krate":0,"index":2744},{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2747},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2751},{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2754}],"decl_id":null,"docs":" An implementation of the VP8 Video Codec","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5129},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":611838,"byte_end":611843,"line_start":839,"line_end":839,"column_start":12,"column_end":17},"name":"Frame","qualname":"::webp::vp8::Frame","value":"Frame { width, height, ybuf, keyframe, for_display, pixel_type }","parent":null,"children":[{"krate":0,"index":5130},{"krate":0,"index":5131},{"krate":0,"index":5132},{"krate":0,"index":5133},{"krate":0,"index":5134},{"krate":0,"index":5135},{"krate":0,"index":5136},{"krate":0,"index":5137},{"krate":0,"index":5138},{"krate":0,"index":5139}],"decl_id":null,"docs":" A Representation of the last decoded video frame\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5130},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":611890,"byte_end":611895,"line_start":841,"line_end":841,"column_start":9,"column_end":14},"name":"width","qualname":"::webp::vp8::Frame::width","value":"u16","parent":{"krate":0,"index":5129},"children":[],"decl_id":null,"docs":" The width of the luma plane\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5131},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":611948,"byte_end":611954,"line_start":844,"line_end":844,"column_start":9,"column_end":15},"name":"height","qualname":"::webp::vp8::Frame::height","value":"u16","parent":{"krate":0,"index":5129},"children":[],"decl_id":null,"docs":" The height of the luma plane\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5132},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":612006,"byte_end":612010,"line_start":847,"line_end":847,"column_start":9,"column_end":13},"name":"ybuf","qualname":"::webp::vp8::Frame::ybuf","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":5129},"children":[],"decl_id":null,"docs":" The luma plane of the frame\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5133},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":612081,"byte_end":612089,"line_start":850,"line_end":850,"column_start":9,"column_end":17},"name":"keyframe","qualname":"::webp::vp8::Frame::keyframe","value":"bool","parent":{"krate":0,"index":5129},"children":[],"decl_id":null,"docs":" Indicates whether this frame is a keyframe\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5135},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":612185,"byte_end":612196,"line_start":855,"line_end":855,"column_start":9,"column_end":20},"name":"for_display","qualname":"::webp::vp8::Frame::for_display","value":"bool","parent":{"krate":0,"index":5129},"children":[],"decl_id":null,"docs":" Indicates whether this frame is intended for display\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5136},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":612327,"byte_end":612337,"line_start":860,"line_end":860,"column_start":9,"column_end":19},"name":"pixel_type","qualname":"::webp::vp8::Frame::pixel_type","value":"u8","parent":{"krate":0,"index":5129},"children":[],"decl_id":null,"docs":" The pixel type of the frame as defined by Section 9.2\n of the VP8 Specification\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2664},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":612713,"byte_end":612723,"line_start":888,"line_end":888,"column_start":12,"column_end":22},"name":"Vp8Decoder","qualname":"::webp::vp8::Vp8Decoder","value":"Vp8Decoder {  }","parent":null,"children":[{"krate":0,"index":2666},{"krate":0,"index":2667},{"krate":0,"index":2668},{"krate":0,"index":2669},{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2673},{"krate":0,"index":2675},{"krate":0,"index":2677},{"krate":0,"index":2678},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2682},{"krate":0,"index":2683},{"krate":0,"index":2684},{"krate":0,"index":2685},{"krate":0,"index":2686}],"decl_id":null,"docs":" VP8 Decoder","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2689},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":613387,"byte_end":613390,"line_start":923,"line_end":923,"column_start":12,"column_end":15},"name":"new","qualname":"<Vp8Decoder<R>>::new","value":"fn (r: R) -> Vp8Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder.\n The reader must present a raw vp8 bitstream to the decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2712},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":633548,"byte_end":633560,"line_start":1543,"line_end":1543,"column_start":12,"column_end":24},"name":"decode_frame","qualname":"<Vp8Decoder<R>>::decode_frame","value":"fn (&mut self) -> ImageResult<&Frame>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the current frame and returns a reference to it\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2755},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\farbfeld.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"farbfeld","qualname":"::farbfeld","value":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\farbfeld.rs","parent":null,"children":[{"krate":0,"index":2756},{"krate":0,"index":2757},{"krate":0,"index":2758},{"krate":0,"index":2766},{"krate":0,"index":2770},{"krate":0,"index":2771},{"krate":0,"index":2778},{"krate":0,"index":2785},{"krate":0,"index":2792},{"krate":0,"index":2801},{"krate":0,"index":2804},{"krate":0,"index":2809},{"krate":0,"index":2812},{"krate":0,"index":2815},{"krate":0,"index":2818},{"krate":0,"index":2821},{"krate":0,"index":2829},{"krate":0,"index":2837},{"krate":0,"index":2840},{"krate":0,"index":2847}],"decl_id":null,"docs":" Decoding of farbfeld images","sig":null,"attributes":[{"value":"cfg(feature = \"farbfeld\")","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":9126,"byte_end":9154,"line_start":236,"line_end":236,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":2785},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\farbfeld.rs","byte_start":659565,"byte_end":659579,"line_start":30,"line_end":30,"column_start":12,"column_end":26},"name":"FarbfeldReader","qualname":"::farbfeld::FarbfeldReader","value":"FarbfeldReader {  }","parent":null,"children":[{"krate":0,"index":2787},{"krate":0,"index":2788},{"krate":0,"index":2789},{"krate":0,"index":2790},{"krate":0,"index":2791}],"decl_id":null,"docs":" farbfeld Reader\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2815},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\farbfeld.rs","byte_start":664287,"byte_end":664302,"line_start":163,"line_end":163,"column_start":12,"column_end":27},"name":"FarbfeldDecoder","qualname":"::farbfeld::FarbfeldDecoder","value":"FarbfeldDecoder {  }","parent":null,"children":[{"krate":0,"index":2817}],"decl_id":null,"docs":" farbfeld decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2820},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\farbfeld.rs","byte_start":664461,"byte_end":664464,"line_start":169,"line_end":169,"column_start":12,"column_end":15},"name":"new","qualname":"<FarbfeldDecoder<R>>::new","value":"fn (r: R) -> ImageResult<FarbfeldDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2837},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\farbfeld.rs","byte_start":665807,"byte_end":665822,"line_start":216,"line_end":216,"column_start":12,"column_end":27},"name":"FarbfeldEncoder","qualname":"::farbfeld::FarbfeldEncoder","value":"FarbfeldEncoder {  }","parent":null,"children":[{"krate":0,"index":2839}],"decl_id":null,"docs":" farbfeld encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2842},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\farbfeld.rs","byte_start":665969,"byte_end":665972,"line_start":222,"line_end":222,"column_start":12,"column_end":15},"name":"new","qualname":"<FarbfeldEncoder<W>>::new","value":"fn (w: W) -> FarbfeldEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2843},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\farbfeld.rs","byte_start":666180,"byte_end":666186,"line_start":228,"line_end":228,"column_start":12,"column_end":18},"name":"encode","qualname":"<FarbfeldEncoder<W>>::encode","value":"fn (self, data: &[u8], width: u32, height: u32) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```data``` (native endian)\n that has dimensions ```width``` and ```height```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2856},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\animation.rs","byte_start":670776,"byte_end":670782,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Frames","qualname":"::animation::Frames","value":"Frames {  }","parent":null,"children":[{"krate":0,"index":2858}],"decl_id":null,"docs":" An implementation dependent iterator, reading the frames as requested\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2861},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\animation.rs","byte_start":670962,"byte_end":670965,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<Frames>::new","value":"fn (iterator: Box<dyn Iterator<Item = ImageResult<Frame>> + 'a>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Frames` from an implementation specific iterator.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2862},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\animation.rs","byte_start":671357,"byte_end":671371,"line_start":25,"line_end":25,"column_start":12,"column_end":26},"name":"collect_frames","qualname":"<Frames>::collect_frames","value":"fn (self) -> ImageResult<Vec<Frame>>","parent":null,"children":[],"decl_id":null,"docs":" Steps through the iterator from the current frame until the end and pushes each frame into\n a `Vec`.\n If en error is encountered that error is returned instead.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5161},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\animation.rs","byte_start":671660,"byte_end":671665,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"Frame","qualname":"::animation::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":5162},{"krate":0,"index":5163},{"krate":0,"index":5164},{"krate":0,"index":5165}],"decl_id":null,"docs":" A single animation frame\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5168},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\animation.rs","byte_start":671947,"byte_end":671952,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"Delay","qualname":"::animation::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":5169}],"decl_id":null,"docs":" The delay of a frame relative to the previous one.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2868},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\animation.rs","byte_start":672054,"byte_end":672057,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<Frame>::new","value":"fn (buffer: RgbaImage) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame without any delay.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2869},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\animation.rs","byte_start":672285,"byte_end":672295,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Frame>::from_parts","value":"fn (buffer: RgbaImage, left: u32, top: u32, delay: Delay) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2870},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\animation.rs","byte_start":672507,"byte_end":672512,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"delay","qualname":"<Frame>::delay","value":"fn (&self) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Delay of this frame\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2871},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\animation.rs","byte_start":672601,"byte_end":672607,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"buffer","qualname":"<Frame>::buffer","value":"fn (&self) -> &RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2872},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\animation.rs","byte_start":672703,"byte_end":672714,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"into_buffer","qualname":"<Frame>::into_buffer","value":"fn (self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2873},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\animation.rs","byte_start":672803,"byte_end":672807,"line_start":92,"line_end":92,"column_start":12,"column_end":16},"name":"left","qualname":"<Frame>::left","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the x offset\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2874},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\animation.rs","byte_start":672889,"byte_end":672892,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"top","qualname":"<Frame>::top","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the y offset\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2876},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\animation.rs","byte_start":673157,"byte_end":673176,"line_start":111,"line_end":111,"column_start":12,"column_end":31},"name":"from_numer_denom_ms","qualname":"<Delay>::from_numer_denom_ms","value":"fn (numerator: u32, denominator: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a delay from a ratio of milliseconds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2877},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\animation.rs","byte_start":673819,"byte_end":673843,"line_start":129,"line_end":129,"column_start":12,"column_end":36},"name":"from_saturating_duration","qualname":"<Delay>::from_saturating_duration","value":"fn (duration: Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert from a duration, clamped between 0 and an implemented defined maximum.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2879},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\animation.rs","byte_start":675019,"byte_end":675033,"line_start":158,"line_end":158,"column_start":12,"column_end":26},"name":"numer_denom_ms","qualname":"<Delay>::numer_denom_ms","value":"fn (self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The numerator and denominator of the delay in milliseconds.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2927},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":682289,"byte_end":682295,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::buffer_::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":2930}],"decl_id":null,"docs":" Iterate over pixel refs.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2946},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":683064,"byte_end":683073,"line_start":57,"line_end":57,"column_start":12,"column_end":21},"name":"PixelsMut","qualname":"::buffer_::PixelsMut","value":"PixelsMut {  }","parent":null,"children":[{"krate":0,"index":2949}],"decl_id":null,"docs":" Iterate over mutable pixel refs.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2965},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":684058,"byte_end":684062,"line_start":102,"line_end":102,"column_start":12,"column_end":16},"name":"Rows","qualname":"::buffer_::Rows","value":"Rows {  }","parent":null,"children":[{"krate":0,"index":2968}],"decl_id":null,"docs":" Iterate over rows of an image","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2986},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":686204,"byte_end":686211,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"RowsMut","qualname":"::buffer_::RowsMut","value":"RowsMut {  }","parent":null,"children":[{"krate":0,"index":2989}],"decl_id":null,"docs":" Iterate over mutable rows of an image","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3007},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":688236,"byte_end":688251,"line_start":242,"line_end":242,"column_start":12,"column_end":27},"name":"EnumeratePixels","qualname":"::buffer_::EnumeratePixels","value":"EnumeratePixels {  }","parent":null,"children":[{"krate":0,"index":3010},{"krate":0,"index":3011},{"krate":0,"index":3012},{"krate":0,"index":3013}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3024},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":688999,"byte_end":689012,"line_start":280,"line_end":280,"column_start":12,"column_end":25},"name":"EnumerateRows","qualname":"::buffer_::EnumerateRows","value":"EnumerateRows {  }","parent":null,"children":[{"krate":0,"index":3027},{"krate":0,"index":3028},{"krate":0,"index":3029}],"decl_id":null,"docs":" Enumerate the rows of an image.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3040},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":689875,"byte_end":689893,"line_start":323,"line_end":323,"column_start":12,"column_end":30},"name":"EnumeratePixelsMut","qualname":"::buffer_::EnumeratePixelsMut","value":"EnumeratePixelsMut {  }","parent":null,"children":[{"krate":0,"index":3043},{"krate":0,"index":3044},{"krate":0,"index":3045},{"krate":0,"index":3046}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3057},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":690658,"byte_end":690674,"line_start":361,"line_end":361,"column_start":12,"column_end":28},"name":"EnumerateRowsMut","qualname":"::buffer_::EnumerateRowsMut","value":"EnumerateRowsMut {  }","parent":null,"children":[{"krate":0,"index":3060},{"krate":0,"index":3061},{"krate":0,"index":3062}],"decl_id":null,"docs":" Enumerate the rows of an image.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5188},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":693884,"byte_end":693895,"line_start":472,"line_end":472,"column_start":12,"column_end":23},"name":"ImageBuffer","qualname":"::buffer_::ImageBuffer","value":"ImageBuffer {  }","parent":null,"children":[{"krate":0,"index":5191},{"krate":0,"index":5192},{"krate":0,"index":5193},{"krate":0,"index":5194}],"decl_id":null,"docs":" Generic image buffer","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3076},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":694653,"byte_end":694661,"line_start":494,"line_end":494,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<ImageBuffer<P, Container>>::from_raw","value":"fn (width: u32, height: u32, buf: Container) -> Option<ImageBuffer<P, Container>>","parent":null,"children":[],"decl_id":null,"docs":" Contructs a buffer from a generic container\n (for example a `Vec` or a slice)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3077},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":695067,"byte_end":695075,"line_start":508,"line_end":508,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<ImageBuffer<P, Container>>::into_raw","value":"fn (self) -> Container","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3078},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":695177,"byte_end":695187,"line_start":513,"line_end":513,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<ImageBuffer<P, Container>>::dimensions","value":"fn (&self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3079},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":695296,"byte_end":695301,"line_start":518,"line_end":518,"column_start":12,"column_end":17},"name":"width","qualname":"<ImageBuffer<P, Container>>::width","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3080},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":695389,"byte_end":695395,"line_start":523,"line_end":523,"column_start":12,"column_end":18},"name":"height","qualname":"<ImageBuffer<P, Container>>::height","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3082},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":695713,"byte_end":695719,"line_start":534,"line_end":534,"column_start":12,"column_end":18},"name":"pixels","qualname":"<ImageBuffer<P, Container>>::pixels","value":"fn (&self) -> Pixels<P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the pixels of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3083},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":696213,"byte_end":696217,"line_start":545,"line_end":545,"column_start":12,"column_end":16},"name":"rows","qualname":"<ImageBuffer<P, Container>>::rows","value":"fn (&self) -> Rows<P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the rows of this image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3084},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":696465,"byte_end":696481,"line_start":552,"line_end":552,"column_start":12,"column_end":28},"name":"enumerate_pixels","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels","value":"fn (&self) -> EnumeratePixels<P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a reference to them.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3085},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":696813,"byte_end":696827,"line_start":564,"line_end":564,"column_start":12,"column_end":26},"name":"enumerate_rows","qualname":"<ImageBuffer<P, Container>>::enumerate_rows","value":"fn (&self) -> EnumerateRows<P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the rows of the image.\n The iterator yields the y-coordinate of each row\n along with a reference to them.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3086},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":697148,"byte_end":697157,"line_start":577,"line_end":577,"column_start":12,"column_end":21},"name":"get_pixel","qualname":"<ImageBuffer<P, Container>>::get_pixel","value":"fn (&self, x: u32, y: u32) -> &P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the pixel at location `(x, y)`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3094},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":698883,"byte_end":698896,"line_start":618,"line_end":618,"column_start":12,"column_end":25},"name":"sample_layout","qualname":"<ImageBuffer<P, Container>>::sample_layout","value":"fn (&self) -> SampleLayout","parent":null,"children":[],"decl_id":null,"docs":" Get the format of the buffer when viewed as a matrix of samples.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3095},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":699510,"byte_end":699527,"line_start":629,"line_end":629,"column_start":12,"column_end":29},"name":"into_flat_samples","qualname":"<ImageBuffer<P, Container>>::into_flat_samples","value":"fn (self) -> FlatSamples<Container>","parent":null,"children":[],"decl_id":null,"docs":" Return the raw sample buffer with its stride an dimension information.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3096},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":700010,"byte_end":700025,"line_start":644,"line_end":644,"column_start":12,"column_end":27},"name":"as_flat_samples","qualname":"<ImageBuffer<P, Container>>::as_flat_samples","value":"fn (&self) -> FlatSamples<&[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3097},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":700458,"byte_end":700477,"line_start":658,"line_end":658,"column_start":12,"column_end":31},"name":"as_flat_samples_mut","qualname":"<ImageBuffer<P, Container>>::as_flat_samples_mut","value":"fn (&mut self) -> FlatSamples<&mut [P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view on the raw sample buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3102},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":701224,"byte_end":701234,"line_start":683,"line_end":683,"column_start":12,"column_end":22},"name":"pixels_mut","qualname":"<ImageBuffer<P, Container>>::pixels_mut","value":"fn (&mut self) -> PixelsMut<P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable pixels of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3103},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":701754,"byte_end":701762,"line_start":694,"line_end":694,"column_start":12,"column_end":20},"name":"rows_mut","qualname":"<ImageBuffer<P, Container>>::rows_mut","value":"fn (&mut self) -> RowsMut<P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable rows of this image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3104},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":702032,"byte_end":702052,"line_start":701,"line_end":701,"column_start":12,"column_end":32},"name":"enumerate_pixels_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels_mut","value":"fn (&mut self) -> EnumeratePixelsMut<P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a mutable reference to them.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3105},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":702426,"byte_end":702444,"line_start":714,"line_end":714,"column_start":12,"column_end":30},"name":"enumerate_rows_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_rows_mut","value":"fn (&mut self) -> EnumerateRowsMut<P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the rows of the image.\n The iterator yields the y-coordinate of each row\n along with a mutable reference to them.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3106},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":702807,"byte_end":702820,"line_start":728,"line_end":728,"column_start":12,"column_end":25},"name":"get_pixel_mut","qualname":"<ImageBuffer<P, Container>>::get_pixel_mut","value":"fn (&mut self, x: u32, y: u32) -> &mut P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3107},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":703269,"byte_end":703278,"line_start":740,"line_end":740,"column_start":12,"column_end":21},"name":"put_pixel","qualname":"<ImageBuffer<P, Container>>::put_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: P) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Puts a pixel at location `(x, y)`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3111},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":703723,"byte_end":703727,"line_start":755,"line_end":755,"column_start":12,"column_end":16},"name":"save","qualname":"<ImageBuffer<P, Container>>::save","value":"fn <Q> (&self, path: Q) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3116},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":704402,"byte_end":704418,"line_start":781,"line_end":781,"column_start":12,"column_end":28},"name":"save_with_format","qualname":"<ImageBuffer<P, Container>>::save_with_format","value":"fn <Q> (&self, path: Q, format: ImageFormat) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the specified path in\n the specified format.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3164},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":710973,"byte_end":710976,"line_start":994,"line_end":994,"column_start":12,"column_end":15},"name":"new","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::new","value":"fn (width: u32, height: u32) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new image buffer based on a `Vec<P::Subpixel>`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3165},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":711514,"byte_end":711524,"line_start":1010,"line_end":1010,"column_start":12,"column_end":22},"name":"from_pixel","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_pixel","value":"fn (width: u32, height: u32, pixel: P) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by copying a pixel","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3166},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":712039,"byte_end":712046,"line_start":1025,"line_end":1025,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_fn","value":"fn <F> (width: u32, height: u32, mut f: F) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by repeated application of the supplied function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3168},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":712457,"byte_end":712465,"line_start":1038,"line_end":1038,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_vec","value":"fn (width: u32, height: u32, buf: Vec<P::Subpixel>) -> Option<ImageBuffer<P, Vec<P::Subpixel>>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an image buffer out of an existing buffer.\n Returns None if the buffer is not big enough.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3169},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":712752,"byte_end":712760,"line_start":1048,"line_end":1048,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::into_vec","value":"fn (self) -> Vec<P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the image buffer and returns the underlying data\n as an owned buffer\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3170},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":712888,"byte_end":712901,"line_start":1054,"line_end":1054,"column_start":11,"column_end":24},"name":"ConvertBuffer","qualname":"::buffer_::ConvertBuffer","value":"ConvertBuffer<T>","parent":null,"children":[{"krate":0,"index":3172}],"decl_id":null,"docs":" Provides color conversions for whole image buffers.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3172},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":713088,"byte_end":713095,"line_start":1059,"line_end":1059,"column_start":8,"column_end":15},"name":"convert","qualname":"::buffer_::ConvertBuffer::convert","value":"fn (&self) -> T","parent":{"krate":0,"index":3170},"children":[],"decl_id":null,"docs":" Converts `self` to a buffer of type T","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3174},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":713363,"byte_end":713377,"line_start":1067,"line_end":1067,"column_start":12,"column_end":26},"name":"expand_palette","qualname":"<GrayImage>::expand_palette","value":"fn (self, palette: &[(u8, u8, u8)], transparent_idx: Option<u8>) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Expands a color palette by re-using the existing buffer.\n Assumes 8 bit per pixel. Uses an optionally transparent index to\n adjust it's alpha value accordingly.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3183},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":715121,"byte_end":715129,"line_start":1119,"line_end":1119,"column_start":10,"column_end":18},"name":"RgbImage","qualname":"::buffer_::RgbImage","value":"ImageBuffer<Rgb<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb image buffer\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3184},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":715218,"byte_end":715227,"line_start":1121,"line_end":1121,"column_start":10,"column_end":19},"name":"RgbaImage","qualname":"::buffer_::RgbaImage","value":"ImageBuffer<Rgba<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb + alpha channel image buffer\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3185},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":715307,"byte_end":715316,"line_start":1123,"line_end":1123,"column_start":10,"column_end":19},"name":"GrayImage","qualname":"::buffer_::GrayImage","value":"ImageBuffer<Luma<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale image buffer\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3186},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":715412,"byte_end":715426,"line_start":1125,"line_end":1125,"column_start":10,"column_end":24},"name":"GrayAlphaImage","qualname":"::buffer_::GrayAlphaImage","value":"ImageBuffer<LumaA<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale + alpha channel image buffer\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5220},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":724039,"byte_end":724041,"line_start":11,"line_end":11,"column_start":5,"column_end":7},"name":"L8","qualname":"::color::ColorType::L8","value":"ColorType::L8","parent":{"krate":0,"index":5219},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5222},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":724102,"byte_end":724105,"line_start":13,"line_end":13,"column_start":5,"column_end":8},"name":"La8","qualname":"::color::ColorType::La8","value":"ColorType::La8","parent":{"krate":0,"index":5219},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance with an alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5224},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":724160,"byte_end":724164,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Rgb8","qualname":"::color::ColorType::Rgb8","value":"ColorType::Rgb8","parent":{"krate":0,"index":5219},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit R, G and B channels\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5226},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":724219,"byte_end":724224,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Rgba8","qualname":"::color::ColorType::Rgba8","value":"ColorType::Rgba8","parent":{"krate":0,"index":5219},"children":[],"decl_id":null,"docs":" Pixel is 8-bit RGB with an alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5228},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":724265,"byte_end":724268,"line_start":20,"line_end":20,"column_start":5,"column_end":8},"name":"L16","qualname":"::color::ColorType::L16","value":"ColorType::L16","parent":{"krate":0,"index":5219},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5230},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":724330,"byte_end":724334,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"La16","qualname":"::color::ColorType::La16","value":"ColorType::La16","parent":{"krate":0,"index":5219},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance with an alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5232},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":724368,"byte_end":724373,"line_start":24,"line_end":24,"column_start":5,"column_end":10},"name":"Rgb16","qualname":"::color::ColorType::Rgb16","value":"ColorType::Rgb16","parent":{"krate":0,"index":5219},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGB\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5234},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":724408,"byte_end":724414,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"Rgba16","qualname":"::color::ColorType::Rgba16","value":"ColorType::Rgba16","parent":{"krate":0,"index":5219},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGBA\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5236},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":724470,"byte_end":724474,"line_start":29,"line_end":29,"column_start":5,"column_end":9},"name":"Bgr8","qualname":"::color::ColorType::Bgr8","value":"ColorType::Bgr8","parent":{"krate":0,"index":5219},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit B, G and R channels\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5238},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":724529,"byte_end":724534,"line_start":31,"line_end":31,"column_start":5,"column_end":10},"name":"Bgra8","qualname":"::color::ColorType::Bgra8","value":"ColorType::Bgra8","parent":{"krate":0,"index":5219},"children":[],"decl_id":null,"docs":" Pixel is 8-bit BGR with an alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5240},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":724560,"byte_end":724575,"line_start":34,"line_end":34,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::color::ColorType::__NonExhaustive","value":"ColorType::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":5219},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5219},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":723990,"byte_end":723999,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"ColorType","qualname":"::color::ColorType","value":"ColorType::{L8, La8, Rgb8, Rgba8, L16, La16, Rgb16, Rgba16, Bgr8, Bgra8, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":5220},{"krate":0,"index":5222},{"krate":0,"index":5224},{"krate":0,"index":5226},{"krate":0,"index":5228},{"krate":0,"index":5230},{"krate":0,"index":5232},{"krate":0,"index":5234},{"krate":0,"index":5236},{"krate":0,"index":5238},{"krate":0,"index":5240}],"decl_id":null,"docs":" An enumeration over supported color types and bit depths\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3205},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":724723,"byte_end":724738,"line_start":39,"line_end":39,"column_start":12,"column_end":27},"name":"bytes_per_pixel","qualname":"<ColorType>::bytes_per_pixel","value":"fn (self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in a pixel of `ColorType` ```c```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3206},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":725201,"byte_end":725210,"line_start":52,"line_end":52,"column_start":12,"column_end":21},"name":"has_alpha","qualname":"<ColorType>::has_alpha","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if there is an alpha channel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3208},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":725549,"byte_end":725558,"line_start":62,"line_end":62,"column_start":12,"column_end":21},"name":"has_color","qualname":"<ColorType>::has_color","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns false if the color scheme is grayscale, true otherwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3210},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":725952,"byte_end":725966,"line_start":73,"line_end":73,"column_start":12,"column_end":26},"name":"bits_per_pixel","qualname":"<ColorType>::bits_per_pixel","value":"fn (self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bits contained in a pixel of `ColorType` ```c``` (which will always be\n a multiple of 8).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3211},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":726129,"byte_end":726142,"line_start":78,"line_end":78,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<ColorType>::channel_count","value":"fn (self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of color channels that make up this pixel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5259},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":726804,"byte_end":726806,"line_start":95,"line_end":95,"column_start":5,"column_end":7},"name":"L1","qualname":"::color::ExtendedColorType::L1","value":"ExtendedColorType::L1","parent":{"krate":0,"index":5258},"children":[],"decl_id":null,"docs":" Pixel is 1-bit luminance\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5261},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":726867,"byte_end":726870,"line_start":97,"line_end":97,"column_start":5,"column_end":8},"name":"La1","qualname":"::color::ExtendedColorType::La1","value":"ExtendedColorType::La1","parent":{"krate":0,"index":5258},"children":[],"decl_id":null,"docs":" Pixel is 1-bit luminance with an alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5263},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":726925,"byte_end":726929,"line_start":99,"line_end":99,"column_start":5,"column_end":9},"name":"Rgb1","qualname":"::color::ExtendedColorType::Rgb1","value":"ExtendedColorType::Rgb1","parent":{"krate":0,"index":5258},"children":[],"decl_id":null,"docs":" Pixel contains 1-bit R, G and B channels\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5265},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":726984,"byte_end":726989,"line_start":101,"line_end":101,"column_start":5,"column_end":10},"name":"Rgba1","qualname":"::color::ExtendedColorType::Rgba1","value":"ExtendedColorType::Rgba1","parent":{"krate":0,"index":5258},"children":[],"decl_id":null,"docs":" Pixel is 1-bit RGB with an alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5267},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":727028,"byte_end":727030,"line_start":103,"line_end":103,"column_start":5,"column_end":7},"name":"L2","qualname":"::color::ExtendedColorType::L2","value":"ExtendedColorType::L2","parent":{"krate":0,"index":5258},"children":[],"decl_id":null,"docs":" Pixel is 2-bit luminance\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5269},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":727091,"byte_end":727094,"line_start":105,"line_end":105,"column_start":5,"column_end":8},"name":"La2","qualname":"::color::ExtendedColorType::La2","value":"ExtendedColorType::La2","parent":{"krate":0,"index":5258},"children":[],"decl_id":null,"docs":" Pixel is 2-bit luminance with an alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5271},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":727149,"byte_end":727153,"line_start":107,"line_end":107,"column_start":5,"column_end":9},"name":"Rgb2","qualname":"::color::ExtendedColorType::Rgb2","value":"ExtendedColorType::Rgb2","parent":{"krate":0,"index":5258},"children":[],"decl_id":null,"docs":" Pixel contains 2-bit R, G and B channels\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5273},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":727208,"byte_end":727213,"line_start":109,"line_end":109,"column_start":5,"column_end":10},"name":"Rgba2","qualname":"::color::ExtendedColorType::Rgba2","value":"ExtendedColorType::Rgba2","parent":{"krate":0,"index":5258},"children":[],"decl_id":null,"docs":" Pixel is 2-bit RGB with an alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5275},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":727252,"byte_end":727254,"line_start":111,"line_end":111,"column_start":5,"column_end":7},"name":"L4","qualname":"::color::ExtendedColorType::L4","value":"ExtendedColorType::L4","parent":{"krate":0,"index":5258},"children":[],"decl_id":null,"docs":" Pixel is 4-bit luminance\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5277},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":727315,"byte_end":727318,"line_start":113,"line_end":113,"column_start":5,"column_end":8},"name":"La4","qualname":"::color::ExtendedColorType::La4","value":"ExtendedColorType::La4","parent":{"krate":0,"index":5258},"children":[],"decl_id":null,"docs":" Pixel is 4-bit luminance with an alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5279},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":727373,"byte_end":727377,"line_start":115,"line_end":115,"column_start":5,"column_end":9},"name":"Rgb4","qualname":"::color::ExtendedColorType::Rgb4","value":"ExtendedColorType::Rgb4","parent":{"krate":0,"index":5258},"children":[],"decl_id":null,"docs":" Pixel contains 4-bit R, G and B channels\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5281},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":727432,"byte_end":727437,"line_start":117,"line_end":117,"column_start":5,"column_end":10},"name":"Rgba4","qualname":"::color::ExtendedColorType::Rgba4","value":"ExtendedColorType::Rgba4","parent":{"krate":0,"index":5258},"children":[],"decl_id":null,"docs":" Pixel is 4-bit RGB with an alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5283},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":727476,"byte_end":727478,"line_start":119,"line_end":119,"column_start":5,"column_end":7},"name":"L8","qualname":"::color::ExtendedColorType::L8","value":"ExtendedColorType::L8","parent":{"krate":0,"index":5258},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5285},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":727539,"byte_end":727542,"line_start":121,"line_end":121,"column_start":5,"column_end":8},"name":"La8","qualname":"::color::ExtendedColorType::La8","value":"ExtendedColorType::La8","parent":{"krate":0,"index":5258},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance with an alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5287},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":727597,"byte_end":727601,"line_start":123,"line_end":123,"column_start":5,"column_end":9},"name":"Rgb8","qualname":"::color::ExtendedColorType::Rgb8","value":"ExtendedColorType::Rgb8","parent":{"krate":0,"index":5258},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit R, G and B channels\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5289},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":727656,"byte_end":727661,"line_start":125,"line_end":125,"column_start":5,"column_end":10},"name":"Rgba8","qualname":"::color::ExtendedColorType::Rgba8","value":"ExtendedColorType::Rgba8","parent":{"krate":0,"index":5258},"children":[],"decl_id":null,"docs":" Pixel is 8-bit RGB with an alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5291},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":727701,"byte_end":727704,"line_start":127,"line_end":127,"column_start":5,"column_end":8},"name":"L16","qualname":"::color::ExtendedColorType::L16","value":"ExtendedColorType::L16","parent":{"krate":0,"index":5258},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5293},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":727766,"byte_end":727770,"line_start":129,"line_end":129,"column_start":5,"column_end":9},"name":"La16","qualname":"::color::ExtendedColorType::La16","value":"ExtendedColorType::La16","parent":{"krate":0,"index":5258},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance with an alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5295},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":727826,"byte_end":727831,"line_start":131,"line_end":131,"column_start":5,"column_end":10},"name":"Rgb16","qualname":"::color::ExtendedColorType::Rgb16","value":"ExtendedColorType::Rgb16","parent":{"krate":0,"index":5258},"children":[],"decl_id":null,"docs":" Pixel contains 16-bit R, G and B channels\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5297},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":727887,"byte_end":727893,"line_start":133,"line_end":133,"column_start":5,"column_end":11},"name":"Rgba16","qualname":"::color::ExtendedColorType::Rgba16","value":"ExtendedColorType::Rgba16","parent":{"krate":0,"index":5258},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGB with an alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5299},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":727948,"byte_end":727952,"line_start":135,"line_end":135,"column_start":5,"column_end":9},"name":"Bgr8","qualname":"::color::ExtendedColorType::Bgr8","value":"ExtendedColorType::Bgr8","parent":{"krate":0,"index":5258},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit B, G and R channels\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5301},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":728007,"byte_end":728012,"line_start":137,"line_end":137,"column_start":5,"column_end":10},"name":"Bgra8","qualname":"::color::ExtendedColorType::Bgra8","value":"ExtendedColorType::Bgra8","parent":{"krate":0,"index":5258},"children":[],"decl_id":null,"docs":" Pixel is 8-bit BGR with an alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5303},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":728241,"byte_end":728248,"line_start":142,"line_end":142,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::color::ExtendedColorType::Unknown","value":"ExtendedColorType::Unknown(u8)","parent":{"krate":0,"index":5258},"children":[],"decl_id":null,"docs":" Pixel is of unknown color type with the specified bits per pixel. This can apply to pixels\n which are associated with an external palette. In that case, the pixel value is an index\n into the palette.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5306},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":728278,"byte_end":728293,"line_start":145,"line_end":145,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::color::ExtendedColorType::__NonExhaustive","value":"ExtendedColorType::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":5258},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5258},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":726747,"byte_end":726764,"line_start":93,"line_end":93,"column_start":10,"column_end":27},"name":"ExtendedColorType","qualname":"::color::ExtendedColorType","value":"ExtendedColorType::{L1, La1, Rgb1, Rgba1, L2, La2, Rgb2, Rgba2, L4, La4, Rgb4, Rgba4, L8, La8, Rgb8, Rgba8, L16, La16, Rgb16, Rgba16, Bgr8, Bgra8, Unknown, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":5259},{"krate":0,"index":5261},{"krate":0,"index":5263},{"krate":0,"index":5265},{"krate":0,"index":5267},{"krate":0,"index":5269},{"krate":0,"index":5271},{"krate":0,"index":5273},{"krate":0,"index":5275},{"krate":0,"index":5277},{"krate":0,"index":5279},{"krate":0,"index":5281},{"krate":0,"index":5283},{"krate":0,"index":5285},{"krate":0,"index":5287},{"krate":0,"index":5289},{"krate":0,"index":5291},{"krate":0,"index":5293},{"krate":0,"index":5295},{"krate":0,"index":5297},{"krate":0,"index":5299},{"krate":0,"index":5301},{"krate":0,"index":5303},{"krate":0,"index":5306}],"decl_id":null,"docs":" An enumeration of color types encountered in image formats.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3213},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":728576,"byte_end":728589,"line_start":153,"line_end":153,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<ExtendedColorType>::channel_count","value":"fn (self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of channels for colors of this type.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5624},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":734953,"byte_end":734956,"line_start":373,"line_end":373,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::color::Rgb","value":"","parent":null,"children":[],"decl_id":null,"docs":"RGB colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":730703,"byte_end":730713,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":730714,"byte_end":730736,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5653},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":735033,"byte_end":735036,"line_start":374,"line_end":374,"column_start":5,"column_end":8},"name":"Bgr","qualname":"::color::Bgr","value":"","parent":null,"children":[],"decl_id":null,"docs":"BGR colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":730703,"byte_end":730713,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":730714,"byte_end":730736,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5682},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":735112,"byte_end":735116,"line_start":375,"line_end":375,"column_start":5,"column_end":9},"name":"Luma","qualname":"::color::Luma","value":"","parent":null,"children":[],"decl_id":null,"docs":"Grayscale colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":730703,"byte_end":730713,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":730714,"byte_end":730736,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5711},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":735193,"byte_end":735197,"line_start":376,"line_end":376,"column_start":5,"column_end":9},"name":"Rgba","qualname":"::color::Rgba","value":"","parent":null,"children":[],"decl_id":null,"docs":"RGB colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":730703,"byte_end":730713,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":730714,"byte_end":730736,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5740},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":735293,"byte_end":735297,"line_start":377,"line_end":377,"column_start":5,"column_end":9},"name":"Bgra","qualname":"::color::Bgra","value":"","parent":null,"children":[],"decl_id":null,"docs":"BGR colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":730703,"byte_end":730713,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":730714,"byte_end":730736,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5769},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":735392,"byte_end":735397,"line_start":378,"line_end":378,"column_start":5,"column_end":10},"name":"LumaA","qualname":"::color::LumaA","value":"","parent":null,"children":[],"decl_id":null,"docs":"Grayscale colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":730703,"byte_end":730713,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":730714,"byte_end":730736,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":3217},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":735564,"byte_end":735573,"line_start":382,"line_end":382,"column_start":11,"column_end":20},"name":"FromColor","qualname":"::color::FromColor","value":"FromColor<Other>","parent":null,"children":[{"krate":0,"index":3219}],"decl_id":null,"docs":" Provides color conversions for the different pixel types.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3219},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":735663,"byte_end":735673,"line_start":384,"line_end":384,"column_start":8,"column_end":18},"name":"from_color","qualname":"::color::FromColor::from_color","value":"fn (&mut self, _: &Other) -> ()","parent":{"krate":0,"index":3217},"children":[],"decl_id":null,"docs":" Changes `self` to represent `Other` in the color space of `Self`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5850},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":763552,"byte_end":763562,"line_start":40,"line_end":40,"column_start":5,"column_end":15},"name":"ImageLuma8","qualname":"::dynimage::DynamicImage::ImageLuma8","value":"DynamicImage::ImageLuma8(GrayImage)","parent":{"krate":0,"index":5849},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5853},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":763638,"byte_end":763649,"line_start":43,"line_end":43,"column_start":5,"column_end":16},"name":"ImageLumaA8","qualname":"::dynimage::DynamicImage::ImageLumaA8","value":"DynamicImage::ImageLumaA8(GrayAlphaImage)","parent":{"krate":0,"index":5849},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma with alpha\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5856},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":763718,"byte_end":763727,"line_start":46,"line_end":46,"column_start":5,"column_end":14},"name":"ImageRgb8","qualname":"::dynimage::DynamicImage::ImageRgb8","value":"DynamicImage::ImageRgb8(RgbImage)","parent":{"krate":0,"index":5849},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5859},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":763801,"byte_end":763811,"line_start":49,"line_end":49,"column_start":5,"column_end":15},"name":"ImageRgba8","qualname":"::dynimage::DynamicImage::ImageRgba8","value":"DynamicImage::ImageRgba8(RgbaImage)","parent":{"krate":0,"index":5849},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb with alpha\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5862},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":763875,"byte_end":763884,"line_start":52,"line_end":52,"column_start":5,"column_end":14},"name":"ImageBgr8","qualname":"::dynimage::DynamicImage::ImageBgr8","value":"DynamicImage::ImageBgr8(BgrImage)","parent":{"krate":0,"index":5849},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Bgr\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5865},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":763958,"byte_end":763968,"line_start":55,"line_end":55,"column_start":5,"column_end":15},"name":"ImageBgra8","qualname":"::dynimage::DynamicImage::ImageBgra8","value":"DynamicImage::ImageBgra8(BgraImage)","parent":{"krate":0,"index":5849},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Bgr with alpha\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5868},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":764034,"byte_end":764045,"line_start":58,"line_end":58,"column_start":5,"column_end":16},"name":"ImageLuma16","qualname":"::dynimage::DynamicImage::ImageLuma16","value":"DynamicImage::ImageLuma16(Gray16Image)","parent":{"krate":0,"index":5849},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Luma\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5871},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":764124,"byte_end":764136,"line_start":61,"line_end":61,"column_start":5,"column_end":17},"name":"ImageLumaA16","qualname":"::dynimage::DynamicImage::ImageLumaA16","value":"DynamicImage::ImageLumaA16(GrayAlpha16Image)","parent":{"krate":0,"index":5849},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Luma with alpha\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5874},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":764208,"byte_end":764218,"line_start":64,"line_end":64,"column_start":5,"column_end":15},"name":"ImageRgb16","qualname":"::dynimage::DynamicImage::ImageRgb16","value":"DynamicImage::ImageRgb16(Rgb16Image)","parent":{"krate":0,"index":5849},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Rgb\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5877},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":764295,"byte_end":764306,"line_start":67,"line_end":67,"column_start":5,"column_end":16},"name":"ImageRgba16","qualname":"::dynimage::DynamicImage::ImageRgba16","value":"DynamicImage::ImageRgba16(Rgba16Image)","parent":{"krate":0,"index":5849},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Rgb with alpha\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5849},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":763486,"byte_end":763498,"line_start":38,"line_end":38,"column_start":10,"column_end":22},"name":"DynamicImage","qualname":"::dynimage::DynamicImage","value":"DynamicImage::{ImageLuma8, ImageLumaA8, ImageRgb8, ImageRgba8, ImageBgr8, ImageBgra8, ImageLuma16, ImageLumaA16, ImageRgb16, ImageRgba16}","parent":null,"children":[{"krate":0,"index":5850},{"krate":0,"index":5853},{"krate":0,"index":5856},{"krate":0,"index":5859},{"krate":0,"index":5862},{"krate":0,"index":5865},{"krate":0,"index":5868},{"krate":0,"index":5871},{"krate":0,"index":5874},{"krate":0,"index":5877}],"decl_id":null,"docs":" A Dynamic Image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3441},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":768521,"byte_end":768530,"line_start":134,"line_end":134,"column_start":12,"column_end":21},"name":"new_luma8","qualname":"<DynamicImage>::new_luma8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3442},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":768733,"byte_end":768744,"line_start":140,"line_end":140,"column_start":12,"column_end":23},"name":"new_luma_a8","qualname":"<DynamicImage>::new_luma_a8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey\n pixels with transparency.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3443},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":768921,"byte_end":768929,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"new_rgb8","qualname":"<DynamicImage>::new_rgb8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3444},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":769105,"byte_end":769114,"line_start":150,"line_end":150,"column_start":12,"column_end":21},"name":"new_rgba8","qualname":"<DynamicImage>::new_rgba8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3445},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":769291,"byte_end":769300,"line_start":155,"line_end":155,"column_start":12,"column_end":21},"name":"new_bgra8","qualname":"<DynamicImage>::new_bgra8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of BGRA pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3446},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":769476,"byte_end":769484,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"new_bgr8","qualname":"<DynamicImage>::new_bgr8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of BGR pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3447},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":769660,"byte_end":769670,"line_start":165,"line_end":165,"column_start":12,"column_end":22},"name":"new_luma16","qualname":"<DynamicImage>::new_luma16","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3448},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":769874,"byte_end":769886,"line_start":171,"line_end":171,"column_start":12,"column_end":24},"name":"new_luma_a16","qualname":"<DynamicImage>::new_luma_a16","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey\n pixels with transparency.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3449},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":770064,"byte_end":770073,"line_start":176,"line_end":176,"column_start":12,"column_end":21},"name":"new_rgb16","qualname":"<DynamicImage>::new_rgb16","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3450},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":770250,"byte_end":770260,"line_start":181,"line_end":181,"column_start":12,"column_end":22},"name":"new_rgba16","qualname":"<DynamicImage>::new_rgba16","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3451},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":770426,"byte_end":770438,"line_start":186,"line_end":186,"column_start":12,"column_end":24},"name":"from_decoder","qualname":"<DynamicImage>::from_decoder","value":"fn <'a> (decoder: impl ImageDecoder<'a>) -> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decodes an encoded image into a dynamic image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3454},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":770616,"byte_end":770622,"line_start":193,"line_end":193,"column_start":12,"column_end":18},"name":"to_rgb","qualname":"<DynamicImage>::to_rgb","value":"fn (&self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3455},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":770791,"byte_end":770798,"line_start":200,"line_end":200,"column_start":12,"column_end":19},"name":"to_rgba","qualname":"<DynamicImage>::to_rgba","value":"fn (&self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3456},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":770967,"byte_end":770973,"line_start":207,"line_end":207,"column_start":12,"column_end":18},"name":"to_bgr","qualname":"<DynamicImage>::to_bgr","value":"fn (&self) -> BgrImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an BGR image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3457},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":771142,"byte_end":771149,"line_start":214,"line_end":214,"column_start":12,"column_end":19},"name":"to_bgra","qualname":"<DynamicImage>::to_bgra","value":"fn (&self) -> BgraImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an BGRA image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3458},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":771318,"byte_end":771325,"line_start":221,"line_end":221,"column_start":12,"column_end":19},"name":"to_luma","qualname":"<DynamicImage>::to_luma","value":"fn (&self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3459},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":771495,"byte_end":771508,"line_start":228,"line_end":228,"column_start":12,"column_end":25},"name":"to_luma_alpha","qualname":"<DynamicImage>::to_luma_alpha","value":"fn (&self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3460},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":771800,"byte_end":771808,"line_start":238,"line_end":238,"column_start":12,"column_end":20},"name":"into_rgb","qualname":"<DynamicImage>::into_rgb","value":"fn (self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGB image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3461},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":772125,"byte_end":772134,"line_start":249,"line_end":249,"column_start":12,"column_end":21},"name":"into_rgba","qualname":"<DynamicImage>::into_rgba","value":"fn (self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGBA image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3462},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":772453,"byte_end":772461,"line_start":260,"line_end":260,"column_start":12,"column_end":20},"name":"into_bgr","qualname":"<DynamicImage>::into_bgr","value":"fn (self) -> BgrImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a BGR image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3463},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":772778,"byte_end":772787,"line_start":271,"line_end":271,"column_start":12,"column_end":21},"name":"into_bgra","qualname":"<DynamicImage>::into_bgra","value":"fn (self) -> BgraImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a BGRA image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3464},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":773107,"byte_end":773116,"line_start":282,"line_end":282,"column_start":12,"column_end":21},"name":"into_luma","qualname":"<DynamicImage>::into_luma","value":"fn (self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a Luma image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3465},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":773437,"byte_end":773452,"line_start":293,"line_end":293,"column_start":12,"column_end":27},"name":"into_luma_alpha","qualname":"<DynamicImage>::into_luma_alpha","value":"fn (self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a LumaA image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3466},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":773834,"byte_end":773838,"line_start":304,"line_end":304,"column_start":12,"column_end":16},"name":"crop","qualname":"<DynamicImage>::crop","value":"fn (&mut self, x: u32, y: u32, width: u32, height: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut-out of this image delimited by the bounding rectangle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3467},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":774095,"byte_end":774103,"line_start":309,"line_end":309,"column_start":12,"column_end":20},"name":"crop_imm","qualname":"<DynamicImage>::crop_imm","value":"fn (&self, x: u32, y: u32, width: u32, height: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut-out of this image delimited by the bounding rectangle.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3468},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":774328,"byte_end":774335,"line_start":314,"line_end":314,"column_start":12,"column_end":19},"name":"as_rgb8","qualname":"<DynamicImage>::as_rgb8","value":"fn (&self) -> Option<&RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGB image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3469},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":774550,"byte_end":774561,"line_start":322,"line_end":322,"column_start":12,"column_end":23},"name":"as_mut_rgb8","qualname":"<DynamicImage>::as_mut_rgb8","value":"fn (&mut self) -> Option<&mut RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGB image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3470},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":774780,"byte_end":774787,"line_start":330,"line_end":330,"column_start":12,"column_end":19},"name":"as_bgr8","qualname":"<DynamicImage>::as_bgr8","value":"fn (&self) -> Option<&BgrImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit BGR image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3471},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":775002,"byte_end":775013,"line_start":338,"line_end":338,"column_start":12,"column_end":23},"name":"as_mut_bgr8","qualname":"<DynamicImage>::as_mut_bgr8","value":"fn (&mut self) -> Option<&mut BgrImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit BGR image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3472},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":775233,"byte_end":775241,"line_start":346,"line_end":346,"column_start":12,"column_end":20},"name":"as_rgba8","qualname":"<DynamicImage>::as_rgba8","value":"fn (&self) -> Option<&RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGBA image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3473},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":775459,"byte_end":775471,"line_start":354,"line_end":354,"column_start":12,"column_end":24},"name":"as_mut_rgba8","qualname":"<DynamicImage>::as_mut_rgba8","value":"fn (&mut self) -> Option<&mut RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGBA image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3474},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":775693,"byte_end":775701,"line_start":362,"line_end":362,"column_start":12,"column_end":20},"name":"as_bgra8","qualname":"<DynamicImage>::as_bgra8","value":"fn (&self) -> Option<&BgraImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit BGRA image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3475},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":775919,"byte_end":775931,"line_start":370,"line_end":370,"column_start":12,"column_end":24},"name":"as_mut_bgra8","qualname":"<DynamicImage>::as_mut_bgra8","value":"fn (&mut self) -> Option<&mut BgraImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGBA image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3476},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":776158,"byte_end":776166,"line_start":378,"line_end":378,"column_start":12,"column_end":20},"name":"as_luma8","qualname":"<DynamicImage>::as_luma8","value":"fn (&self) -> Option<&GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3477},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":776389,"byte_end":776401,"line_start":386,"line_end":386,"column_start":12,"column_end":24},"name":"as_mut_luma8","qualname":"<DynamicImage>::as_mut_luma8","value":"fn (&mut self) -> Option<&mut GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3478},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":776650,"byte_end":776664,"line_start":394,"line_end":394,"column_start":12,"column_end":26},"name":"as_luma_alpha8","qualname":"<DynamicImage>::as_luma_alpha8","value":"fn (&self) -> Option<&GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3479},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":776915,"byte_end":776933,"line_start":402,"line_end":402,"column_start":12,"column_end":30},"name":"as_mut_luma_alpha8","qualname":"<DynamicImage>::as_mut_luma_alpha8","value":"fn (&mut self) -> Option<&mut GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3480},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":777161,"byte_end":777169,"line_start":410,"line_end":410,"column_start":12,"column_end":20},"name":"as_rgb16","qualname":"<DynamicImage>::as_rgb16","value":"fn (&self) -> Option<&Rgb16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit RGB image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3481},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":777388,"byte_end":777400,"line_start":418,"line_end":418,"column_start":12,"column_end":24},"name":"as_mut_rgb16","qualname":"<DynamicImage>::as_mut_rgb16","value":"fn (&mut self) -> Option<&mut Rgb16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit RGB image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3482},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":777624,"byte_end":777633,"line_start":426,"line_end":426,"column_start":12,"column_end":21},"name":"as_rgba16","qualname":"<DynamicImage>::as_rgba16","value":"fn (&self) -> Option<&Rgba16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit RGBA image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3483},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":777855,"byte_end":777868,"line_start":434,"line_end":434,"column_start":12,"column_end":25},"name":"as_mut_rgba16","qualname":"<DynamicImage>::as_mut_rgba16","value":"fn (&mut self) -> Option<&mut Rgba16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit RGBA image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3484},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":778099,"byte_end":778108,"line_start":442,"line_end":442,"column_start":12,"column_end":21},"name":"as_luma16","qualname":"<DynamicImage>::as_luma16","value":"fn (&self) -> Option<&Gray16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit Grayscale image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3485},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":778335,"byte_end":778348,"line_start":450,"line_end":450,"column_start":12,"column_end":25},"name":"as_mut_luma16","qualname":"<DynamicImage>::as_mut_luma16","value":"fn (&mut self) -> Option<&mut Gray16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit Grayscale image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3486},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":778601,"byte_end":778616,"line_start":458,"line_end":458,"column_start":12,"column_end":27},"name":"as_luma_alpha16","qualname":"<DynamicImage>::as_luma_alpha16","value":"fn (&self) -> Option<&GrayAlpha16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit Grayscale image with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3487},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":778871,"byte_end":778890,"line_start":466,"line_end":466,"column_start":12,"column_end":31},"name":"as_mut_luma_alpha16","qualname":"<DynamicImage>::as_mut_luma_alpha16","value":"fn (&mut self) -> Option<&mut GrayAlpha16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit Grayscale image with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3488},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":779149,"byte_end":779167,"line_start":474,"line_end":474,"column_start":12,"column_end":30},"name":"as_flat_samples_u8","qualname":"<DynamicImage>::as_flat_samples_u8","value":"fn (&self) -> Option<FlatSamples<&[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer for 8 bit per channel images.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3489},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":779801,"byte_end":779820,"line_start":487,"line_end":487,"column_start":12,"column_end":31},"name":"as_flat_samples_u16","qualname":"<DynamicImage>::as_flat_samples_u16","value":"fn (&self) -> Option<FlatSamples<&[u16]>>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer for 16 bit per channel images.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3490},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":780287,"byte_end":780295,"line_start":498,"line_end":498,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<DynamicImage>::to_bytes","value":"fn (&self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return this image's pixels as a byte vector.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3491},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":780403,"byte_end":780408,"line_start":503,"line_end":503,"column_start":12,"column_end":17},"name":"color","qualname":"<DynamicImage>::color","value":"fn (&self) -> color::ColorType","parent":null,"children":[],"decl_id":null,"docs":" Return this image's color type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3492},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":781212,"byte_end":781221,"line_start":519,"line_end":519,"column_start":12,"column_end":21},"name":"grayscale","qualname":"<DynamicImage>::grayscale","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a grayscale version of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3493},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":782327,"byte_end":782333,"line_start":536,"line_end":536,"column_start":12,"column_end":18},"name":"invert","qualname":"<DynamicImage>::invert","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Invert the colors of this image.\n This method operates inplace.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3494},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":782697,"byte_end":782703,"line_start":544,"line_end":544,"column_start":12,"column_end":18},"name":"resize","qualname":"<DynamicImage>::resize","value":"fn (&self, nwidth: u32, nheight: u32, filter: imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by ```nwidth``` and ```nheight```.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3495},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":783167,"byte_end":783179,"line_start":554,"line_end":554,"column_start":12,"column_end":24},"name":"resize_exact","qualname":"<DynamicImage>::resize_exact","value":"fn (&self, nwidth: u32, nheight: u32, filter: imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. Does not preserve aspect ratio.\n ```nwidth``` and ```nheight``` are the new image's dimensions\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3496},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":783870,"byte_end":783879,"line_start":571,"line_end":571,"column_start":12,"column_end":21},"name":"thumbnail","qualname":"<DynamicImage>::thumbnail","value":"fn (&self, nwidth: u32, nheight: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to fit within a specific size.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by ```nwidth``` and ```nheight```.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3497},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":784487,"byte_end":784502,"line_start":583,"line_end":583,"column_start":12,"column_end":27},"name":"thumbnail_exact","qualname":"<DynamicImage>::thumbnail_exact","value":"fn (&self, nwidth: u32, nheight: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to a specific size.\n Returns a new image. Does not preserve aspect ratio.\n ```nwidth``` and ```nheight``` are the new image's dimensions.\n This method uses a fast integer algorithm where each source\n pixel contributes to exactly one target pixel.\n May give aliasing artifacts if new size is close to old size.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3498},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":785022,"byte_end":785036,"line_start":593,"line_end":593,"column_start":12,"column_end":26},"name":"resize_to_fill","qualname":"<DynamicImage>::resize_to_fill","value":"fn (&self, nwidth: u32, nheight: u32, filter: imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the larger (relative to aspect ratio) of the bounds\n specified by ```nwidth``` and ```nheight```, then cropped to\n fit within the other bound.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3499},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":785856,"byte_end":785860,"line_start":616,"line_end":616,"column_start":12,"column_end":16},"name":"blur","qualname":"<DynamicImage>::blur","value":"fn (&self, sigma: f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on this image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3500},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":786238,"byte_end":786247,"line_start":625,"line_end":625,"column_start":12,"column_end":21},"name":"unsharpen","qualname":"<DynamicImage>::unsharpen","value":"fn (&self, sigma: f32, threshold: i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on this image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is a control of how much to sharpen.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3501},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":786456,"byte_end":786465,"line_start":630,"line_end":630,"column_start":12,"column_end":21},"name":"filter3x3","qualname":"<DynamicImage>::filter3x3","value":"fn (&self, kernel: &[f32]) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Filters this image with the specified 3x3 kernel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3502},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":786875,"byte_end":786890,"line_start":641,"line_end":641,"column_start":12,"column_end":27},"name":"adjust_contrast","qualname":"<DynamicImage>::adjust_contrast","value":"fn (&self, c: f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of this image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3503},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":787190,"byte_end":787198,"line_start":648,"line_end":648,"column_start":12,"column_end":20},"name":"brighten","qualname":"<DynamicImage>::brighten","value":"fn (&self, value: i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Brighten the pixels of this image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3504},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":787546,"byte_end":787555,"line_start":656,"line_end":656,"column_start":12,"column_end":21},"name":"huerotate","qualname":"<DynamicImage>::huerotate","value":"fn (&self, value: i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3505},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":787714,"byte_end":787719,"line_start":661,"line_end":661,"column_start":12,"column_end":17},"name":"flipv","qualname":"<DynamicImage>::flipv","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image vertically\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3506},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":787865,"byte_end":787870,"line_start":666,"line_end":666,"column_start":12,"column_end":17},"name":"fliph","qualname":"<DynamicImage>::fliph","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image horizontally\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3507},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":788029,"byte_end":788037,"line_start":671,"line_end":671,"column_start":12,"column_end":20},"name":"rotate90","qualname":"<DynamicImage>::rotate90","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 90 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3508},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":788190,"byte_end":788199,"line_start":676,"line_end":676,"column_start":12,"column_end":21},"name":"rotate180","qualname":"<DynamicImage>::rotate180","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 180 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3509},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":788353,"byte_end":788362,"line_start":681,"line_end":681,"column_start":12,"column_end":21},"name":"rotate270","qualname":"<DynamicImage>::rotate270","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 270 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3510},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":788517,"byte_end":788525,"line_start":686,"line_end":686,"column_start":12,"column_end":20},"name":"write_to","qualname":"<DynamicImage>::write_to","value":"fn <W, F> (&self, w: &mut W, format: F) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode this image and write it to ```w```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3513},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":792254,"byte_end":792258,"line_start":785,"line_end":785,"column_start":12,"column_end":16},"name":"save","qualname":"<DynamicImage>::save","value":"fn <Q> (&self, path: Q) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3515},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":792630,"byte_end":792646,"line_start":799,"line_end":799,"column_start":12,"column_end":28},"name":"save_with_format","qualname":"<DynamicImage>::save_with_format","value":"fn <Q> (&self, path: Q, format: ImageFormat) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the specified path in\n the specified format.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3535},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":799508,"byte_end":799512,"line_start":977,"line_end":977,"column_start":8,"column_end":12},"name":"open","qualname":"::dynimage::open","value":"fn <P> (path: P) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Open the image located at the path specified.\n The image's format is determined from the path's file extension.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3537},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":800067,"byte_end":800083,"line_start":992,"line_end":992,"column_start":8,"column_end":24},"name":"image_dimensions","qualname":"::dynimage::image_dimensions","value":"fn <P> (path: P) -> ImageResult<(u32, u32)>","parent":null,"children":[],"decl_id":null,"docs":" Read the dimensions of the image located at the specified path.\n This is faster than fully loading the image and then getting its dimensions.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3539},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":800658,"byte_end":800669,"line_start":1007,"line_end":1007,"column_start":8,"column_end":19},"name":"save_buffer","qualname":"::dynimage::save_buffer","value":"fn <P> (path: P, buf: &[u8], width: u32, height: u32, color: color::ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3541},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":801323,"byte_end":801346,"line_start":1029,"line_end":1029,"column_start":8,"column_end":31},"name":"save_buffer_with_format","qualname":"::dynimage::save_buffer_with_format","value":"fn <P> (path: P, buf: &[u8], width: u32, height: u32, color: color::ColorType, format: ImageFormat) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified\n in the specified format.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3543},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":801909,"byte_end":801925,"line_start":1052,"line_end":1052,"column_start":8,"column_end":24},"name":"load_from_memory","qualname":"::dynimage::load_from_memory","value":"fn (buffer: &[u8]) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3544},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":802407,"byte_end":802435,"line_start":1067,"line_end":1067,"column_start":8,"column_end":36},"name":"load_from_memory_with_format","qualname":"::dynimage::load_from_memory_with_format","value":"fn (buf: &[u8], format: ImageFormat) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":802382,"byte_end":802399,"line_start":1066,"line_end":1066,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5883},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":807158,"byte_end":807161,"line_start":25,"line_end":25,"column_start":5,"column_end":8},"name":"Png","qualname":"::image::ImageFormat::Png","value":"ImageFormat::Png","parent":{"krate":0,"index":5882},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5885},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":807200,"byte_end":807204,"line_start":28,"line_end":28,"column_start":5,"column_end":9},"name":"Jpeg","qualname":"::image::ImageFormat::Jpeg","value":"ImageFormat::Jpeg","parent":{"krate":0,"index":5882},"children":[],"decl_id":null,"docs":" An Image in JPEG Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5887},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":807242,"byte_end":807245,"line_start":31,"line_end":31,"column_start":5,"column_end":8},"name":"Gif","qualname":"::image::ImageFormat::Gif","value":"ImageFormat::Gif","parent":{"krate":0,"index":5882},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5889},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":807284,"byte_end":807288,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"name":"WebP","qualname":"::image::ImageFormat::WebP","value":"ImageFormat::WebP","parent":{"krate":0,"index":5882},"children":[],"decl_id":null,"docs":" An Image in WEBP Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5891},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":807334,"byte_end":807337,"line_start":37,"line_end":37,"column_start":5,"column_end":8},"name":"Pnm","qualname":"::image::ImageFormat::Pnm","value":"ImageFormat::Pnm","parent":{"krate":0,"index":5882},"children":[],"decl_id":null,"docs":" An Image in general PNM Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5893},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":807376,"byte_end":807380,"line_start":40,"line_end":40,"column_start":5,"column_end":9},"name":"Tiff","qualname":"::image::ImageFormat::Tiff","value":"ImageFormat::Tiff","parent":{"krate":0,"index":5882},"children":[],"decl_id":null,"docs":" An Image in TIFF Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5895},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":807418,"byte_end":807421,"line_start":43,"line_end":43,"column_start":5,"column_end":8},"name":"Tga","qualname":"::image::ImageFormat::Tga","value":"ImageFormat::Tga","parent":{"krate":0,"index":5882},"children":[],"decl_id":null,"docs":" An Image in TGA Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5897},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":807459,"byte_end":807462,"line_start":46,"line_end":46,"column_start":5,"column_end":8},"name":"Dds","qualname":"::image::ImageFormat::Dds","value":"ImageFormat::Dds","parent":{"krate":0,"index":5882},"children":[],"decl_id":null,"docs":" An Image in DDS Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5899},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":807500,"byte_end":807503,"line_start":49,"line_end":49,"column_start":5,"column_end":8},"name":"Bmp","qualname":"::image::ImageFormat::Bmp","value":"ImageFormat::Bmp","parent":{"krate":0,"index":5882},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5901},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":807541,"byte_end":807544,"line_start":52,"line_end":52,"column_start":5,"column_end":8},"name":"Ico","qualname":"::image::ImageFormat::Ico","value":"ImageFormat::Ico","parent":{"krate":0,"index":5882},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5903},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":807591,"byte_end":807594,"line_start":55,"line_end":55,"column_start":5,"column_end":8},"name":"Hdr","qualname":"::image::ImageFormat::Hdr","value":"ImageFormat::Hdr","parent":{"krate":0,"index":5882},"children":[],"decl_id":null,"docs":" An Image in Radiance HDR Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5905},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":807637,"byte_end":807645,"line_start":58,"line_end":58,"column_start":5,"column_end":13},"name":"Farbfeld","qualname":"::image::ImageFormat::Farbfeld","value":"ImageFormat::Farbfeld","parent":{"krate":0,"index":5882},"children":[],"decl_id":null,"docs":" An Image in farbfeld Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5907},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":807671,"byte_end":807686,"line_start":61,"line_end":61,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::image::ImageFormat::__NonExhaustive","value":"ImageFormat::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":5882},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5882},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":807109,"byte_end":807120,"line_start":23,"line_end":23,"column_start":10,"column_end":21},"name":"ImageFormat","qualname":"::image::ImageFormat","value":"ImageFormat::{Png, Jpeg, Gif, WebP, Pnm, Tiff, Tga, Dds, Bmp, Ico, Hdr, Farbfeld, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":5883},{"krate":0,"index":5885},{"krate":0,"index":5887},{"krate":0,"index":5889},{"krate":0,"index":5891},{"krate":0,"index":5893},{"krate":0,"index":5895},{"krate":0,"index":5897},{"krate":0,"index":5899},{"krate":0,"index":5901},{"krate":0,"index":5903},{"krate":0,"index":5905},{"krate":0,"index":5907}],"decl_id":null,"docs":" An enumeration of supported image formats.\n Not all formats support both encoding and decoding.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3571},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":807828,"byte_end":807837,"line_start":66,"line_end":66,"column_start":12,"column_end":21},"name":"from_path","qualname":"<ImageFormat>::from_path","value":"fn <P> (path: P) -> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Return the image format specified by the path's file extension.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3573},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":808688,"byte_end":808702,"line_start":81,"line_end":81,"column_start":12,"column_end":26},"name":"extensions_str","qualname":"<ImageFormat>::extensions_str","value":"fn (self) -> &'static [&'static str]","parent":null,"children":[],"decl_id":null,"docs":" Return a list of applicable extensions for this format.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5926},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":809596,"byte_end":809599,"line_start":105,"line_end":105,"column_start":5,"column_end":8},"name":"Png","qualname":"::image::ImageOutputFormat::Png","value":"ImageOutputFormat::Png","parent":{"krate":0,"index":5925},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"png\")","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":809537,"byte_end":809560,"line_start":103,"line_end":103,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5928},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":809690,"byte_end":809694,"line_start":109,"line_end":109,"column_start":5,"column_end":9},"name":"Jpeg","qualname":"::image::ImageOutputFormat::Jpeg","value":"ImageOutputFormat::Jpeg(u8)","parent":{"krate":0,"index":5925},"children":[],"decl_id":null,"docs":" An Image in JPEG Format with specified quality\n","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":809606,"byte_end":809630,"line_start":107,"line_end":107,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5931},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":809776,"byte_end":809779,"line_start":113,"line_end":113,"column_start":5,"column_end":8},"name":"Pnm","qualname":"::image::ImageOutputFormat::Pnm","value":"ImageOutputFormat::Pnm(PNMSubtype)","parent":{"krate":0,"index":5925},"children":[],"decl_id":null,"docs":" An Image in one of the PNM Formats\n","sig":null,"attributes":[{"value":"cfg(feature = \"pnm\")","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":809705,"byte_end":809728,"line_start":111,"line_end":111,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5934},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":809857,"byte_end":809860,"line_start":117,"line_end":117,"column_start":5,"column_end":8},"name":"Gif","qualname":"::image::ImageOutputFormat::Gif","value":"ImageOutputFormat::Gif","parent":{"krate":0,"index":5925},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"gif\")","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":809798,"byte_end":809821,"line_start":115,"line_end":115,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5936},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":809926,"byte_end":809929,"line_start":121,"line_end":121,"column_start":5,"column_end":8},"name":"Ico","qualname":"::image::ImageOutputFormat::Ico","value":"ImageOutputFormat::Ico","parent":{"krate":0,"index":5925},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":809867,"byte_end":809890,"line_start":119,"line_end":119,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5938},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":809995,"byte_end":809998,"line_start":125,"line_end":125,"column_start":5,"column_end":8},"name":"Bmp","qualname":"::image::ImageOutputFormat::Bmp","value":"ImageOutputFormat::Bmp","parent":{"krate":0,"index":5925},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":809936,"byte_end":809959,"line_start":123,"line_end":123,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5940},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":810074,"byte_end":810082,"line_start":129,"line_end":129,"column_start":5,"column_end":13},"name":"Farbfeld","qualname":"::image::ImageOutputFormat::Farbfeld","value":"ImageOutputFormat::Farbfeld","parent":{"krate":0,"index":5925},"children":[],"decl_id":null,"docs":" An Image in farbfeld Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"farbfeld\")","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":810005,"byte_end":810033,"line_start":127,"line_end":127,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5942},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":810334,"byte_end":810345,"line_start":134,"line_end":134,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::image::ImageOutputFormat::Unsupported","value":"ImageOutputFormat::Unsupported(String)","parent":{"krate":0,"index":5925},"children":[],"decl_id":null,"docs":" A value for signalling an error: An unsupported format was requested\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5945},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":810379,"byte_end":810394,"line_start":137,"line_end":137,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::image::ImageOutputFormat::__NonExhaustive","value":"ImageOutputFormat::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":5925},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5925},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":809513,"byte_end":809530,"line_start":102,"line_end":102,"column_start":10,"column_end":27},"name":"ImageOutputFormat","qualname":"::image::ImageOutputFormat","value":"ImageOutputFormat::{Png, Jpeg, Pnm, Gif, Ico, Bmp, Farbfeld, Unsupported, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":5926},{"krate":0,"index":5928},{"krate":0,"index":5931},{"krate":0,"index":5934},{"krate":0,"index":5936},{"krate":0,"index":5938},{"krate":0,"index":5940},{"krate":0,"index":5942},{"krate":0,"index":5945}],"decl_id":null,"docs":" An enumeration of supported image formats for encoding.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5959},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":819518,"byte_end":819526,"line_start":354,"line_end":354,"column_start":12,"column_end":20},"name":"Progress","qualname":"::image::Progress","value":"Progress {  }","parent":null,"children":[{"krate":0,"index":5960},{"krate":0,"index":5961}],"decl_id":null,"docs":" Represents the progress of an image operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3599},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":819634,"byte_end":819641,"line_start":361,"line_end":361,"column_start":12,"column_end":19},"name":"current","qualname":"<Progress>::current","value":"fn (self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" A measure of completed decoding.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3600},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":819814,"byte_end":819819,"line_start":368,"line_end":368,"column_start":12,"column_end":17},"name":"total","qualname":"<Progress>::total","value":"fn (self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" A measure of all necessary decoding work.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3601},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":819929,"byte_end":819938,"line_start":373,"line_end":373,"column_start":12,"column_end":21},"name":"remaining","qualname":"<Progress>::remaining","value":"fn (self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Calculate a measure for remaining decoding work.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3602},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":820067,"byte_end":820079,"line_start":379,"line_end":379,"column_start":11,"column_end":23},"name":"ImageDecoder","qualname":"::image::ImageDecoder","value":"ImageDecoder<'a>: Sized","parent":null,"children":[{"krate":0,"index":3604},{"krate":0,"index":3605},{"krate":0,"index":3606},{"krate":0,"index":3607},{"krate":0,"index":3608},{"krate":0,"index":3609},{"krate":0,"index":3610},{"krate":0,"index":3611},{"krate":0,"index":3613}],"decl_id":null,"docs":" The trait that all decoders implement\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3604},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":820156,"byte_end":820162,"line_start":381,"line_end":381,"column_start":10,"column_end":16},"name":"Reader","qualname":"::image::ImageDecoder::Reader","value":"type Reader: Read + 'a;","parent":{"krate":0,"index":3602},"children":[],"decl_id":null,"docs":" The type of reader produced by `into_reader`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3605},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":820252,"byte_end":820262,"line_start":384,"line_end":384,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::ImageDecoder::dimensions","value":"fn (&self) -> (u32, u32)","parent":{"krate":0,"index":3602},"children":[],"decl_id":null,"docs":" Returns a tuple containing the width and height of the image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3606},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":820367,"byte_end":820377,"line_start":387,"line_end":387,"column_start":8,"column_end":18},"name":"color_type","qualname":"::image::ImageDecoder::color_type","value":"fn (&self) -> ColorType","parent":{"krate":0,"index":3602},"children":[],"decl_id":null,"docs":" Returns the color type of the image data produced by this decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3607},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":820471,"byte_end":820490,"line_start":390,"line_end":390,"column_start":8,"column_end":27},"name":"original_color_type","qualname":"::image::ImageDecoder::original_color_type","value":"fn (&self) -> ExtendedColorType","parent":{"krate":0,"index":3602},"children":[],"decl_id":null,"docs":" Retuns the color type of the image file before decoding\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3608},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":820831,"byte_end":820842,"line_start":397,"line_end":397,"column_start":8,"column_end":19},"name":"into_reader","qualname":"::image::ImageDecoder::into_reader","value":"fn (self) -> ImageResult<Self::Reader>","parent":{"krate":0,"index":3602},"children":[],"decl_id":null,"docs":" Returns a reader that can be used to obtain the bytes of the image. For the best\n performance, always try to read at least `scanline_bytes` from the reader at a time. Reading\n fewer bytes will cause the reader to perform internal buffering.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3609},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":821229,"byte_end":821240,"line_start":405,"line_end":405,"column_start":8,"column_end":19},"name":"total_bytes","qualname":"::image::ImageDecoder::total_bytes","value":"fn (&self) -> u64","parent":{"krate":0,"index":3602},"children":[],"decl_id":null,"docs":" Returns the total number of bytes in the decoded image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3610},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":821577,"byte_end":821591,"line_start":412,"line_end":412,"column_start":8,"column_end":22},"name":"scanline_bytes","qualname":"::image::ImageDecoder::scanline_bytes","value":"fn (&self) -> u64","parent":{"krate":0,"index":3602},"children":[],"decl_id":null,"docs":" Returns the minimum number of bytes that can be efficiently read from this decoder. This may\n be as few as 1 or as many as `total_bytes()`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3611},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":822480,"byte_end":822490,"line_start":436,"line_end":436,"column_start":8,"column_end":18},"name":"read_image","qualname":"::image::ImageDecoder::read_image","value":"fn (self, buf: &mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":3602},"children":[],"decl_id":null,"docs":" Returns all the bytes in the image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3613},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":822718,"byte_end":822742,"line_start":442,"line_end":442,"column_start":8,"column_end":32},"name":"read_image_with_progress","qualname":"::image::ImageDecoder::read_image_with_progress","value":"fn <F> (self, buf: &mut [u8], progress_callback: F) -> ImageResult<()>","parent":{"krate":0,"index":3602},"children":[],"decl_id":null,"docs":" Same as `read_image` but periodically calls the provided callback to give updates on loading\n progress.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3615},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":823765,"byte_end":823780,"line_start":476,"line_end":476,"column_start":11,"column_end":26},"name":"ImageDecoderExt","qualname":"::image::ImageDecoderExt","value":"ImageDecoderExt<'a>: ImageDecoder<'a> + Sized","parent":null,"children":[{"krate":0,"index":3617},{"krate":0,"index":3619}],"decl_id":null,"docs":" Specialized image decoding not be supported by all formats\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3617},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":823935,"byte_end":823944,"line_start":478,"line_end":478,"column_start":8,"column_end":17},"name":"read_rect","qualname":"::image::ImageDecoderExt::read_rect","value":"fn (&mut self, x: u32, y: u32, width: u32, height: u32, buf: &mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" Decode a rectangular section of the image; see [`read_rect_with_progress()`](#fn.read_rect_with_progress).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3619},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":824886,"byte_end":824909,"line_start":501,"line_end":501,"column_start":8,"column_end":31},"name":"read_rect_with_progress","qualname":"::image::ImageDecoderExt::read_rect_with_progress","value":"fn <F> (&mut self, x: u32, y: u32, width: u32, height: u32, buf: &mut [u8], progress_callback: F) -> ImageResult<()>","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" Decode a rectangular section of the image, periodically reporting progress.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3621},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":825140,"byte_end":825156,"line_start":513,"line_end":513,"column_start":11,"column_end":27},"name":"AnimationDecoder","qualname":"::image::AnimationDecoder","value":"AnimationDecoder<'a>","parent":null,"children":[{"krate":0,"index":3623}],"decl_id":null,"docs":" AnimationDecoder trait\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3623},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":825228,"byte_end":825239,"line_start":515,"line_end":515,"column_start":8,"column_end":19},"name":"into_frames","qualname":"::image::AnimationDecoder::into_frames","value":"fn (self) -> Frames<'a>","parent":{"krate":0,"index":3621},"children":[],"decl_id":null,"docs":" Consume the decoder producing a series of frames.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3624},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":825311,"byte_end":825323,"line_start":519,"line_end":519,"column_start":11,"column_end":23},"name":"ImageEncoder","qualname":"::image::ImageEncoder","value":"ImageEncoder","parent":null,"children":[{"krate":0,"index":3625}],"decl_id":null,"docs":" The trait all encoders implement\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3625},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":825872,"byte_end":825883,"line_start":530,"line_end":530,"column_start":8,"column_end":19},"name":"write_image","qualname":"::image::ImageEncoder::write_image","value":"fn (self, buf: &[u8], width: u32, height: u32, color_type: ColorType) -> ImageResult<()>","parent":{"krate":0,"index":3624},"children":[],"decl_id":null,"docs":" Writes all the bytes in an image to the encoder.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3626},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":826060,"byte_end":826066,"line_start":540,"line_end":540,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::image::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":3629},{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3632},{"krate":0,"index":3633}],"decl_id":null,"docs":" Immutable pixel iterator\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3639},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":826699,"byte_end":826715,"line_start":571,"line_end":571,"column_start":11,"column_end":27},"name":"GenericImageView","qualname":"::image::GenericImageView","value":"GenericImageView","parent":null,"children":[{"krate":0,"index":3640},{"krate":0,"index":3641},{"krate":0,"index":3642},{"krate":0,"index":3643},{"krate":0,"index":3644},{"krate":0,"index":3645},{"krate":0,"index":3646},{"krate":0,"index":3647},{"krate":0,"index":3648},{"krate":0,"index":3649},{"krate":0,"index":3650},{"krate":0,"index":3651}],"decl_id":null,"docs":" Trait to inspect an image.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3640},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":826754,"byte_end":826759,"line_start":573,"line_end":573,"column_start":10,"column_end":15},"name":"Pixel","qualname":"::image::GenericImageView::Pixel","value":"type Pixel: Pixel;","parent":{"krate":0,"index":3639},"children":[],"decl_id":null,"docs":" The type of pixel.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3641},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":826993,"byte_end":827007,"line_start":578,"line_end":578,"column_start":10,"column_end":24},"name":"InnerImageView","qualname":"::image::GenericImageView::InnerImageView","value":"type InnerImageView: GenericImageView<Pixel = Self::Pixel>;","parent":{"krate":0,"index":3639},"children":[],"decl_id":null,"docs":" Underlying image type. This is mainly used by SubImages in order to\n always have a reference to the original image. This allows for less\n indirections and it eases the use of nested SubImages.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3642},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":827100,"byte_end":827110,"line_start":581,"line_end":581,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::GenericImageView::dimensions","value":"fn (&self) -> (u32, u32)","parent":{"krate":0,"index":3639},"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3643},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":827174,"byte_end":827179,"line_start":584,"line_end":584,"column_start":8,"column_end":13},"name":"width","qualname":"::image::GenericImageView::width","value":"fn (&self) -> u32","parent":{"krate":0,"index":3639},"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3644},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":827294,"byte_end":827300,"line_start":590,"line_end":590,"column_start":8,"column_end":14},"name":"height","qualname":"::image::GenericImageView::height","value":"fn (&self) -> u32","parent":{"krate":0,"index":3639},"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3645},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":827427,"byte_end":827433,"line_start":596,"line_end":596,"column_start":8,"column_end":14},"name":"bounds","qualname":"::image::GenericImageView::bounds","value":"fn (&self) -> (u32, u32, u32, u32)","parent":{"krate":0,"index":3639},"children":[],"decl_id":null,"docs":" The bounding rectangle of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3646},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":827550,"byte_end":827559,"line_start":599,"line_end":599,"column_start":8,"column_end":17},"name":"in_bounds","qualname":"::image::GenericImageView::in_bounds","value":"fn (&self, x: u32, y: u32) -> bool","parent":{"krate":0,"index":3639},"children":[],"decl_id":null,"docs":" Returns true if this x, y coordinate is contained inside the image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3647},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":827882,"byte_end":827891,"line_start":611,"line_end":611,"column_start":8,"column_end":17},"name":"get_pixel","qualname":"::image::GenericImageView::get_pixel","value":"fn (&self, x: u32, y: u32) -> Self::Pixel","parent":{"krate":0,"index":3639},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3648},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":828078,"byte_end":828094,"line_start":616,"line_end":616,"column_start":15,"column_end":31},"name":"unsafe_get_pixel","qualname":"::image::GenericImageView::unsafe_get_pixel","value":"fn (&self, x: u32, y: u32) -> Self::Pixel","parent":{"krate":0,"index":3639},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3649},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":828326,"byte_end":828332,"line_start":623,"line_end":623,"column_start":8,"column_end":14},"name":"pixels","qualname":"::image::GenericImageView::pixels","value":"fn (&self) -> Pixels<Self>","parent":{"krate":0,"index":3639},"children":[],"decl_id":null,"docs":" Returns an Iterator over the pixels of this image.\n The iterator yields the coordinates of each pixel\n along with their value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3650},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":828602,"byte_end":828607,"line_start":636,"line_end":636,"column_start":8,"column_end":13},"name":"inner","qualname":"::image::GenericImageView::inner","value":"fn (&self) -> &Self::InnerImageView","parent":{"krate":0,"index":3639},"children":[],"decl_id":null,"docs":" Returns a reference to the underlying image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3651},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":828804,"byte_end":828808,"line_start":640,"line_end":640,"column_start":8,"column_end":12},"name":"view","qualname":"::image::GenericImageView::view","value":"fn (&self, x: u32, y: u32, width: u32, height: u32) -> SubImage<&Self::InnerImageView>","parent":{"krate":0,"index":3639},"children":[],"decl_id":null,"docs":" Returns an subimage that is an immutable view into this image.\n You can use [`GenericImage::sub_image`] if you need a mutable view instead.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3652},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":829007,"byte_end":829019,"line_start":646,"line_end":646,"column_start":11,"column_end":23},"name":"GenericImage","qualname":"::image::GenericImage","value":"GenericImage: GenericImageView","parent":null,"children":[{"krate":0,"index":3653},{"krate":0,"index":3654},{"krate":0,"index":3655},{"krate":0,"index":3656},{"krate":0,"index":3657},{"krate":0,"index":3658},{"krate":0,"index":3660},{"krate":0,"index":3662},{"krate":0,"index":3663}],"decl_id":null,"docs":" A trait for manipulating images.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3653},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":829264,"byte_end":829274,"line_start":650,"line_end":650,"column_start":10,"column_end":20},"name":"InnerImage","qualname":"::image::GenericImage::InnerImage","value":"type InnerImage: GenericImage<Pixel = Self::Pixel>;","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Underlying image type. This is mainly used by SubImages in order to\n always have a reference to the original image. This allows for less\n indirections and it eases the use of nested SubImages.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3654},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":829464,"byte_end":829477,"line_start":657,"line_end":657,"column_start":8,"column_end":21},"name":"get_pixel_mut","qualname":"::image::GenericImage::get_pixel_mut","value":"fn (&mut self, x: u32, y: u32) -> &mut Self::Pixel","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3655},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":829651,"byte_end":829660,"line_start":664,"line_end":664,"column_start":8,"column_end":17},"name":"put_pixel","qualname":"::image::GenericImage::put_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: Self::Pixel) -> ()","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3656},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":829852,"byte_end":829868,"line_start":669,"line_end":669,"column_start":15,"column_end":31},"name":"unsafe_put_pixel","qualname":"::image::GenericImage::unsafe_put_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: Self::Pixel) -> ()","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Puts a pixel at location (x, y)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3657},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":830135,"byte_end":830146,"line_start":676,"line_end":676,"column_start":8,"column_end":19},"name":"blend_pixel","qualname":"::image::GenericImage::blend_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: Self::Pixel) -> ()","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y), taking into account alpha channels","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3658},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":830908,"byte_end":830917,"line_start":693,"line_end":693,"column_start":8,"column_end":17},"name":"copy_from","qualname":"::image::GenericImage::copy_from","value":"fn <O> (&mut self, other: &O, x: u32, y: u32) -> ImageResult<()>","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Copies all of the pixels from another image into this image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3660},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":831964,"byte_end":831975,"line_start":721,"line_end":721,"column_start":8,"column_end":19},"name":"copy_within","qualname":"::image::GenericImage::copy_within","value":"fn (&mut self, source: Rect, x: u32, y: u32) -> bool","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Copies all of the pixels from one part of this image to another part of this image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3662},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":833633,"byte_end":833642,"line_start":757,"line_end":757,"column_start":8,"column_end":17},"name":"inner_mut","qualname":"::image::GenericImage::inner_mut","value":"fn (&mut self) -> &mut Self::InnerImage","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3663},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":833837,"byte_end":833846,"line_start":761,"line_end":761,"column_start":8,"column_end":17},"name":"sub_image","qualname":"::image::GenericImage::sub_image","value":"fn (&mut self, x: u32, y: u32, width: u32, height: u32) -> SubImage<&mut Self::InnerImage>","parent":{"krate":0,"index":3652},"children":[],"decl_id":null,"docs":" Returns a mutable subimage that is a view into this image.\n If you want an immutable subimage instead, use [`GenericImageView::view`]\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3664},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":834337,"byte_end":834345,"line_start":778,"line_end":778,"column_start":12,"column_end":20},"name":"SubImage","qualname":"::image::SubImage","value":"SubImage {  }","parent":null,"children":[{"krate":0,"index":3666},{"krate":0,"index":3667},{"krate":0,"index":3668},{"krate":0,"index":3669},{"krate":0,"index":3670}],"decl_id":null,"docs":" A View into another image","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3677},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":834733,"byte_end":834736,"line_start":794,"line_end":794,"column_start":12,"column_end":15},"name":"new","qualname":"<SubImage<I>>::new","value":"fn (image: I, x: u32, y: u32, width: u32, height: u32) -> SubImage<I>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new subimage\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3678},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":835025,"byte_end":835038,"line_start":805,"line_end":805,"column_start":12,"column_end":25},"name":"change_bounds","qualname":"<SubImage<I>>::change_bounds","value":"fn (&mut self, x: u32, y: u32, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Change the coordinates of this subimage.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3679},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":835272,"byte_end":835280,"line_start":813,"line_end":813,"column_start":12,"column_end":20},"name":"to_image","qualname":"<SubImage<I>>::to_image","value":"fn (&self) -> ImageBuffer<DerefPixel<I>, Vec<DerefSubpixel<I>>>","parent":null,"children":[],"decl_id":null,"docs":" Convert this subimage to an ImageBuffer\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3711},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":848658,"byte_end":848673,"line_start":12,"line_end":12,"column_start":11,"column_end":26},"name":"EncodableLayout","qualname":"::traits::EncodableLayout","value":"EncodableLayout: seals::EncodableLayout","parent":null,"children":[{"krate":0,"index":3712}],"decl_id":null,"docs":" Types which are safe to treat as an immutable byte slice in a pixel layout\n for image encoding.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3712},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":848744,"byte_end":848752,"line_start":14,"line_end":14,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::traits::EncodableLayout::as_bytes","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":3711},"children":[],"decl_id":null,"docs":" Get the bytes of this value.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3717},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":849040,"byte_end":849049,"line_start":30,"line_end":30,"column_start":11,"column_end":20},"name":"Primitive","qualname":"::traits::Primitive","value":"Primitive: Copy + NumCast + Num + PartialOrd<Self> + Clone + Bounded","parent":null,"children":[],"decl_id":null,"docs":" Primitive trait from old stdlib\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3730},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":849571,"byte_end":849582,"line_start":47,"line_end":47,"column_start":11,"column_end":22},"name":"Enlargeable","qualname":"::traits::Enlargeable","value":"Enlargeable: Sized + Bounded + NumCast","parent":null,"children":[{"krate":0,"index":3731},{"krate":0,"index":3732}],"decl_id":null,"docs":" An Enlargable::Larger value should be enough to calculate\n the sum (average) of a few hundred or thousand Enlargeable values.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3731},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":849621,"byte_end":849627,"line_start":48,"line_end":48,"column_start":10,"column_end":16},"name":"Larger","qualname":"::traits::Enlargeable::Larger","value":"type Larger: Primitive + AddAssign + 'static;","parent":{"krate":0,"index":3730},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3732},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":849670,"byte_end":849680,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"clamp_from","qualname":"::traits::Enlargeable::clamp_from","value":"fn (n: Self::Larger) -> Self","parent":{"krate":0,"index":3730},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3739},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":850206,"byte_end":850211,"line_start":73,"line_end":73,"column_start":11,"column_end":16},"name":"Pixel","qualname":"::traits::Pixel","value":"Pixel: Copy + Clone","parent":null,"children":[{"krate":0,"index":3740},{"krate":0,"index":3741},{"krate":0,"index":3742},{"krate":0,"index":3743},{"krate":0,"index":3744},{"krate":0,"index":3745},{"krate":0,"index":3746},{"krate":0,"index":3747},{"krate":0,"index":3748},{"krate":0,"index":3749},{"krate":0,"index":3750},{"krate":0,"index":3751},{"krate":0,"index":3752},{"krate":0,"index":3753},{"krate":0,"index":3754},{"krate":0,"index":3755},{"krate":0,"index":3756},{"krate":0,"index":3757},{"krate":0,"index":3758},{"krate":0,"index":3759},{"krate":0,"index":3761},{"krate":0,"index":3763},{"krate":0,"index":3766},{"krate":0,"index":3769},{"krate":0,"index":3772},{"krate":0,"index":3775},{"krate":0,"index":3777},{"krate":0,"index":3779},{"krate":0,"index":3780}],"decl_id":null,"docs":" A generalized pixel.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3740},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":850275,"byte_end":850283,"line_start":75,"line_end":75,"column_start":10,"column_end":18},"name":"Subpixel","qualname":"::traits::Pixel::Subpixel","value":"type Subpixel: Primitive;","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" The underlying subpixel type.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3741},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":850358,"byte_end":850371,"line_start":78,"line_end":78,"column_start":11,"column_end":24},"name":"CHANNEL_COUNT","qualname":"::traits::Pixel::CHANNEL_COUNT","value":"u8","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" The number of channels of this pixel type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3742},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":850514,"byte_end":850527,"line_start":81,"line_end":81,"column_start":8,"column_end":21},"name":"channel_count","qualname":"::traits::Pixel::channel_count","value":"fn () -> u8","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" Returns the number of channels of this pixel type.\n","sig":null,"attributes":[{"value":"deprecated(note = \"please use CHANNEL_COUNT associated constant\")","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":850440,"byte_end":850506,"line_start":80,"line_end":80,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3743},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":850623,"byte_end":850631,"line_start":86,"line_end":86,"column_start":8,"column_end":16},"name":"channels","qualname":"::traits::Pixel::channels","value":"fn (&self) -> &[Self::Subpixel]","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" Returns the components as a slice.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3744},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":850719,"byte_end":850731,"line_start":89,"line_end":89,"column_start":8,"column_end":20},"name":"channels_mut","qualname":"::traits::Pixel::channels_mut","value":"fn (&mut self) -> &mut [Self::Subpixel]","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" Returns the components as a mutable slice\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3745},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":850897,"byte_end":850908,"line_start":93,"line_end":93,"column_start":11,"column_end":22},"name":"COLOR_MODEL","qualname":"::traits::Pixel::COLOR_MODEL","value":"&'static str","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" A string that can help to interpret the meaning each channel\n See [gimp babl](http://gegl.org/babl/).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3746},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":851125,"byte_end":851136,"line_start":97,"line_end":97,"column_start":8,"column_end":19},"name":"color_model","qualname":"::traits::Pixel::color_model","value":"fn () -> &'static str","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" Returns a string that can help to interpret the meaning each channel\n See [gimp babl](http://gegl.org/babl/).\n","sig":null,"attributes":[{"value":"deprecated(note = \"please use COLOR_MODEL associated constant\")","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":851053,"byte_end":851117,"line_start":96,"line_end":96,"column_start":5,"column_end":69}}]},{"kind":"Const","id":{"krate":0,"index":3747},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":851240,"byte_end":851250,"line_start":102,"line_end":102,"column_start":11,"column_end":21},"name":"COLOR_TYPE","qualname":"::traits::Pixel::COLOR_TYPE","value":"ColorType","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" ColorType for this pixel format\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3748},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":851390,"byte_end":851400,"line_start":105,"line_end":105,"column_start":8,"column_end":18},"name":"color_type","qualname":"::traits::Pixel::color_type","value":"fn () -> ColorType","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" Returns the ColorType for this pixel format\n","sig":null,"attributes":[{"value":"deprecated(note = \"please use COLOR_TYPE associated constant\")","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":851319,"byte_end":851382,"line_start":104,"line_end":104,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3749},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":851638,"byte_end":851647,"line_start":113,"line_end":113,"column_start":8,"column_end":17},"name":"channels4","qualname":"::traits::Pixel::channels4","value":"fn (&self) -> (Self::Subpixel, Self::Subpixel, Self::Subpixel, Self::Subpixel)","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" Returns the channels of this pixel as a 4 tuple. If the pixel\n has less than 4 channels the remainder is filled with the maximum value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3750},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":851950,"byte_end":851963,"line_start":126,"line_end":126,"column_start":8,"column_end":21},"name":"from_channels","qualname":"::traits::Pixel::from_channels","value":"fn (a: Self::Subpixel, b: Self::Subpixel, c: Self::Subpixel, d: Self::Subpixel) -> Self","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" Construct a pixel from the 4 channels a, b, c and d.\n If the pixel does not contain 4 channels the extra are ignored.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3751},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":852317,"byte_end":852327,"line_start":137,"line_end":137,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::traits::Pixel::from_slice","value":"fn (slice: &[Self::Subpixel]) -> &Self","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" Returns a view into a slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3752},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":852607,"byte_end":852621,"line_start":143,"line_end":143,"column_start":8,"column_end":22},"name":"from_slice_mut","qualname":"::traits::Pixel::from_slice_mut","value":"fn (slice: &mut [Self::Subpixel]) -> &mut Self","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" Returns mutable view into a mutable slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3753},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":852708,"byte_end":852714,"line_start":146,"line_end":146,"column_start":8,"column_end":14},"name":"to_rgb","qualname":"::traits::Pixel::to_rgb","value":"fn (&self) -> Rgb<Self::Subpixel>","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3754},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":852810,"byte_end":852817,"line_start":149,"line_end":149,"column_start":8,"column_end":15},"name":"to_rgba","qualname":"::traits::Pixel::to_rgba","value":"fn (&self) -> Rgba<Self::Subpixel>","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3755},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":852893,"byte_end":852900,"line_start":152,"line_end":152,"column_start":8,"column_end":15},"name":"to_luma","qualname":"::traits::Pixel::to_luma","value":"fn (&self) -> Luma<Self::Subpixel>","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" Convert this pixel to luma\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3756},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":852998,"byte_end":853011,"line_start":155,"line_end":155,"column_start":8,"column_end":21},"name":"to_luma_alpha","qualname":"::traits::Pixel::to_luma_alpha","value":"fn (&self) -> LumaA<Self::Subpixel>","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" Convert this pixel to luma with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3757},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":853087,"byte_end":853093,"line_start":158,"line_end":158,"column_start":8,"column_end":14},"name":"to_bgr","qualname":"::traits::Pixel::to_bgr","value":"fn (&self) -> Bgr<Self::Subpixel>","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" Convert this pixel to BGR\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3758},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":853189,"byte_end":853196,"line_start":161,"line_end":161,"column_start":8,"column_end":15},"name":"to_bgra","qualname":"::traits::Pixel::to_bgra","value":"fn (&self) -> Bgra<Self::Subpixel>","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" Convert this pixel to BGR with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3759},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":853303,"byte_end":853306,"line_start":164,"line_end":164,"column_start":8,"column_end":11},"name":"map","qualname":"::traits::Pixel::map","value":"fn <F> (&self, f: F) -> Self","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3761},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":853467,"byte_end":853472,"line_start":169,"line_end":169,"column_start":8,"column_end":13},"name":"apply","qualname":"::traits::Pixel::apply","value":"fn <F> (&mut self, f: F) -> ()","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3763},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":853697,"byte_end":853711,"line_start":175,"line_end":175,"column_start":8,"column_end":22},"name":"map_with_alpha","qualname":"::traits::Pixel::map_with_alpha","value":"fn <F, G> (&self, f: F, g: G) -> Self","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3766},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":854017,"byte_end":854033,"line_start":182,"line_end":182,"column_start":8,"column_end":24},"name":"apply_with_alpha","qualname":"::traits::Pixel::apply_with_alpha","value":"fn <F, G> (&mut self, f: F, g: G) -> ()","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel. Works in-place.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3769},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":854262,"byte_end":854279,"line_start":188,"line_end":188,"column_start":8,"column_end":25},"name":"map_without_alpha","qualname":"::traits::Pixel::map_without_alpha","value":"fn <F> (&self, f: F) -> Self","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3772},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":854571,"byte_end":854590,"line_start":199,"line_end":199,"column_start":8,"column_end":27},"name":"apply_without_alpha","qualname":"::traits::Pixel::apply_without_alpha","value":"fn <F> (&mut self, f: F) -> ()","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Works in place.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3775},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":854833,"byte_end":854837,"line_start":208,"line_end":208,"column_start":8,"column_end":12},"name":"map2","qualname":"::traits::Pixel::map2","value":"fn <F> (&self, other: &Self, f: F) -> Self","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3777},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":855077,"byte_end":855083,"line_start":214,"line_end":214,"column_start":8,"column_end":14},"name":"apply2","qualname":"::traits::Pixel::apply2","value":"fn <F> (&mut self, other: &Self, f: F) -> ()","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise. Works in-place.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3779},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":855230,"byte_end":855236,"line_start":219,"line_end":219,"column_start":8,"column_end":14},"name":"invert","qualname":"::traits::Pixel::invert","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" Invert this pixel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3780},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":855347,"byte_end":855352,"line_start":222,"line_end":222,"column_start":8,"column_end":13},"name":"blend","qualname":"::traits::Pixel::blend","value":"fn (&mut self, other: &Self) -> ()","parent":{"krate":0,"index":3739},"children":[],"decl_id":null,"docs":" Blend the color of a given pixel into ourself, taking into account alpha channels\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3782},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":855461,"byte_end":855476,"line_start":227,"line_end":227,"column_start":15,"column_end":30},"name":"EncodableLayout","qualname":"::traits::seals::EncodableLayout","value":"EncodableLayout","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5974},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\utils\\mod.rs","byte_start":859486,"byte_end":859505,"line_start":108,"line_end":108,"column_start":12,"column_end":31},"name":"NonExhaustiveMarker","qualname":"::utils::NonExhaustiveMarker","value":"NonExhaustiveMarker {  }","parent":null,"children":[{"krate":0,"index":5975}],"decl_id":null,"docs":" A marker struct for __NonExhaustive enums.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":17252,"byte_end":17268,"line_start":194,"line_end":194,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":17966,"byte_end":17979,"line_start":217,"line_end":217,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":18755,"byte_end":18768,"line_start":245,"line_end":245,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":19545,"byte_end":19559,"line_start":273,"line_end":273,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":19938,"byte_end":19948,"line_start":288,"line_end":288,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":20305,"byte_end":20315,"line_start":302,"line_end":302,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":20431,"byte_end":20446,"line_start":308,"line_end":308,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":20575,"byte_end":20590,"line_start":314,"line_end":314,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":20840,"byte_end":20856,"line_start":323,"line_end":323,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":21159,"byte_end":21169,"line_start":335,"line_end":335,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":21630,"byte_end":21640,"line_start":348,"line_end":348,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":22093,"byte_end":22109,"line_start":361,"line_end":361,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":23731,"byte_end":23747,"line_start":404,"line_end":404,"column_start":16,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":23775,"byte_end":23789,"line_start":406,"line_end":406,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":24824,"byte_end":24838,"line_start":438,"line_end":438,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":25043,"byte_end":25056,"line_start":447,"line_end":447,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":25517,"byte_end":25530,"line_start":465,"line_end":465,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":25735,"byte_end":25748,"line_start":474,"line_end":474,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":26195,"byte_end":26208,"line_start":486,"line_end":486,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":26413,"byte_end":26423,"line_start":495,"line_end":495,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":26806,"byte_end":26816,"line_start":505,"line_end":505,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":26844,"byte_end":26859,"line_start":507,"line_end":507,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\math\\nq.rs","byte_start":30303,"byte_end":30311,"line_start":73,"line_end":73,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\colorops.rs","byte_start":69086,"byte_end":69093,"line_start":195,"line_end":195,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\colorops.rs","byte_start":69537,"byte_end":69545,"line_start":216,"line_end":216,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\sample.rs","byte_start":84504,"byte_end":84516,"line_start":363,"line_end":363,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\io\\reader.rs","byte_start":103402,"byte_end":103408,"line_start":68,"line_end":68,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\io\\reader.rs","byte_start":104790,"byte_end":104796,"line_start":115,"line_end":115,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\io\\reader.rs","byte_start":105582,"byte_end":105588,"line_start":137,"line_end":137,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\io\\free_functions.rs","byte_start":120350,"byte_end":120360,"line_start":298,"line_end":298,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":125363,"byte_end":125375,"line_start":124,"line_end":124,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":557},{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":570},{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":137970,"byte_end":137973,"line_start":437,"line_end":437,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":138231,"byte_end":138242,"line_start":452,"line_end":452,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":155397,"byte_end":155408,"line_start":873,"line_end":873,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":161275,"byte_end":161279,"line_start":1028,"line_end":1028,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":166864,"byte_end":166871,"line_start":1161,"line_end":1161,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":171247,"byte_end":171258,"line_start":1275,"line_end":1275,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":171867,"byte_end":171878,"line_start":1294,"line_end":1294,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":172482,"byte_end":172486,"line_start":1312,"line_end":1312,"column_start":45,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":173733,"byte_end":173740,"line_start":1357,"line_end":1357,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":175007,"byte_end":175014,"line_start":1402,"line_end":1402,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":175909,"byte_end":175919,"line_start":1431,"line_end":1431,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":176071,"byte_end":176094,"line_start":1435,"line_end":1435,"column_start":31,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":176302,"byte_end":176325,"line_start":1440,"line_end":1440,"column_start":31,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":176897,"byte_end":176907,"line_start":1454,"line_end":1454,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":185710,"byte_end":185721,"line_start":100,"line_end":100,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":187644,"byte_end":187656,"line_start":158,"line_end":158,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":189727,"byte_end":189737,"line_start":195,"line_end":195,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":189893,"byte_end":189905,"line_start":201,"line_end":201,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":190252,"byte_end":190269,"line_start":216,"line_end":216,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":198926,"byte_end":198934,"line_start":479,"line_end":479,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":803},{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":200320,"byte_end":200329,"line_start":523,"line_end":523,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":201594,"byte_end":201609,"line_start":578,"line_end":578,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":203465,"byte_end":203475,"line_start":630,"line_end":630,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":871},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":881},{"krate":0,"index":883},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":235379,"byte_end":235388,"line_start":1420,"line_end":1420,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":235808,"byte_end":235818,"line_start":1434,"line_end":1434,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":236493,"byte_end":236503,"line_start":1459,"line_end":1459,"column_start":55,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\encoder.rs","byte_start":238024,"byte_end":238034,"line_start":17,"line_end":17,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\encoder.rs","byte_start":245154,"byte_end":245164,"line_start":214,"line_end":214,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dds.rs","byte_start":250348,"byte_end":250360,"line_start":34,"line_end":34,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dds.rs","byte_start":251000,"byte_end":251010,"line_start":49,"line_end":49,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dds.rs","byte_start":251166,"byte_end":251178,"line_start":55,"line_end":55,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dds.rs","byte_start":251647,"byte_end":251658,"line_start":83,"line_end":83,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":977}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dds.rs","byte_start":252382,"byte_end":252388,"line_start":106,"line_end":106,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dds.rs","byte_start":254064,"byte_end":254074,"line_start":159,"line_end":159,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dds.rs","byte_start":255566,"byte_end":255576,"line_start":198,"line_end":198,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dxt.rs","byte_start":257377,"byte_end":257387,"line_start":33,"line_end":33,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dxt.rs","byte_start":258344,"byte_end":258354,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1034},{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dxt.rs","byte_start":260106,"byte_end":260116,"line_start":117,"line_end":117,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dxt.rs","byte_start":261013,"byte_end":261023,"line_start":149,"line_end":149,"column_start":55,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dxt.rs","byte_start":261997,"byte_end":262006,"line_start":179,"line_end":179,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dxt.rs","byte_start":262266,"byte_end":262276,"line_start":191,"line_end":191,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1066},{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","byte_start":286126,"byte_end":286136,"line_start":51,"line_end":51,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","byte_start":286588,"byte_end":286597,"line_start":65,"line_end":65,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1167},{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","byte_start":287010,"byte_end":287020,"line_start":79,"line_end":79,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","byte_start":289967,"byte_end":289983,"line_start":156,"line_end":156,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1187}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","byte_start":290595,"byte_end":290611,"line_start":178,"line_end":178,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1190},{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","byte_start":295317,"byte_end":295327,"line_start":286,"line_end":286,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","byte_start":295590,"byte_end":295597,"line_start":298,"line_end":298,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1209},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","byte_start":299595,"byte_end":299605,"line_start":408,"line_end":408,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":301894,"byte_end":301906,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":303556,"byte_end":303566,"line_start":78,"line_end":78,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":303722,"byte_end":303734,"line_start":84,"line_end":84,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":304236,"byte_end":304244,"line_start":104,"line_end":104,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":304838,"byte_end":304848,"line_start":124,"line_end":124,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":306219,"byte_end":306228,"line_start":166,"line_end":166,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1279},{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":306644,"byte_end":306654,"line_start":180,"line_end":180,"column_start":48,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":307162,"byte_end":307172,"line_start":200,"line_end":200,"column_start":58,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":308208,"byte_end":308218,"line_start":243,"line_end":243,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":310524,"byte_end":310534,"line_start":308,"line_end":308,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1319},{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":316214,"byte_end":316224,"line_start":461,"line_end":461,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":317124,"byte_end":317147,"line_start":489,"line_end":489,"column_start":18,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":317440,"byte_end":317463,"line_start":502,"line_end":502,"column_start":31,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":319271,"byte_end":319294,"line_start":553,"line_end":553,"column_start":40,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":325745,"byte_end":325756,"line_start":729,"line_end":729,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1366},{"krate":0,"index":1367}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\encoder.rs","byte_start":335689,"byte_end":335699,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1406},{"krate":0,"index":1407}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\encoder.rs","byte_start":338261,"byte_end":338272,"line_start":89,"line_end":89,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1419}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\encoder.rs","byte_start":338398,"byte_end":338409,"line_start":95,"line_end":95,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1422},{"krate":0,"index":1423}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\encoder.rs","byte_start":339110,"byte_end":339130,"line_start":124,"line_end":124,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\encoder.rs","byte_start":339389,"byte_end":339409,"line_start":134,"line_end":134,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1434},{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\decoder.rs","byte_start":353095,"byte_end":353107,"line_start":48,"line_end":48,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1479}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\decoder.rs","byte_start":354234,"byte_end":354244,"line_start":69,"line_end":69,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\decoder.rs","byte_start":354400,"byte_end":354412,"line_start":75,"line_end":75,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\decoder.rs","byte_start":354653,"byte_end":354672,"line_start":86,"line_end":86,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1484}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\decoder.rs","byte_start":354912,"byte_end":354931,"line_start":95,"line_end":95,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1486}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\decoder.rs","byte_start":355570,"byte_end":355580,"line_start":129,"line_end":129,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1501}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\decoder.rs","byte_start":357877,"byte_end":357885,"line_start":201,"line_end":201,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1515},{"krate":0,"index":1518}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\decoder.rs","byte_start":359198,"byte_end":359207,"line_start":249,"line_end":249,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1527},{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\decoder.rs","byte_start":359627,"byte_end":359637,"line_start":263,"line_end":263,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\encoder.rs","byte_start":364760,"byte_end":364770,"line_start":22,"line_end":22,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1556},{"krate":0,"index":1557}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\encoder.rs","byte_start":365764,"byte_end":365774,"line_start":55,"line_end":55,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\decoder.rs","byte_start":368352,"byte_end":368363,"line_start":18,"line_end":18,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\decoder.rs","byte_start":369072,"byte_end":369082,"line_start":40,"line_end":40,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1605},{"krate":0,"index":1606}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\decoder.rs","byte_start":369495,"byte_end":369506,"line_start":54,"line_end":54,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1614}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\decoder.rs","byte_start":371252,"byte_end":371261,"line_start":114,"line_end":114,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1617}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\decoder.rs","byte_start":371519,"byte_end":371529,"line_start":125,"line_end":125,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1620}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\encoder.rs","byte_start":397801,"byte_end":397810,"line_start":170,"line_end":170,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\encoder.rs","byte_start":401319,"byte_end":401331,"line_start":306,"line_end":306,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1701}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\encoder.rs","byte_start":401669,"byte_end":401681,"line_start":318,"line_end":318,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1703}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\encoder.rs","byte_start":402257,"byte_end":402268,"line_start":343,"line_end":343,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1727},{"krate":0,"index":1731}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\encoder.rs","byte_start":413522,"byte_end":413533,"line_start":669,"line_end":669,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1742}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":433530,"byte_end":433539,"line_start":34,"line_end":34,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1833}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":434297,"byte_end":434306,"line_start":58,"line_end":58,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1836},{"krate":0,"index":1837}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":435561,"byte_end":435571,"line_start":104,"line_end":104,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1844},{"krate":0,"index":1845},{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":440185,"byte_end":440195,"line_start":193,"line_end":193,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1851},{"krate":0,"index":1852},{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1861}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":442256,"byte_end":442267,"line_start":256,"line_end":256,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1875}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":447822,"byte_end":447833,"line_start":396,"line_end":396,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1879}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":447971,"byte_end":447984,"line_start":400,"line_end":400,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1886},{"krate":0,"index":1887}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":450363,"byte_end":450373,"line_start":475,"line_end":475,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1897}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":454208,"byte_end":454218,"line_start":550,"line_end":550,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1902}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":455453,"byte_end":455463,"line_start":582,"line_end":582,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1909}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":456480,"byte_end":456495,"line_start":610,"line_end":610,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1912}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":456581,"byte_end":456591,"line_start":616,"line_end":616,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1914}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\autobreak.rs","byte_start":464335,"byte_end":464344,"line_start":15,"line_end":15,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1941},{"krate":0,"index":1942}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\autobreak.rs","byte_start":465605,"byte_end":465614,"line_start":58,"line_end":58,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1945},{"krate":0,"index":1946}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\autobreak.rs","byte_start":466240,"byte_end":466249,"line_start":82,"line_end":82,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1949}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":470099,"byte_end":470111,"line_start":80,"line_end":80,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":472940,"byte_end":472950,"line_start":128,"line_end":128,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2000}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":473106,"byte_end":473118,"line_start":134,"line_end":134,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2002}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":473594,"byte_end":473607,"line_start":156,"line_end":156,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2004}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":474199,"byte_end":474214,"line_start":178,"line_end":178,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2006}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":475366,"byte_end":475376,"line_start":226,"line_end":226,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2028},{"krate":0,"index":2029},{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2032},{"krate":0,"index":2033}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":486052,"byte_end":486061,"line_start":511,"line_end":511,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":486190,"byte_end":486199,"line_start":515,"line_end":515,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2063},{"krate":0,"index":2064}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":486612,"byte_end":486622,"line_start":529,"line_end":529,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2072},{"krate":0,"index":2073}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":488329,"byte_end":488339,"line_start":576,"line_end":576,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2076},{"krate":0,"index":2078},{"krate":0,"index":2080}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":490766,"byte_end":490768,"line_start":642,"line_end":642,"column_start":17,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2092}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":491433,"byte_end":491436,"line_start":669,"line_end":669,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2095},{"krate":0,"index":2096},{"krate":0,"index":2097}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":492708,"byte_end":492714,"line_start":708,"line_end":708,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2099},{"krate":0,"index":2100},{"krate":0,"index":2101}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":494336,"byte_end":494341,"line_start":762,"line_end":762,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2104},{"krate":0,"index":2105},{"krate":0,"index":2107}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":495191,"byte_end":495203,"line_start":792,"line_end":792,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2109}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":495328,"byte_end":495341,"line_start":798,"line_end":798,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2111}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":495657,"byte_end":495669,"line_start":808,"line_end":808,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2113}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":495979,"byte_end":495994,"line_start":818,"line_end":818,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2115}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":513392,"byte_end":513402,"line_start":81,"line_end":81,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2195},{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":2198},{"krate":0,"index":2199},{"krate":0,"index":2202},{"krate":0,"index":2203},{"krate":0,"index":2204}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":521179,"byte_end":521189,"line_start":284,"line_end":284,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2207}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":521422,"byte_end":521440,"line_start":296,"line_end":296,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2210}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":522310,"byte_end":522325,"line_start":324,"line_end":324,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2214}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":522886,"byte_end":522903,"line_start":345,"line_end":345,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2217}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":526923,"byte_end":526941,"line_start":439,"line_end":439,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2220}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":529506,"byte_end":529519,"line_start":506,"line_end":506,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2223},{"krate":0,"index":2224}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":529830,"byte_end":529842,"line_start":519,"line_end":519,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2231},{"krate":0,"index":2233}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":531259,"byte_end":531270,"line_start":564,"line_end":564,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2241}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":532981,"byte_end":532992,"line_start":618,"line_end":618,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2244}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":533111,"byte_end":533122,"line_start":624,"line_end":624,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2247}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":533223,"byte_end":533236,"line_start":630,"line_end":630,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2250}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":538161,"byte_end":538178,"line_start":136,"line_end":136,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2273}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":538690,"byte_end":538700,"line_start":150,"line_end":150,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2275},{"krate":0,"index":2277}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":539670,"byte_end":539679,"line_start":175,"line_end":175,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2279},{"krate":0,"index":2280},{"krate":0,"index":2281},{"krate":0,"index":2282},{"krate":0,"index":2283},{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2287}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":544353,"byte_end":544367,"line_start":297,"line_end":297,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2294}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":544966,"byte_end":544975,"line_start":316,"line_end":316,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2296}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":545168,"byte_end":545177,"line_start":325,"line_end":325,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2298}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":545371,"byte_end":545380,"line_start":334,"line_end":334,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2300}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":545575,"byte_end":545584,"line_start":343,"line_end":343,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2302}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tga\\decoder.rs","byte_start":546623,"byte_end":546632,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2351},{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2354}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tga\\decoder.rs","byte_start":548477,"byte_end":548483,"line_start":86,"line_end":86,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2356},{"krate":0,"index":2357}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tga\\decoder.rs","byte_start":549752,"byte_end":549760,"line_start":131,"line_end":131,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2363},{"krate":0,"index":2364}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tga\\decoder.rs","byte_start":550877,"byte_end":550887,"line_start":177,"line_end":177,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2382},{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2388},{"krate":0,"index":2389},{"krate":0,"index":2390},{"krate":0,"index":2391},{"krate":0,"index":2392},{"krate":0,"index":2393},{"krate":0,"index":2394}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tga\\decoder.rs","byte_start":561822,"byte_end":561832,"line_start":479,"line_end":479,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2398},{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2401},{"krate":0,"index":2402},{"krate":0,"index":2403}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tga\\decoder.rs","byte_start":563531,"byte_end":563540,"line_start":535,"line_end":535,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2410}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tiff.rs","byte_start":564644,"byte_end":564655,"line_start":33,"line_end":33,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2449}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tiff.rs","byte_start":566324,"byte_end":566334,"line_start":75,"line_end":75,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2452},{"krate":0,"index":2453}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tiff.rs","byte_start":568089,"byte_end":568099,"line_start":115,"line_end":115,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2461},{"krate":0,"index":2462}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tiff.rs","byte_start":568519,"byte_end":568530,"line_start":129,"line_end":129,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2466},{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2470}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tiff.rs","byte_start":570766,"byte_end":570777,"line_start":198,"line_end":198,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2478},{"krate":0,"index":2479}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tiff.rs","byte_start":572452,"byte_end":572463,"line_start":232,"line_end":232,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2482}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\decoder.rs","byte_start":573527,"byte_end":573539,"line_start":25,"line_end":25,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2513}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\decoder.rs","byte_start":573676,"byte_end":573691,"line_start":28,"line_end":28,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2519}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\decoder.rs","byte_start":574278,"byte_end":574288,"line_start":43,"line_end":43,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2521}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\decoder.rs","byte_start":574445,"byte_end":574457,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\decoder.rs","byte_start":574683,"byte_end":574694,"line_start":59,"line_end":59,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2530},{"krate":0,"index":2531},{"krate":0,"index":2534},{"krate":0,"index":2537},{"krate":0,"index":2538}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\decoder.rs","byte_start":577567,"byte_end":577577,"line_start":150,"line_end":150,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2546},{"krate":0,"index":2547}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\decoder.rs","byte_start":577990,"byte_end":578001,"line_start":164,"line_end":164,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2551},{"krate":0,"index":2552},{"krate":0,"index":2553},{"krate":0,"index":2554},{"krate":0,"index":2555}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":607589,"byte_end":607601,"line_start":687,"line_end":687,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2646}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":608620,"byte_end":608630,"line_start":708,"line_end":708,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2648}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":608787,"byte_end":608799,"line_start":714,"line_end":714,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":608920,"byte_end":608930,"line_start":725,"line_end":725,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2657},{"krate":0,"index":2658},{"krate":0,"index":2659},{"krate":0,"index":2660},{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":2663}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":613263,"byte_end":613273,"line_start":920,"line_end":920,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2689},{"krate":0,"index":2692},{"krate":0,"index":2693},{"krate":0,"index":2694},{"krate":0,"index":2697},{"krate":0,"index":2698},{"krate":0,"index":2699},{"krate":0,"index":2701},{"krate":0,"index":2705},{"krate":0,"index":2707},{"krate":0,"index":2708},{"krate":0,"index":2712}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":634612,"byte_end":634620,"line_start":1578,"line_end":1578,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2715},{"krate":0,"index":2716}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":635237,"byte_end":635245,"line_start":1601,"line_end":1601,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2718}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":635310,"byte_end":635320,"line_start":1607,"line_end":1607,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2720}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":635609,"byte_end":635619,"line_start":1619,"line_end":1619,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2722}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":635686,"byte_end":635695,"line_start":1625,"line_end":1625,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2724}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":636232,"byte_end":636241,"line_start":1643,"line_end":1643,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2726}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\farbfeld.rs","byte_start":659768,"byte_end":659782,"line_start":39,"line_end":39,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2794}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\farbfeld.rs","byte_start":660949,"byte_end":660963,"line_start":76,"line_end":76,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2803}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\farbfeld.rs","byte_start":661742,"byte_end":661756,"line_start":102,"line_end":102,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2806}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\farbfeld.rs","byte_start":664362,"byte_end":664377,"line_start":167,"line_end":167,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2820}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\farbfeld.rs","byte_start":664625,"byte_end":664640,"line_start":174,"line_end":174,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2824},{"krate":0,"index":2825},{"krate":0,"index":2826},{"krate":0,"index":2827},{"krate":0,"index":2828}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\farbfeld.rs","byte_start":665051,"byte_end":665066,"line_start":194,"line_end":194,"column_start":55,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2832}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\farbfeld.rs","byte_start":665874,"byte_end":665889,"line_start":220,"line_end":220,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2842},{"krate":0,"index":2843},{"krate":0,"index":2845}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\farbfeld.rs","byte_start":667010,"byte_end":667025,"line_start":255,"line_end":255,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2849}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\animation.rs","byte_start":670865,"byte_end":670871,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2861},{"krate":0,"index":2862}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\animation.rs","byte_start":671461,"byte_end":671467,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2865},{"krate":0,"index":2866}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\animation.rs","byte_start":671986,"byte_end":671991,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2868},{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":2871},{"krate":0,"index":2872},{"krate":0,"index":2873},{"krate":0,"index":2874}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\animation.rs","byte_start":672940,"byte_end":672945,"line_start":102,"line_end":102,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2876},{"krate":0,"index":2877},{"krate":0,"index":2879},{"krate":0,"index":2880},{"krate":0,"index":2881},{"krate":0,"index":2882}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\animation.rs","byte_start":678981,"byte_end":678989,"line_start":258,"line_end":258,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2889}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":682421,"byte_end":682427,"line_start":25,"line_end":25,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2934},{"krate":0,"index":2935}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":682671,"byte_end":682677,"line_start":37,"line_end":37,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2940}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":682826,"byte_end":682832,"line_start":46,"line_end":46,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2944}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":683202,"byte_end":683211,"line_start":64,"line_end":64,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2953},{"krate":0,"index":2954}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":683467,"byte_end":683476,"line_start":76,"line_end":76,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2959}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":683625,"byte_end":683634,"line_start":85,"line_end":85,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2963}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":684186,"byte_end":684190,"line_start":109,"line_end":109,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2972}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":685077,"byte_end":685081,"line_start":130,"line_end":130,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2976},{"krate":0,"index":2977}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":685485,"byte_end":685489,"line_start":146,"line_end":146,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2981}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":685638,"byte_end":685642,"line_start":155,"line_end":155,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2985}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":686338,"byte_end":686345,"line_start":181,"line_end":181,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2993}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":687254,"byte_end":687261,"line_start":202,"line_end":202,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2997},{"krate":0,"index":2998}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":687678,"byte_end":687685,"line_start":218,"line_end":218,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3002}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":687834,"byte_end":687841,"line_start":227,"line_end":227,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3006}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":688418,"byte_end":688433,"line_start":252,"line_end":252,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3017},{"krate":0,"index":3018}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":688836,"byte_end":688851,"line_start":270,"line_end":270,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3023}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":689163,"byte_end":689176,"line_start":289,"line_end":289,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3033},{"krate":0,"index":3034}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":689714,"byte_end":689727,"line_start":313,"line_end":313,"column_start":47,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3039}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":690063,"byte_end":690081,"line_start":333,"line_end":333,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3050},{"krate":0,"index":3051}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":690492,"byte_end":690510,"line_start":351,"line_end":351,"column_start":47,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3056}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":690828,"byte_end":690844,"line_start":370,"line_end":370,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3066},{"krate":0,"index":3067}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":691391,"byte_end":691407,"line_start":394,"line_end":394,"column_start":47,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3072}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":694234,"byte_end":694245,"line_start":483,"line_end":483,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3076},{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":3079},{"krate":0,"index":3080},{"krate":0,"index":3081},{"krate":0,"index":3082},{"krate":0,"index":3083},{"krate":0,"index":3084},{"krate":0,"index":3085},{"krate":0,"index":3086},{"krate":0,"index":3087},{"krate":0,"index":3089},{"krate":0,"index":3092},{"krate":0,"index":3093},{"krate":0,"index":3094},{"krate":0,"index":3095},{"krate":0,"index":3096},{"krate":0,"index":3097}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":700785,"byte_end":700796,"line_start":670,"line_end":670,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3101},{"krate":0,"index":3102},{"krate":0,"index":3103},{"krate":0,"index":3104},{"krate":0,"index":3105},{"krate":0,"index":3106},{"krate":0,"index":3107}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":703388,"byte_end":703399,"line_start":745,"line_end":745,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3111}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":704051,"byte_end":704062,"line_start":770,"line_end":770,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3116}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":704805,"byte_end":704816,"line_start":797,"line_end":797,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3121},{"krate":0,"index":3122}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":705080,"byte_end":705091,"line_start":810,"line_end":810,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3126}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":705357,"byte_end":705368,"line_start":821,"line_end":821,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3130},{"krate":0,"index":3131}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":705639,"byte_end":705650,"line_start":834,"line_end":834,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3135}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":705911,"byte_end":705922,"line_start":845,"line_end":845,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3139}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":706281,"byte_end":706292,"line_start":860,"line_end":860,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3143},{"krate":0,"index":3144},{"krate":0,"index":3145},{"krate":0,"index":3146},{"krate":0,"index":3147},{"krate":0,"index":3148},{"krate":0,"index":3149}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":707116,"byte_end":707127,"line_start":893,"line_end":893,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3153},{"krate":0,"index":3154},{"krate":0,"index":3155},{"krate":0,"index":3156},{"krate":0,"index":3157},{"krate":0,"index":3158},{"krate":0,"index":3159}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":710712,"byte_end":710723,"line_start":985,"line_end":985,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3164},{"krate":0,"index":3165},{"krate":0,"index":3166},{"krate":0,"index":3168},{"krate":0,"index":3169}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":713157,"byte_end":713166,"line_start":1063,"line_end":1063,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3174}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":714564,"byte_end":714575,"line_start":1101,"line_end":1101,"column_start":67,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":3182}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":724620,"byte_end":724629,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3205},{"krate":0,"index":3206},{"krate":0,"index":3208},{"krate":0,"index":3210},{"krate":0,"index":3211}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":728338,"byte_end":728355,"line_start":148,"line_end":148,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3213}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":729643,"byte_end":729660,"line_start":182,"line_end":182,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3215}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":735756,"byte_end":735757,"line_start":388,"line_end":388,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3222}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":736195,"byte_end":736196,"line_start":402,"line_end":402,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3229}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":737452,"byte_end":737456,"line_start":446,"line_end":446,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3240}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":737685,"byte_end":737689,"line_start":454,"line_end":454,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3243}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":737917,"byte_end":737921,"line_start":462,"line_end":462,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3246}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":738146,"byte_end":738150,"line_start":470,"line_end":470,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3249}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":738377,"byte_end":738381,"line_start":478,"line_end":478,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3252}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":738529,"byte_end":738533,"line_start":485,"line_end":485,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3254}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":738777,"byte_end":738781,"line_start":494,"line_end":494,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3256}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":739025,"byte_end":739029,"line_start":503,"line_end":503,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3258}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":739215,"byte_end":739219,"line_start":510,"line_end":510,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3260}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":739405,"byte_end":739409,"line_start":517,"line_end":517,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3262}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":739646,"byte_end":739651,"line_start":527,"line_end":527,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3265}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":739913,"byte_end":739918,"line_start":536,"line_end":536,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3268}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":740179,"byte_end":740184,"line_start":545,"line_end":545,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3271}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":740449,"byte_end":740454,"line_start":554,"line_end":554,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3274}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":740720,"byte_end":740725,"line_start":563,"line_end":563,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3277}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":740938,"byte_end":740943,"line_start":571,"line_end":571,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3279}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":741243,"byte_end":741248,"line_start":581,"line_end":581,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3281}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":741591,"byte_end":741595,"line_start":594,"line_end":594,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3284}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":741896,"byte_end":741900,"line_start":605,"line_end":605,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3287}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":742202,"byte_end":742206,"line_start":616,"line_end":616,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3290}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":742507,"byte_end":742511,"line_start":627,"line_end":627,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3293}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":742812,"byte_end":742816,"line_start":638,"line_end":638,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3296}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":743093,"byte_end":743097,"line_start":649,"line_end":649,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3298}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":743459,"byte_end":743463,"line_start":660,"line_end":660,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3300}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":743860,"byte_end":743864,"line_start":674,"line_end":674,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3303}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":744165,"byte_end":744169,"line_start":685,"line_end":685,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3306}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":744471,"byte_end":744475,"line_start":696,"line_end":696,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3309}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":744776,"byte_end":744780,"line_start":707,"line_end":707,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3312}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":745081,"byte_end":745085,"line_start":718,"line_end":718,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3315}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":745409,"byte_end":745412,"line_start":732,"line_end":732,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3318}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":745681,"byte_end":745684,"line_start":742,"line_end":742,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3321}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":745952,"byte_end":745955,"line_start":752,"line_end":752,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3324}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":746220,"byte_end":746223,"line_start":762,"line_end":762,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3327}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":746487,"byte_end":746490,"line_start":772,"line_end":772,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3330}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":746728,"byte_end":746731,"line_start":782,"line_end":782,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3332}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":746956,"byte_end":746959,"line_start":790,"line_end":790,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3334}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":747232,"byte_end":747235,"line_start":801,"line_end":801,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3337}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":747503,"byte_end":747506,"line_start":811,"line_end":811,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3340}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":747771,"byte_end":747774,"line_start":822,"line_end":822,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3343}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":748044,"byte_end":748047,"line_start":832,"line_end":832,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3346}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":748311,"byte_end":748314,"line_start":842,"line_end":842,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3349}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":749980,"byte_end":749985,"line_start":896,"line_end":896,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3355}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":750990,"byte_end":750994,"line_start":929,"line_end":929,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3358}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":751104,"byte_end":751108,"line_start":935,"line_end":935,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3361}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":753316,"byte_end":753320,"line_start":993,"line_end":993,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3364}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":755526,"byte_end":755529,"line_start":1049,"line_end":1049,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3367}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":755638,"byte_end":755641,"line_start":1055,"line_end":1055,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3370}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":755860,"byte_end":755865,"line_start":1068,"line_end":1068,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3375}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":756038,"byte_end":756042,"line_start":1077,"line_end":1077,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3378}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":756230,"byte_end":756234,"line_start":1088,"line_end":1088,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3381}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":756447,"byte_end":756451,"line_start":1099,"line_end":1099,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3384}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":756664,"byte_end":756667,"line_start":1110,"line_end":1110,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3387}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":756929,"byte_end":756932,"line_start":1124,"line_end":1124,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3390}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":768428,"byte_end":768440,"line_start":132,"line_end":132,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3441},{"krate":0,"index":3442},{"krate":0,"index":3443},{"krate":0,"index":3444},{"krate":0,"index":3445},{"krate":0,"index":3446},{"krate":0,"index":3447},{"krate":0,"index":3448},{"krate":0,"index":3449},{"krate":0,"index":3450},{"krate":0,"index":3451},{"krate":0,"index":3454},{"krate":0,"index":3455},{"krate":0,"index":3456},{"krate":0,"index":3457},{"krate":0,"index":3458},{"krate":0,"index":3459},{"krate":0,"index":3460},{"krate":0,"index":3461},{"krate":0,"index":3462},{"krate":0,"index":3463},{"krate":0,"index":3464},{"krate":0,"index":3465},{"krate":0,"index":3466},{"krate":0,"index":3467},{"krate":0,"index":3468},{"krate":0,"index":3469},{"krate":0,"index":3470},{"krate":0,"index":3471},{"krate":0,"index":3472},{"krate":0,"index":3473},{"krate":0,"index":3474},{"krate":0,"index":3475},{"krate":0,"index":3476},{"krate":0,"index":3477},{"krate":0,"index":3478},{"krate":0,"index":3479},{"krate":0,"index":3480},{"krate":0,"index":3481},{"krate":0,"index":3482},{"krate":0,"index":3483},{"krate":0,"index":3484},{"krate":0,"index":3485},{"krate":0,"index":3486},{"krate":0,"index":3487},{"krate":0,"index":3488},{"krate":0,"index":3489},{"krate":0,"index":3490},{"krate":0,"index":3491},{"krate":0,"index":3492},{"krate":0,"index":3493},{"krate":0,"index":3494},{"krate":0,"index":3495},{"krate":0,"index":3496},{"krate":0,"index":3497},{"krate":0,"index":3498},{"krate":0,"index":3499},{"krate":0,"index":3500},{"krate":0,"index":3501},{"krate":0,"index":3502},{"krate":0,"index":3503},{"krate":0,"index":3504},{"krate":0,"index":3505},{"krate":0,"index":3506},{"krate":0,"index":3507},{"krate":0,"index":3508},{"krate":0,"index":3509},{"krate":0,"index":3510},{"krate":0,"index":3513},{"krate":0,"index":3515}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":792897,"byte_end":792909,"line_start":810,"line_end":810,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3518},{"krate":0,"index":3519},{"krate":0,"index":3520},{"krate":0,"index":3521},{"krate":0,"index":3522},{"krate":0,"index":3523}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":793442,"byte_end":793454,"line_start":832,"line_end":832,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3525},{"krate":0,"index":3526},{"krate":0,"index":3527},{"krate":0,"index":3528},{"krate":0,"index":3529}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":807731,"byte_end":807742,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3571},{"krate":0,"index":3573}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":810461,"byte_end":810478,"line_start":140,"line_end":140,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3575}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":811686,"byte_end":811701,"line_start":175,"line_end":175,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3583},{"krate":0,"index":3584}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":819571,"byte_end":819579,"line_start":359,"line_end":359,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3599},{"krate":0,"index":3600},{"krate":0,"index":3601}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":826210,"byte_end":826216,"line_start":548,"line_end":548,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3637},{"krate":0,"index":3638}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":834675,"byte_end":834683,"line_start":792,"line_end":792,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3677},{"krate":0,"index":3678},{"krate":0,"index":3679}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":835820,"byte_end":835828,"line_start":833,"line_end":833,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3682},{"krate":0,"index":3683},{"krate":0,"index":3684},{"krate":0,"index":3685},{"krate":0,"index":3686},{"krate":0,"index":3687},{"krate":0,"index":3688}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":836649,"byte_end":836657,"line_start":865,"line_end":865,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3691},{"krate":0,"index":3692},{"krate":0,"index":3693},{"krate":0,"index":3694},{"krate":0,"index":3695},{"krate":0,"index":3696}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8128,"byte_end":8133,"line_start":181,"line_end":181,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":54}},{"kind":"Mod","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8526,"byte_end":8530,"line_start":200,"line_end":200,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":127}},{"kind":"Mod","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\math\\mod.rs","byte_start":27793,"byte_end":27795,"line_start":2,"line_end":2,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":128}},{"kind":"Mod","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\math\\mod.rs","byte_start":27805,"byte_end":27810,"line_start":3,"line_end":3,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":166}},{"kind":"Mod","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8571,"byte_end":8579,"line_start":203,"line_end":203,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":171}},{"kind":"Mod","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\mod.rs","byte_start":43893,"byte_end":43901,"line_start":27,"line_end":27,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":256}},{"kind":"Mod","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8605,"byte_end":8607,"line_start":206,"line_end":206,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":417}},{"kind":"Mod","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8653,"byte_end":8657,"line_start":209,"line_end":209,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":522}},{"kind":"Mod","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8708,"byte_end":8711,"line_start":213,"line_end":213,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":698}},{"kind":"Mod","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8745,"byte_end":8748,"line_start":215,"line_end":215,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":948}},{"kind":"Mod","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8782,"byte_end":8785,"line_start":217,"line_end":217,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1001}},{"kind":"Mod","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8819,"byte_end":8822,"line_start":219,"line_end":219,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1118}},{"kind":"Mod","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8856,"byte_end":8859,"line_start":221,"line_end":221,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1219}},{"kind":"Mod","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8893,"byte_end":8896,"line_start":223,"line_end":223,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1443}},{"kind":"Mod","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8931,"byte_end":8935,"line_start":225,"line_end":225,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1567}},{"kind":"Mod","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":8969,"byte_end":8972,"line_start":227,"line_end":227,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1784}},{"kind":"Mod","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":9006,"byte_end":9009,"line_start":229,"line_end":229,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1915}},{"kind":"Mod","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":9043,"byte_end":9046,"line_start":231,"line_end":231,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2303}},{"kind":"Mod","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":9081,"byte_end":9085,"line_start":233,"line_end":233,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2412}},{"kind":"Mod","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":9120,"byte_end":9124,"line_start":235,"line_end":235,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2483}},{"kind":"Mod","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\mod.rs","byte_start":572786,"byte_end":572789,"line_start":8,"line_end":8,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2562}},{"kind":"Mod","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src/lib.rs","byte_start":9163,"byte_end":9171,"line_start":237,"line_end":237,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2755}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":17252,"byte_end":17268,"line_start":194,"line_end":194,"column_start":6,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":3820},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":17966,"byte_end":17979,"line_start":217,"line_end":217,"column_start":6,"column_end":19},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3883},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":18755,"byte_end":18768,"line_start":245,"line_end":245,"column_start":6,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":19545,"byte_end":19559,"line_start":273,"line_end":273,"column_start":6,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3854},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":19938,"byte_end":19948,"line_start":288,"line_end":288,"column_start":6,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":20305,"byte_end":20315,"line_start":302,"line_end":302,"column_start":26,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3799},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":20431,"byte_end":20446,"line_start":308,"line_end":308,"column_start":28,"column_end":43},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3914},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":20575,"byte_end":20590,"line_start":314,"line_end":314,"column_start":36,"column_end":51},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3914},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":20840,"byte_end":20856,"line_start":323,"line_end":323,"column_start":32,"column_end":48},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3820},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":21159,"byte_end":21169,"line_start":335,"line_end":335,"column_start":23,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3799},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":21630,"byte_end":21640,"line_start":348,"line_end":348,"column_start":16,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3799},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":22093,"byte_end":22109,"line_start":361,"line_end":361,"column_start":23,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3820},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":23731,"byte_end":23747,"line_start":404,"line_end":404,"column_start":16,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3820},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":23775,"byte_end":23789,"line_start":406,"line_end":406,"column_start":23,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3854},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":24824,"byte_end":24838,"line_start":438,"line_end":438,"column_start":16,"column_end":30},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3854},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":25043,"byte_end":25056,"line_start":447,"line_end":447,"column_start":23,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3849},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":25517,"byte_end":25530,"line_start":465,"line_end":465,"column_start":16,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3849},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":25735,"byte_end":25748,"line_start":474,"line_end":474,"column_start":23,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3883},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":26195,"byte_end":26208,"line_start":486,"line_end":486,"column_start":16,"column_end":29},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3883},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":26413,"byte_end":26423,"line_start":495,"line_end":495,"column_start":23,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3888},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":26806,"byte_end":26816,"line_start":505,"line_end":505,"column_start":16,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3888},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\error.rs","byte_start":26844,"byte_end":26859,"line_start":507,"line_end":507,"column_start":23,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3914},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\math\\nq.rs","byte_start":30303,"byte_end":30311,"line_start":73,"line_end":73,"column_start":6,"column_end":14},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\colorops.rs","byte_start":69086,"byte_end":69093,"line_start":195,"line_end":195,"column_start":19,"column_end":26},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3971},"to":{"krate":0,"index":295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\colorops.rs","byte_start":69537,"byte_end":69545,"line_start":216,"line_end":216,"column_start":23,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":144},"to":{"krate":0,"index":295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\imageops\\sample.rs","byte_start":84504,"byte_end":84516,"line_start":363,"line_end":363,"column_start":34,"column_end":46},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\io\\reader.rs","byte_start":103402,"byte_end":103408,"line_start":68,"line_end":68,"column_start":15,"column_end":21},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\io\\reader.rs","byte_start":104790,"byte_end":104796,"line_start":115,"line_end":115,"column_start":6,"column_end":12},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\io\\reader.rs","byte_start":105582,"byte_end":105588,"line_start":137,"line_end":137,"column_start":25,"column_end":31},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\io\\free_functions.rs","byte_start":120350,"byte_end":120360,"line_start":298,"line_end":298,"column_start":26,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3799},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":125363,"byte_end":125375,"line_start":124,"line_end":124,"column_start":6,"column_end":18},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":4003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":137970,"byte_end":137973,"line_start":437,"line_end":437,"column_start":6,"column_end":9},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":4025},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":138231,"byte_end":138242,"line_start":452,"line_end":452,"column_start":14,"column_end":25},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":155397,"byte_end":155408,"line_start":873,"line_end":873,"column_start":22,"column_end":33},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":3992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":161275,"byte_end":161279,"line_start":1028,"line_end":1028,"column_start":24,"column_end":28},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":4053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":166864,"byte_end":166871,"line_start":1161,"line_end":1161,"column_start":24,"column_end":31},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":4066},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":171247,"byte_end":171258,"line_start":1275,"line_end":1275,"column_start":40,"column_end":51},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3992},"to":{"krate":2,"index":1780}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":171867,"byte_end":171878,"line_start":1294,"line_end":1294,"column_start":43,"column_end":54},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3992},"to":{"krate":2,"index":1784}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":172482,"byte_end":172486,"line_start":1312,"line_end":1312,"column_start":45,"column_end":49},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":4053},"to":{"krate":0,"index":3639}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":173733,"byte_end":173740,"line_start":1357,"line_end":1357,"column_start":45,"column_end":52},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":4066},"to":{"krate":0,"index":3639}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":175007,"byte_end":175014,"line_start":1402,"line_end":1402,"column_start":41,"column_end":48},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":4066},"to":{"krate":0,"index":3652}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":175909,"byte_end":175919,"line_start":1431,"line_end":1431,"column_start":22,"column_end":32},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3799},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":176071,"byte_end":176094,"line_start":1435,"line_end":1435,"column_start":31,"column_end":54},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":4128},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":176302,"byte_end":176325,"line_start":1440,"line_end":1440,"column_start":31,"column_end":54},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\flat.rs","byte_start":176897,"byte_end":176907,"line_start":1454,"line_end":1454,"column_start":21,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":4103},"to":{"krate":2,"index":2077}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":185710,"byte_end":185721,"line_start":100,"line_end":100,"column_start":23,"column_end":34},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":767},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":187644,"byte_end":187656,"line_start":158,"line_end":158,"column_start":23,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":4186},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":189727,"byte_end":189737,"line_start":195,"line_end":195,"column_start":29,"column_end":39},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3799},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":189893,"byte_end":189905,"line_start":201,"line_end":201,"column_start":23,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":4186},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":190252,"byte_end":190269,"line_start":216,"line_end":216,"column_start":23,"column_end":40},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":4263},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":198926,"byte_end":198934,"line_start":479,"line_end":479,"column_start":6,"column_end":14},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":4294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":200320,"byte_end":200329,"line_start":523,"line_end":523,"column_start":6,"column_end":15},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":4304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":201594,"byte_end":201609,"line_start":578,"line_end":578,"column_start":32,"column_end":47},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":840},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":203465,"byte_end":203475,"line_start":630,"line_end":630,"column_start":22,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":235379,"byte_end":235388,"line_start":1420,"line_end":1420,"column_start":18,"column_end":27},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":885},"to":{"krate":1,"index":2849}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":235808,"byte_end":235818,"line_start":1434,"line_end":1434,"column_start":52,"column_end":62},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":807},"to":{"krate":0,"index":3602}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\decoder.rs","byte_start":236493,"byte_end":236503,"line_start":1459,"line_end":1459,"column_start":55,"column_end":65},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":807},"to":{"krate":0,"index":3615}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\encoder.rs","byte_start":238024,"byte_end":238034,"line_start":17,"line_end":17,"column_start":25,"column_end":35},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":926},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\bmp\\encoder.rs","byte_start":245154,"byte_end":245164,"line_start":214,"line_end":214,"column_start":37,"column_end":47},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":926},"to":{"krate":0,"index":3624}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dds.rs","byte_start":250348,"byte_end":250360,"line_start":34,"line_end":34,"column_start":23,"column_end":35},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":4316},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dds.rs","byte_start":251000,"byte_end":251010,"line_start":49,"line_end":49,"column_start":29,"column_end":39},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3799},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dds.rs","byte_start":251166,"byte_end":251178,"line_start":55,"line_end":55,"column_start":23,"column_end":35},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":4316},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dds.rs","byte_start":251647,"byte_end":251658,"line_start":83,"line_end":83,"column_start":6,"column_end":17},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":4363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dds.rs","byte_start":252382,"byte_end":252388,"line_start":106,"line_end":106,"column_start":6,"column_end":12},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":4351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dds.rs","byte_start":254064,"byte_end":254074,"line_start":159,"line_end":159,"column_start":15,"column_end":25},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dds.rs","byte_start":255566,"byte_end":255576,"line_start":198,"line_end":198,"column_start":45,"column_end":55},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":985},"to":{"krate":0,"index":3602}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dxt.rs","byte_start":257377,"byte_end":257387,"line_start":33,"line_end":33,"column_start":6,"column_end":16},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":4374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dxt.rs","byte_start":258344,"byte_end":258354,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1025},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dxt.rs","byte_start":260106,"byte_end":260116,"line_start":117,"line_end":117,"column_start":45,"column_end":55},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1025},"to":{"krate":0,"index":3602}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dxt.rs","byte_start":261013,"byte_end":261023,"line_start":149,"line_end":149,"column_start":55,"column_end":65},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1025},"to":{"krate":0,"index":3615}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dxt.rs","byte_start":261997,"byte_end":262006,"line_start":179,"line_end":179,"column_start":24,"column_end":33},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1053},"to":{"krate":1,"index":2849}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dxt.rs","byte_start":262266,"byte_end":262276,"line_start":191,"line_end":191,"column_start":16,"column_end":26},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1061},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","byte_start":286126,"byte_end":286136,"line_start":51,"line_end":51,"column_start":15,"column_end":25},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","byte_start":286588,"byte_end":286597,"line_start":65,"line_end":65,"column_start":18,"column_end":27},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1160},"to":{"krate":1,"index":2849}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","byte_start":287010,"byte_end":287020,"line_start":79,"line_end":79,"column_start":45,"column_end":55},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1154},"to":{"krate":0,"index":3602}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","byte_start":289967,"byte_end":289983,"line_start":156,"line_end":156,"column_start":15,"column_end":31},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","byte_start":290595,"byte_end":290611,"line_start":178,"line_end":178,"column_start":28,"column_end":44},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1179},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","byte_start":295317,"byte_end":295327,"line_start":286,"line_end":286,"column_start":49,"column_end":59},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1154},"to":{"krate":0,"index":3621}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","byte_start":295590,"byte_end":295597,"line_start":298,"line_end":298,"column_start":16,"column_end":23},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\gif.rs","byte_start":299595,"byte_end":299605,"line_start":408,"line_end":408,"column_start":6,"column_end":16},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":3799},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":301894,"byte_end":301906,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":4392},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":303556,"byte_end":303566,"line_start":78,"line_end":78,"column_start":29,"column_end":39},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3799},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":303722,"byte_end":303734,"line_start":84,"line_end":84,"column_start":23,"column_end":35},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":4392},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":304236,"byte_end":304244,"line_start":104,"line_end":104,"column_start":23,"column_end":31},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":4436},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":304838,"byte_end":304848,"line_start":124,"line_end":124,"column_start":18,"column_end":28},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":4465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":306219,"byte_end":306228,"line_start":166,"line_end":166,"column_start":18,"column_end":27},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1272},"to":{"krate":1,"index":2849}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":306644,"byte_end":306654,"line_start":180,"line_end":180,"column_start":48,"column_end":58},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":4465},"to":{"krate":0,"index":3602}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":307162,"byte_end":307172,"line_start":200,"line_end":200,"column_start":58,"column_end":68},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":4465},"to":{"krate":0,"index":3615}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":308208,"byte_end":308218,"line_start":243,"line_end":243,"column_start":6,"column_end":16},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":4481},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":310524,"byte_end":310534,"line_start":308,"line_end":308,"column_start":18,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":4472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":316214,"byte_end":316224,"line_start":461,"line_end":461,"column_start":35,"column_end":45},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":4472},"to":{"krate":2,"index":3951}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":317124,"byte_end":317147,"line_start":489,"line_end":489,"column_start":18,"column_end":41},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":317440,"byte_end":317463,"line_start":502,"line_end":502,"column_start":31,"column_end":54},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1328},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":319271,"byte_end":319294,"line_start":553,"line_end":553,"column_start":40,"column_end":63},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1328},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\decoder.rs","byte_start":325745,"byte_end":325756,"line_start":729,"line_end":729,"column_start":6,"column_end":17},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":4501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\encoder.rs","byte_start":335689,"byte_end":335699,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\encoder.rs","byte_start":338261,"byte_end":338272,"line_start":89,"line_end":89,"column_start":10,"column_end":21},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\encoder.rs","byte_start":338398,"byte_end":338409,"line_start":95,"line_end":95,"column_start":23,"column_end":34},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1413},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\encoder.rs","byte_start":339110,"byte_end":339130,"line_start":124,"line_end":124,"column_start":10,"column_end":30},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\hdr\\encoder.rs","byte_start":339389,"byte_end":339409,"line_start":134,"line_end":134,"column_start":23,"column_end":43},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1425},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\decoder.rs","byte_start":353095,"byte_end":353107,"line_start":48,"line_end":48,"column_start":23,"column_end":35},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":4531},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\decoder.rs","byte_start":354234,"byte_end":354244,"line_start":69,"line_end":69,"column_start":29,"column_end":39},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3799},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\decoder.rs","byte_start":354400,"byte_end":354412,"line_start":75,"line_end":75,"column_start":23,"column_end":35},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":4531},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\decoder.rs","byte_start":354653,"byte_end":354672,"line_start":86,"line_end":86,"column_start":23,"column_end":42},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":4579},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\decoder.rs","byte_start":354912,"byte_end":354931,"line_start":95,"line_end":95,"column_start":28,"column_end":47},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":4579},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\decoder.rs","byte_start":355570,"byte_end":355580,"line_start":129,"line_end":129,"column_start":22,"column_end":32},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\decoder.rs","byte_start":357877,"byte_end":357885,"line_start":201,"line_end":201,"column_start":6,"column_end":14},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":4602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\decoder.rs","byte_start":359198,"byte_end":359207,"line_start":249,"line_end":249,"column_start":18,"column_end":27},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1520},"to":{"krate":1,"index":2849}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\decoder.rs","byte_start":359627,"byte_end":359637,"line_start":263,"line_end":263,"column_start":52,"column_end":62},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1487},"to":{"krate":0,"index":3602}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\encoder.rs","byte_start":364760,"byte_end":364770,"line_start":22,"line_end":22,"column_start":16,"column_end":26},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\ico\\encoder.rs","byte_start":365764,"byte_end":365774,"line_start":55,"line_end":55,"column_start":33,"column_end":43},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1551},"to":{"krate":0,"index":3624}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\decoder.rs","byte_start":368352,"byte_end":368363,"line_start":18,"line_end":18,"column_start":15,"column_end":26},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1591},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\decoder.rs","byte_start":369072,"byte_end":369082,"line_start":40,"line_end":40,"column_start":18,"column_end":28},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1598},"to":{"krate":1,"index":2849}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\decoder.rs","byte_start":369495,"byte_end":369506,"line_start":54,"line_end":54,"column_start":45,"column_end":56},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1591},"to":{"krate":0,"index":3602}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\decoder.rs","byte_start":371252,"byte_end":371261,"line_start":114,"line_end":114,"column_start":6,"column_end":15},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":5219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\decoder.rs","byte_start":371519,"byte_end":371529,"line_start":125,"line_end":125,"column_start":6,"column_end":16},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":3799},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\encoder.rs","byte_start":397801,"byte_end":397810,"line_start":170,"line_end":170,"column_start":25,"column_end":34},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\encoder.rs","byte_start":401319,"byte_end":401331,"line_start":306,"line_end":306,"column_start":6,"column_end":18},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":4651},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\encoder.rs","byte_start":401669,"byte_end":401681,"line_start":318,"line_end":318,"column_start":18,"column_end":30},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4651},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\encoder.rs","byte_start":402257,"byte_end":402268,"line_start":343,"line_end":343,"column_start":20,"column_end":31},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\jpeg\\encoder.rs","byte_start":413522,"byte_end":413533,"line_start":669,"line_end":669,"column_start":37,"column_end":48},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1704},"to":{"krate":0,"index":3624}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":433530,"byte_end":433539,"line_start":34,"line_end":34,"column_start":15,"column_end":24},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":434297,"byte_end":434306,"line_start":58,"line_end":58,"column_start":24,"column_end":33},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1826},"to":{"krate":1,"index":2849}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":435561,"byte_end":435571,"line_start":104,"line_end":104,"column_start":15,"column_end":25},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1838},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":440185,"byte_end":440195,"line_start":193,"line_end":193,"column_start":45,"column_end":55},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1838},"to":{"krate":0,"index":3602}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":442256,"byte_end":442267,"line_start":256,"line_end":256,"column_start":15,"column_end":26},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":447822,"byte_end":447833,"line_start":396,"line_end":396,"column_start":49,"column_end":60},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1862},"to":{"krate":0,"index":3621}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":447971,"byte_end":447984,"line_start":400,"line_end":400,"column_start":36,"column_end":49},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1880},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":450363,"byte_end":450373,"line_start":475,"line_end":475,"column_start":16,"column_end":26},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":454208,"byte_end":454218,"line_start":550,"line_end":550,"column_start":33,"column_end":43},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1888},"to":{"krate":0,"index":3624}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":455453,"byte_end":455463,"line_start":582,"line_end":582,"column_start":6,"column_end":16},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":3799},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":456480,"byte_end":456495,"line_start":610,"line_end":610,"column_start":18,"column_end":33},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":4666},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\png.rs","byte_start":456581,"byte_end":456591,"line_start":616,"line_end":616,"column_start":18,"column_end":28},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4692},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\autobreak.rs","byte_start":464335,"byte_end":464344,"line_start":15,"line_end":15,"column_start":20,"column_end":29},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1932},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\autobreak.rs","byte_start":465605,"byte_end":465614,"line_start":58,"line_end":58,"column_start":34,"column_end":43},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1932},"to":{"krate":1,"index":2903}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\autobreak.rs","byte_start":466240,"byte_end":466249,"line_start":82,"line_end":82,"column_start":29,"column_end":38},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1932},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":470099,"byte_end":470111,"line_start":80,"line_end":80,"column_start":18,"column_end":30},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":4718},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":472940,"byte_end":472950,"line_start":128,"line_end":128,"column_start":29,"column_end":39},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":3799},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":473106,"byte_end":473118,"line_start":134,"line_end":134,"column_start":23,"column_end":35},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":4718},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":473594,"byte_end":473607,"line_start":156,"line_end":156,"column_start":18,"column_end":31},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":4775},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":474199,"byte_end":474214,"line_start":178,"line_end":178,"column_start":18,"column_end":33},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":4802},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":475366,"byte_end":475376,"line_start":226,"line_end":226,"column_start":15,"column_end":25},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":478528,"byte_end":478535,"line_start":317,"line_end":317,"column_start":21,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2925},"to":{"krate":0,"index":2034}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":486052,"byte_end":486061,"line_start":511,"line_end":511,"column_start":32,"column_end":41},"kind":{"Impl":{"id":142}},"from":{"krate":1,"index":2305},"to":{"krate":0,"index":2034}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":486190,"byte_end":486199,"line_start":515,"line_end":515,"column_start":18,"column_end":27},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2056},"to":{"krate":1,"index":2849}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":486612,"byte_end":486622,"line_start":529,"line_end":529,"column_start":45,"column_end":55},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2021},"to":{"krate":0,"index":3602}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":488329,"byte_end":488339,"line_start":576,"line_end":576,"column_start":15,"column_end":25},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":490766,"byte_end":490768,"line_start":642,"line_end":642,"column_start":17,"column_end":19},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2011},"to":{"krate":0,"index":2007}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":491433,"byte_end":491436,"line_start":669,"line_end":669,"column_start":17,"column_end":20},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2013},"to":{"krate":0,"index":2007}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":492708,"byte_end":492714,"line_start":708,"line_end":708,"column_start":17,"column_end":23},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2015},"to":{"krate":0,"index":2007}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":494336,"byte_end":494341,"line_start":762,"line_end":762,"column_start":17,"column_end":22},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2017},"to":{"krate":0,"index":2007}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":495191,"byte_end":495203,"line_start":792,"line_end":792,"column_start":31,"column_end":43},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":4902},"to":{"krate":0,"index":2019}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":495328,"byte_end":495341,"line_start":798,"line_end":798,"column_start":31,"column_end":44},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":4911},"to":{"krate":0,"index":2019}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":495657,"byte_end":495669,"line_start":808,"line_end":808,"column_start":31,"column_end":43},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":4921},"to":{"krate":0,"index":2019}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\decoder.rs","byte_start":495979,"byte_end":495994,"line_start":818,"line_end":818,"column_start":31,"column_end":46},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":4931},"to":{"krate":0,"index":2019}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":513392,"byte_end":513402,"line_start":81,"line_end":81,"column_start":16,"column_end":26},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":521179,"byte_end":521189,"line_start":284,"line_end":284,"column_start":33,"column_end":43},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2157},"to":{"krate":0,"index":3624}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":521422,"byte_end":521440,"line_start":296,"line_end":296,"column_start":10,"column_end":28},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":522310,"byte_end":522325,"line_start":324,"line_end":324,"column_start":10,"column_end":25},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":522886,"byte_end":522903,"line_start":345,"line_end":345,"column_start":10,"column_end":27},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":526923,"byte_end":526941,"line_start":439,"line_end":439,"column_start":10,"column_end":28},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":529506,"byte_end":529519,"line_start":506,"line_end":506,"column_start":10,"column_end":23},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":529830,"byte_end":529842,"line_start":519,"line_end":519,"column_start":10,"column_end":22},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":531259,"byte_end":531270,"line_start":564,"line_end":564,"column_start":10,"column_end":21},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":4849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":532981,"byte_end":532992,"line_start":618,"line_end":618,"column_start":29,"column_end":40},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":4849},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":533111,"byte_end":533122,"line_start":624,"line_end":624,"column_start":30,"column_end":41},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":4849},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\encoder.rs","byte_start":533223,"byte_end":533236,"line_start":630,"line_end":630,"column_start":10,"column_end":23},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":538161,"byte_end":538178,"line_start":136,"line_end":136,"column_start":6,"column_end":23},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":4941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":538690,"byte_end":538700,"line_start":150,"line_end":150,"column_start":6,"column_end":16},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":4878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":539670,"byte_end":539679,"line_start":175,"line_end":175,"column_start":6,"column_end":15},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":544353,"byte_end":544367,"line_start":297,"line_end":297,"column_start":43,"column_end":57},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2288},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":544966,"byte_end":544975,"line_start":316,"line_end":316,"column_start":29,"column_end":38},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2256},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":545168,"byte_end":545177,"line_start":325,"line_end":325,"column_start":30,"column_end":39},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2256},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":545371,"byte_end":545380,"line_start":334,"line_end":334,"column_start":29,"column_end":38},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2256},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\pnm\\header.rs","byte_start":545575,"byte_end":545584,"line_start":343,"line_end":343,"column_start":32,"column_end":41},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2256},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tga\\decoder.rs","byte_start":546623,"byte_end":546632,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tga\\decoder.rs","byte_start":548477,"byte_end":548483,"line_start":86,"line_end":86,"column_start":6,"column_end":12},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":4961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tga\\decoder.rs","byte_start":549752,"byte_end":549760,"line_start":131,"line_end":131,"column_start":6,"column_end":14},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tga\\decoder.rs","byte_start":550877,"byte_end":550887,"line_start":177,"line_end":177,"column_start":22,"column_end":32},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tga\\decoder.rs","byte_start":561822,"byte_end":561832,"line_start":479,"line_end":479,"column_start":52,"column_end":62},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2365},"to":{"krate":0,"index":3602}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tga\\decoder.rs","byte_start":563531,"byte_end":563540,"line_start":535,"line_end":535,"column_start":31,"column_end":40},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2404},"to":{"krate":1,"index":2849}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tiff.rs","byte_start":564644,"byte_end":564655,"line_start":33,"line_end":33,"column_start":9,"column_end":20},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tiff.rs","byte_start":566324,"byte_end":566334,"line_start":75,"line_end":75,"column_start":6,"column_end":16},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3799},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tiff.rs","byte_start":568089,"byte_end":568099,"line_start":115,"line_end":115,"column_start":18,"column_end":28},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2454},"to":{"krate":1,"index":2849}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tiff.rs","byte_start":568519,"byte_end":568530,"line_start":129,"line_end":129,"column_start":52,"column_end":63},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2442},"to":{"krate":0,"index":3602}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tiff.rs","byte_start":570766,"byte_end":570777,"line_start":198,"line_end":198,"column_start":23,"column_end":34},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\tiff.rs","byte_start":572452,"byte_end":572463,"line_start":232,"line_end":232,"column_start":40,"column_end":51},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2471},"to":{"krate":0,"index":3624}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\decoder.rs","byte_start":573527,"byte_end":573539,"line_start":25,"line_end":25,"column_start":23,"column_end":35},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4976},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\decoder.rs","byte_start":573676,"byte_end":573691,"line_start":28,"line_end":28,"column_start":31,"column_end":46},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2514},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\decoder.rs","byte_start":574278,"byte_end":574288,"line_start":43,"line_end":43,"column_start":29,"column_end":39},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3799},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\decoder.rs","byte_start":574445,"byte_end":574457,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":4976},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\decoder.rs","byte_start":574683,"byte_end":574694,"line_start":59,"line_end":59,"column_start":15,"column_end":26},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":2523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\decoder.rs","byte_start":577567,"byte_end":577577,"line_start":150,"line_end":150,"column_start":18,"column_end":28},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":2539},"to":{"krate":1,"index":2849}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\decoder.rs","byte_start":577990,"byte_end":578001,"line_start":164,"line_end":164,"column_start":45,"column_end":56},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2523},"to":{"krate":0,"index":3602}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":607589,"byte_end":607601,"line_start":687,"line_end":687,"column_start":23,"column_end":35},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":5089},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":608620,"byte_end":608630,"line_start":708,"line_end":708,"column_start":29,"column_end":39},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3799},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":608787,"byte_end":608799,"line_start":714,"line_end":714,"column_start":23,"column_end":35},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":5089},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":608920,"byte_end":608930,"line_start":725,"line_end":725,"column_start":6,"column_end":16},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":2650},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":613263,"byte_end":613273,"line_start":920,"line_end":920,"column_start":15,"column_end":25},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":634612,"byte_end":634620,"line_start":1578,"line_end":1578,"column_start":6,"column_end":14},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":4992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":635237,"byte_end":635245,"line_start":1601,"line_end":1601,"column_start":18,"column_end":26},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":4992},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":635310,"byte_end":635320,"line_start":1607,"line_end":1607,"column_start":6,"column_end":16},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":5019},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":635609,"byte_end":635619,"line_start":1619,"line_end":1619,"column_start":18,"column_end":28},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":5019},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":635686,"byte_end":635695,"line_start":1625,"line_end":1625,"column_start":6,"column_end":15},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":5043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\webp\\vp8.rs","byte_start":636232,"byte_end":636241,"line_start":1643,"line_end":1643,"column_start":18,"column_end":27},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":5043},"to":{"krate":2,"index":2206}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\farbfeld.rs","byte_start":659768,"byte_end":659782,"line_start":39,"line_end":39,"column_start":15,"column_end":29},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\farbfeld.rs","byte_start":660949,"byte_end":660963,"line_start":76,"line_end":76,"column_start":24,"column_end":38},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":2785},"to":{"krate":1,"index":2849}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\farbfeld.rs","byte_start":661742,"byte_end":661756,"line_start":102,"line_end":102,"column_start":31,"column_end":45},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2785},"to":{"krate":1,"index":2919}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\farbfeld.rs","byte_start":664362,"byte_end":664377,"line_start":167,"line_end":167,"column_start":15,"column_end":30},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2815},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\farbfeld.rs","byte_start":664625,"byte_end":664640,"line_start":174,"line_end":174,"column_start":45,"column_end":60},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2815},"to":{"krate":0,"index":3602}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\farbfeld.rs","byte_start":665051,"byte_end":665066,"line_start":194,"line_end":194,"column_start":55,"column_end":70},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2815},"to":{"krate":0,"index":3615}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\farbfeld.rs","byte_start":665874,"byte_end":665889,"line_start":220,"line_end":220,"column_start":16,"column_end":31},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\farbfeld.rs","byte_start":667010,"byte_end":667025,"line_start":255,"line_end":255,"column_start":33,"column_end":48},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":2837},"to":{"krate":0,"index":3624}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\animation.rs","byte_start":670865,"byte_end":670871,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2856},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\animation.rs","byte_start":671461,"byte_end":671467,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2856},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\animation.rs","byte_start":671986,"byte_end":671991,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":5161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\animation.rs","byte_start":672940,"byte_end":672945,"line_start":102,"line_end":102,"column_start":6,"column_end":11},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":5168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\animation.rs","byte_start":678981,"byte_end":678989,"line_start":258,"line_end":258,"column_start":22,"column_end":30},"kind":{"Impl":{"id":216}},"from":{"krate":2,"index":31402},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":682421,"byte_end":682427,"line_start":25,"line_end":25,"column_start":38,"column_end":44},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2927},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":682671,"byte_end":682677,"line_start":37,"line_end":37,"column_start":47,"column_end":53},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2927},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":682826,"byte_end":682832,"line_start":46,"line_end":46,"column_start":49,"column_end":55},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":2927},"to":{"krate":2,"index":3910}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":683202,"byte_end":683211,"line_start":64,"line_end":64,"column_start":38,"column_end":47},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":2946},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":683467,"byte_end":683476,"line_start":76,"line_end":76,"column_start":47,"column_end":56},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2946},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":683625,"byte_end":683634,"line_start":85,"line_end":85,"column_start":49,"column_end":58},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2946},"to":{"krate":2,"index":3910}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":684186,"byte_end":684190,"line_start":109,"line_end":109,"column_start":25,"column_end":29},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":685077,"byte_end":685081,"line_start":130,"line_end":130,"column_start":38,"column_end":42},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2965},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":685485,"byte_end":685489,"line_start":146,"line_end":146,"column_start":47,"column_end":51},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2965},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":685638,"byte_end":685642,"line_start":155,"line_end":155,"column_start":49,"column_end":53},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2965},"to":{"krate":2,"index":3910}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":686338,"byte_end":686345,"line_start":181,"line_end":181,"column_start":25,"column_end":32},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":687254,"byte_end":687261,"line_start":202,"line_end":202,"column_start":38,"column_end":45},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":2986},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":687678,"byte_end":687685,"line_start":218,"line_end":218,"column_start":47,"column_end":54},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2986},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":687834,"byte_end":687841,"line_start":227,"line_end":227,"column_start":49,"column_end":56},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":2986},"to":{"krate":2,"index":3910}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":688418,"byte_end":688433,"line_start":252,"line_end":252,"column_start":38,"column_end":53},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3007},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":688836,"byte_end":688851,"line_start":270,"line_end":270,"column_start":47,"column_end":62},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3007},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":689163,"byte_end":689176,"line_start":289,"line_end":289,"column_start":38,"column_end":51},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3024},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":689714,"byte_end":689727,"line_start":313,"line_end":313,"column_start":47,"column_end":60},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3024},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":690063,"byte_end":690081,"line_start":333,"line_end":333,"column_start":38,"column_end":56},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3040},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":690492,"byte_end":690510,"line_start":351,"line_end":351,"column_start":47,"column_end":65},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":3040},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":690828,"byte_end":690844,"line_start":370,"line_end":370,"column_start":38,"column_end":54},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3057},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":691391,"byte_end":691407,"line_start":394,"line_end":394,"column_start":47,"column_end":63},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3057},"to":{"krate":2,"index":3939}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":694234,"byte_end":694245,"line_start":483,"line_end":483,"column_start":20,"column_end":31},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":5188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":700785,"byte_end":700796,"line_start":670,"line_end":670,"column_start":20,"column_end":31},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":5188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":703388,"byte_end":703399,"line_start":745,"line_end":745,"column_start":20,"column_end":31},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":5188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":704051,"byte_end":704062,"line_start":770,"line_end":770,"column_start":20,"column_end":31},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":5188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":704805,"byte_end":704816,"line_start":797,"line_end":797,"column_start":30,"column_end":41},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":5188},"to":{"krate":2,"index":1704}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":705080,"byte_end":705091,"line_start":810,"line_end":810,"column_start":33,"column_end":44},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":5188},"to":{"krate":2,"index":1715}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":705357,"byte_end":705368,"line_start":821,"line_end":821,"column_start":42,"column_end":53},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":5188},"to":{"krate":2,"index":1780}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":705639,"byte_end":705650,"line_start":834,"line_end":834,"column_start":45,"column_end":56},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":5188},"to":{"krate":2,"index":1784}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":705911,"byte_end":705922,"line_start":845,"line_end":845,"column_start":30,"column_end":41},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":5188},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":706281,"byte_end":706292,"line_start":860,"line_end":860,"column_start":41,"column_end":52},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":5188},"to":{"krate":0,"index":3639}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":707116,"byte_end":707127,"line_start":893,"line_end":893,"column_start":37,"column_end":48},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":5188},"to":{"krate":0,"index":3652}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":710712,"byte_end":710723,"line_start":985,"line_end":985,"column_start":26,"column_end":37},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":5188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":713157,"byte_end":713166,"line_start":1063,"line_end":1063,"column_start":6,"column_end":15},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\buffer.rs","byte_start":714564,"byte_end":714575,"line_start":1101,"line_end":1101,"column_start":67,"column_end":78},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":5188},"to":{"krate":0,"index":3170}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":724620,"byte_end":724629,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":5219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":728338,"byte_end":728355,"line_start":148,"line_end":148,"column_start":6,"column_end":23},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":5258},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":729643,"byte_end":729660,"line_start":182,"line_end":182,"column_start":26,"column_end":43},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":5258},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":735756,"byte_end":735757,"line_start":388,"line_end":388,"column_start":32,"column_end":33},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3221},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":736195,"byte_end":736196,"line_start":402,"line_end":402,"column_start":29,"column_end":30},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3228},"to":{"krate":0,"index":3223}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":737452,"byte_end":737456,"line_start":446,"line_end":446,"column_start":53,"column_end":57},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":5682},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":737685,"byte_end":737689,"line_start":454,"line_end":454,"column_start":53,"column_end":57},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":5682},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":737917,"byte_end":737921,"line_start":462,"line_end":462,"column_start":52,"column_end":56},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":5682},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":738146,"byte_end":738150,"line_start":470,"line_end":470,"column_start":52,"column_end":56},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":5682},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":738377,"byte_end":738381,"line_start":478,"line_end":478,"column_start":54,"column_end":58},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":5682},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":738529,"byte_end":738533,"line_start":485,"line_end":485,"column_start":31,"column_end":35},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5682},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":738777,"byte_end":738781,"line_start":494,"line_end":494,"column_start":30,"column_end":34},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5682},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":739025,"byte_end":739029,"line_start":503,"line_end":503,"column_start":31,"column_end":35},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5682},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":739215,"byte_end":739219,"line_start":510,"line_end":510,"column_start":30,"column_end":34},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":5682},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":739405,"byte_end":739409,"line_start":517,"line_end":517,"column_start":32,"column_end":36},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5682},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":739646,"byte_end":739651,"line_start":527,"line_end":527,"column_start":53,"column_end":58},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":5769},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":739913,"byte_end":739918,"line_start":536,"line_end":536,"column_start":53,"column_end":58},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":5769},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":740179,"byte_end":740184,"line_start":545,"line_end":545,"column_start":52,"column_end":57},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":5769},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":740449,"byte_end":740454,"line_start":554,"line_end":554,"column_start":52,"column_end":57},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":5769},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":740720,"byte_end":740725,"line_start":563,"line_end":563,"column_start":53,"column_end":58},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":5769},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":740938,"byte_end":740943,"line_start":571,"line_end":571,"column_start":32,"column_end":37},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5769},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":741243,"byte_end":741248,"line_start":581,"line_end":581,"column_start":31,"column_end":36},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":5769},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":741591,"byte_end":741595,"line_start":594,"line_end":594,"column_start":52,"column_end":56},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":5711},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":741896,"byte_end":741900,"line_start":605,"line_end":605,"column_start":52,"column_end":56},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":5711},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":742202,"byte_end":742206,"line_start":616,"line_end":616,"column_start":53,"column_end":57},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":5711},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":742507,"byte_end":742511,"line_start":627,"line_end":627,"column_start":54,"column_end":58},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":5711},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":742812,"byte_end":742816,"line_start":638,"line_end":638,"column_start":53,"column_end":57},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":5711},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":743093,"byte_end":743097,"line_start":649,"line_end":649,"column_start":31,"column_end":35},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":5711},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":743459,"byte_end":743463,"line_start":660,"line_end":660,"column_start":30,"column_end":34},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":5711},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":743860,"byte_end":743864,"line_start":674,"line_end":674,"column_start":52,"column_end":56},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":5740},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":744165,"byte_end":744169,"line_start":685,"line_end":685,"column_start":52,"column_end":56},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":5740},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":744471,"byte_end":744475,"line_start":696,"line_end":696,"column_start":53,"column_end":57},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":5740},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":744776,"byte_end":744780,"line_start":707,"line_end":707,"column_start":54,"column_end":58},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":5740},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":745081,"byte_end":745085,"line_start":718,"line_end":718,"column_start":53,"column_end":57},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":5740},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":745409,"byte_end":745412,"line_start":732,"line_end":732,"column_start":53,"column_end":56},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":5624},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":745681,"byte_end":745684,"line_start":742,"line_end":742,"column_start":53,"column_end":56},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":5624},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":745952,"byte_end":745955,"line_start":752,"line_end":752,"column_start":52,"column_end":55},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":5624},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":746220,"byte_end":746223,"line_start":762,"line_end":762,"column_start":54,"column_end":57},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":5624},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":746487,"byte_end":746490,"line_start":772,"line_end":772,"column_start":53,"column_end":56},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":5624},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":746728,"byte_end":746731,"line_start":782,"line_end":782,"column_start":30,"column_end":33},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":5624},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":746956,"byte_end":746959,"line_start":790,"line_end":790,"column_start":29,"column_end":32},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":5624},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":747232,"byte_end":747235,"line_start":801,"line_end":801,"column_start":53,"column_end":56},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":5653},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":747503,"byte_end":747506,"line_start":811,"line_end":811,"column_start":52,"column_end":55},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":5653},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":747771,"byte_end":747774,"line_start":822,"line_end":822,"column_start":53,"column_end":56},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":5653},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":748044,"byte_end":748047,"line_start":832,"line_end":832,"column_start":54,"column_end":57},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":5653},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":748311,"byte_end":748314,"line_start":842,"line_end":842,"column_start":53,"column_end":56},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":5653},"to":{"krate":0,"index":3217}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":749980,"byte_end":749985,"line_start":896,"line_end":896,"column_start":30,"column_end":35},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":5769},"to":{"krate":0,"index":3351}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":750990,"byte_end":750994,"line_start":929,"line_end":929,"column_start":30,"column_end":34},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":5682},"to":{"krate":0,"index":3351}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":751104,"byte_end":751108,"line_start":935,"line_end":935,"column_start":30,"column_end":34},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":5711},"to":{"krate":0,"index":3351}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":753316,"byte_end":753320,"line_start":993,"line_end":993,"column_start":30,"column_end":34},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":5740},"to":{"krate":0,"index":3351}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":755526,"byte_end":755529,"line_start":1049,"line_end":1049,"column_start":30,"column_end":33},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":5624},"to":{"krate":0,"index":3351}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":755638,"byte_end":755641,"line_start":1055,"line_end":1055,"column_start":30,"column_end":33},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":5653},"to":{"krate":0,"index":3351}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":755860,"byte_end":755865,"line_start":1068,"line_end":1068,"column_start":31,"column_end":36},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":5769},"to":{"krate":0,"index":3371}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":756038,"byte_end":756042,"line_start":1077,"line_end":1077,"column_start":31,"column_end":35},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":5682},"to":{"krate":0,"index":3371}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":756230,"byte_end":756234,"line_start":1088,"line_end":1088,"column_start":31,"column_end":35},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":5711},"to":{"krate":0,"index":3371}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":756447,"byte_end":756451,"line_start":1099,"line_end":1099,"column_start":31,"column_end":35},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":5740},"to":{"krate":0,"index":3371}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":756664,"byte_end":756667,"line_start":1110,"line_end":1110,"column_start":31,"column_end":34},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":5624},"to":{"krate":0,"index":3371}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\color.rs","byte_start":756929,"byte_end":756932,"line_start":1124,"line_end":1124,"column_start":31,"column_end":34},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":5653},"to":{"krate":0,"index":3371}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":768428,"byte_end":768440,"line_start":132,"line_end":132,"column_start":6,"column_end":18},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":5849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":792897,"byte_end":792909,"line_start":810,"line_end":810,"column_start":27,"column_end":39},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":5849},"to":{"krate":0,"index":3639}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\dynimage.rs","byte_start":793442,"byte_end":793454,"line_start":832,"line_end":832,"column_start":23,"column_end":35},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":5849},"to":{"krate":0,"index":3652}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":807731,"byte_end":807742,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":5882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":810461,"byte_end":810478,"line_start":140,"line_end":140,"column_start":28,"column_end":45},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":5925},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":811686,"byte_end":811701,"line_start":175,"line_end":175,"column_start":6,"column_end":21},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":3576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":819571,"byte_end":819579,"line_start":359,"line_end":359,"column_start":6,"column_end":14},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":5959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":820085,"byte_end":820090,"line_start":379,"line_end":379,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":3602}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":823786,"byte_end":823798,"line_start":476,"line_end":476,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":3602},"to":{"krate":0,"index":3615}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":823805,"byte_end":823810,"line_start":476,"line_end":476,"column_start":51,"column_end":56},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":3615}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":826210,"byte_end":826216,"line_start":548,"line_end":548,"column_start":44,"column_end":50},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":3626},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":829021,"byte_end":829037,"line_start":646,"line_end":646,"column_start":25,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":3639},"to":{"krate":0,"index":3652}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":834675,"byte_end":834683,"line_start":792,"line_end":792,"column_start":9,"column_end":17},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":3664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":835820,"byte_end":835828,"line_start":833,"line_end":833,"column_start":30,"column_end":38},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":3664},"to":{"krate":0,"index":3639}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\image.rs","byte_start":836649,"byte_end":836657,"line_start":865,"line_end":865,"column_start":26,"column_end":34},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":3664},"to":{"krate":0,"index":3652}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":848682,"byte_end":848697,"line_start":12,"line_end":12,"column_start":35,"column_end":50},"kind":"SuperTrait","from":{"krate":0,"index":3782},"to":{"krate":0,"index":3711}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":849051,"byte_end":849055,"line_start":30,"line_end":30,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":3717}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":849058,"byte_end":849065,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"kind":"SuperTrait","from":{"krate":19,"index":176},"to":{"krate":0,"index":3717}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":849068,"byte_end":849071,"line_start":30,"line_end":30,"column_start":39,"column_end":42},"kind":"SuperTrait","from":{"krate":19,"index":589},"to":{"krate":0,"index":3717}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":849074,"byte_end":849084,"line_start":30,"line_end":30,"column_start":45,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":2077},"to":{"krate":0,"index":3717}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":849093,"byte_end":849098,"line_start":30,"line_end":30,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":2181},"to":{"krate":0,"index":3717}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":849101,"byte_end":849108,"line_start":30,"line_end":30,"column_start":72,"column_end":79},"kind":"SuperTrait","from":{"krate":19,"index":92},"to":{"krate":0,"index":3717}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":849584,"byte_end":849589,"line_start":47,"line_end":47,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":3730}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":849592,"byte_end":849599,"line_start":47,"line_end":47,"column_start":32,"column_end":39},"kind":"SuperTrait","from":{"krate":19,"index":92},"to":{"krate":0,"index":3730}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":849602,"byte_end":849609,"line_start":47,"line_end":47,"column_start":42,"column_end":49},"kind":"SuperTrait","from":{"krate":19,"index":176},"to":{"krate":0,"index":3730}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":850213,"byte_end":850217,"line_start":73,"line_end":73,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":3739}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.6\\./src\\traits.rs","byte_start":850220,"byte_end":850225,"line_start":73,"line_end":73,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2181},"to":{"krate":0,"index":3739}}]}