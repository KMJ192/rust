{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3","program":"C:\\Users\\MyeongJun\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--edition=2018","--crate-name","rusttype","C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"has-atomics\"","--cfg","feature=\"std\"","-C","metadata=49a59235df53888e","-C","extra-filename=-49a59235df53888e","--out-dir","d:\\develop\\rust\\rust_grammar\\snake_game\\target\\rls\\debug\\deps","-L","dependency=d:\\develop\\rust\\rust_grammar\\snake_game\\target\\rls\\debug\\deps","--extern","approx=d:\\develop\\rust\\rust_grammar\\snake_game\\target\\rls\\debug\\deps\\libapprox-020b98fa14c3a573.rmeta","--extern","ordered_float=d:\\develop\\rust\\rust_grammar\\snake_game\\target\\rls\\debug\\deps\\libordered_float-d34622ec08808c46.rmeta","--extern","stb_truetype=d:\\develop\\rust\\rust_grammar\\snake_game\\target\\rls\\debug\\deps\\libstb_truetype-f43e8c934b7ed64f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\MyeongJun\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\develop\\rust\\rust_grammar\\snake_game\\target\\rls\\debug\\deps\\librusttype-49a59235df53888e.rmeta"},"prelude":{"crate_id":{"name":"rusttype","disambiguator":[15526915136278357200,8875816050303856557]},"crate_root":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src","external_crates":[{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12580338268255904863,12487381105248359217]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","num":2,"id":{"name":"core","disambiguator":[14625317234859803032,6791610349458793748]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13367216100517456726,18240828775391475830]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5927333369983577022,15909913472650230380]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4800340595136090738,11980400279241392758]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16293423844334339663,11755502083335674850]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3461810660782397055,13833665689054202598]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12998339428753072936,5307867808309457385]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3374893436585051705,15533137816714572843]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3128393747248474415,2329478791457811584]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[6526974580395412454,5976980321596639697]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8056933235965822994,12193290402514539467]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16500325717628480317,8800586121391060646]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\rasterizer.rs","num":14,"id":{"name":"approx","disambiguator":[1411977752487921014,10009037195525763378]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\rasterizer.rs","num":15,"id":{"name":"num_traits","disambiguator":[1187548424570883877,13355397040756761828]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\rasterizer.rs","num":16,"id":{"name":"ordered_float","disambiguator":[2300956813902990848,16890934068437021359]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","num":17,"id":{"name":"stb_truetype","disambiguator":[7914132111174482881,17958679190176399050]}},{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","num":18,"id":{"name":"byteorder","disambiguator":[571040840798828509,11112181538235283130]}}],"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":0,"byte_end":42496,"line_start":1,"line_end":1112,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":6},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":5269,"byte_end":5274,"line_start":109,"line_end":109,"column_start":27,"column_end":32},"alias_span":null,"name":"point","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":5276,"byte_end":5282,"line_start":109,"line_end":109,"column_start":34,"column_end":40},"alias_span":null,"name":"vector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":5284,"byte_end":5289,"line_start":109,"line_end":109,"column_start":42,"column_end":47},"alias_span":null,"name":"Curve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":5291,"byte_end":5295,"line_start":109,"line_end":109,"column_start":49,"column_end":53},"alias_span":null,"name":"Line","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":5297,"byte_end":5302,"line_start":109,"line_end":109,"column_start":55,"column_end":60},"alias_span":null,"name":"Point","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":5304,"byte_end":5308,"line_start":109,"line_end":109,"column_start":62,"column_end":66},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":5310,"byte_end":5316,"line_start":109,"line_end":109,"column_start":68,"column_end":74},"alias_span":null,"name":"Vector","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":0,"byte_end":42496,"line_start":1,"line_end":1112,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":88},{"krate":0,"index":138},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":499},{"krate":0,"index":506},{"krate":0,"index":503},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":150},{"krate":0,"index":515},{"krate":0,"index":526},{"krate":0,"index":523},{"krate":0,"index":152},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":529},{"krate":0,"index":554},{"krate":0,"index":552},{"krate":0,"index":550},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":540},{"krate":0,"index":534},{"krate":0,"index":532},{"krate":0,"index":555},{"krate":0,"index":580},{"krate":0,"index":578},{"krate":0,"index":576},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":566},{"krate":0,"index":560},{"krate":0,"index":558},{"krate":0,"index":581},{"krate":0,"index":584},{"krate":0,"index":169},{"krate":0,"index":587},{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":605},{"krate":0,"index":607},{"krate":0,"index":628},{"krate":0,"index":626},{"krate":0,"index":624},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":610},{"krate":0,"index":629},{"krate":0,"index":655},{"krate":0,"index":653},{"krate":0,"index":651},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":633},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":656},{"krate":0,"index":661},{"krate":0,"index":176},{"krate":0,"index":664},{"krate":0,"index":669},{"krate":0,"index":178},{"krate":0,"index":672},{"krate":0,"index":693},{"krate":0,"index":691},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":677},{"krate":0,"index":675},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":197},{"krate":0,"index":201},{"krate":0,"index":205},{"krate":0,"index":694},{"krate":0,"index":700},{"krate":0,"index":224},{"krate":0,"index":705},{"krate":0,"index":714},{"krate":0,"index":231},{"krate":0,"index":237},{"krate":0,"index":718},{"krate":0,"index":729},{"krate":0,"index":727},{"krate":0,"index":725},{"krate":0,"index":730},{"krate":0,"index":734},{"krate":0,"index":732},{"krate":0,"index":246},{"krate":0,"index":267},{"krate":0,"index":736},{"krate":0,"index":745},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":289}],"decl_id":null,"docs":" RustType is a pure Rust alternative to libraries like FreeType.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: doc_markdown, clippy ::\n        cast_lossless, clippy :: many_single_char_names)","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":4887,"byte_end":5021,"line_start":90,"line_end":95,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":43295,"byte_end":43300,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"name":"Point","qualname":"::geometry::Point","value":"Point { x, y }","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294}],"decl_id":null,"docs":" A point in 2-dimensional space, with each dimension of type `N`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":43314,"byte_end":43315,"line_start":22,"line_end":22,"column_start":9,"column_end":10},"name":"x","qualname":"::geometry::Point::x","value":"N","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":43328,"byte_end":43329,"line_start":23,"line_end":23,"column_start":9,"column_end":10},"name":"y","qualname":"::geometry::Point::y","value":"N","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":43661,"byte_end":43667,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"Vector","qualname":"::geometry::Vector","value":"Vector { x, y }","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338}],"decl_id":null,"docs":" A vector in 2-dimensional space, with each dimension of type `N`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":43681,"byte_end":43682,"line_start":33,"line_end":33,"column_start":9,"column_end":10},"name":"x","qualname":"::geometry::Vector::x","value":"N","parent":{"krate":0,"index":335},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":43695,"byte_end":43696,"line_start":34,"line_end":34,"column_start":9,"column_end":10},"name":"y","qualname":"::geometry::Vector::y","value":"N","parent":{"krate":0,"index":335},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":43773,"byte_end":43778,"line_start":39,"line_end":39,"column_start":8,"column_end":13},"name":"point","qualname":"::geometry::point","value":"fn <N> (x: N, y: N) -> Point<N>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for generating `Point`s.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":43756,"byte_end":43765,"line_start":38,"line_end":38,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":43899,"byte_end":43905,"line_start":44,"line_end":44,"column_start":8,"column_end":14},"name":"vector","qualname":"::geometry::vector","value":"fn <N> (x: N, y: N) -> Vector<N>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for generating `Vector`s.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":43882,"byte_end":43891,"line_start":43,"line_end":43,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":46580,"byte_end":46584,"line_start":148,"line_end":148,"column_start":12,"column_end":16},"name":"Line","qualname":"::geometry::Line","value":"Line { p }","parent":null,"children":[{"krate":0,"index":380}],"decl_id":null,"docs":" A straight line between two points, `p[0]` and `p[1]`\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":46595,"byte_end":46596,"line_start":149,"line_end":149,"column_start":9,"column_end":10},"name":"p","qualname":"::geometry::Line::p","value":"[geometry::Point<f32>; _]","parent":{"krate":0,"index":379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":46789,"byte_end":46794,"line_start":154,"line_end":154,"column_start":12,"column_end":17},"name":"Curve","qualname":"::geometry::Curve","value":"Curve { p }","parent":null,"children":[{"krate":0,"index":401}],"decl_id":null,"docs":" A quadratic Bezier curve, starting at `p[0]`, ending at `p[2]`, with control\n point `p[1]`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":46805,"byte_end":46806,"line_start":155,"line_end":155,"column_start":9,"column_end":10},"name":"p","qualname":"::geometry::Curve::p","value":"[geometry::Point<f32>; _]","parent":{"krate":0,"index":400},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":47001,"byte_end":47005,"line_start":160,"line_end":160,"column_start":12,"column_end":16},"name":"Rect","qualname":"::geometry::Rect","value":"Rect { min, max }","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424}],"decl_id":null,"docs":" A rectangle, with top-left corner at `min`, and bottom-right corner at\n `max`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":47019,"byte_end":47022,"line_start":161,"line_end":161,"column_start":9,"column_end":12},"name":"min","qualname":"::geometry::Rect::min","value":"geometry::Point<N>","parent":{"krate":0,"index":421},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":424},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":47042,"byte_end":47045,"line_start":162,"line_end":162,"column_start":9,"column_end":12},"name":"max","qualname":"::geometry::Rect::max","value":"geometry::Point<N>","parent":{"krate":0,"index":421},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":47118,"byte_end":47123,"line_start":166,"line_end":166,"column_start":12,"column_end":17},"name":"width","qualname":"<Rect<N>>::width","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":47187,"byte_end":47193,"line_start":169,"line_end":169,"column_start":12,"column_end":18},"name":"height","qualname":"<Rect<N>>::height","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\rasterizer.rs","byte_start":52635,"byte_end":52643,"line_start":11,"line_end":11,"column_start":10,"column_end":18},"name":"PerSlice","qualname":"::rasterizer::SliceUp::PerSlice","value":"type PerSlice: Iterator<Item = Self>;","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\rasterizer.rs","byte_start":52677,"byte_end":52680,"line_start":12,"line_end":12,"column_start":10,"column_end":13},"name":"Out","qualname":"::rasterizer::SliceUp::Out","value":"type Out: Iterator<Item = Self::PerSlice>;","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":6062,"byte_end":6076,"line_start":133,"line_end":133,"column_start":12,"column_end":26},"name":"FontCollection","qualname":"::FontCollection","value":"","parent":null,"children":[],"decl_id":null,"docs":" A collection of fonts read straight from a font file's data. The data in the\n collection is not validated. This structure may or may not own the font\n data.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":6794,"byte_end":6798,"line_start":155,"line_end":155,"column_start":12,"column_end":16},"name":"Font","qualname":"::Font","value":"Font {  }","parent":null,"children":[{"krate":0,"index":511}],"decl_id":null,"docs":" A single font. This may or may not own the font data.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":7516,"byte_end":7521,"line_start":176,"line_end":176,"column_start":5,"column_end":10},"name":"ByRef","qualname":"::SharedBytes::ByRef","value":"SharedBytes::ByRef(&'a [u8])","parent":{"krate":0,"index":515},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":520},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":7537,"byte_end":7542,"line_start":177,"line_end":177,"column_start":5,"column_end":10},"name":"ByArc","qualname":"::SharedBytes::ByArc","value":"SharedBytes::ByArc(Arc<[u8]>)","parent":{"krate":0,"index":515},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":7494,"byte_end":7505,"line_start":175,"line_end":175,"column_start":10,"column_end":21},"name":"SharedBytes","qualname":"::SharedBytes","value":"SharedBytes::{ByRef, ByArc}","parent":null,"children":[{"krate":0,"index":517},{"krate":0,"index":520}],"decl_id":null,"docs":" `SharedBytes` handles the lifetime of font data used in RustType. The data\n is either a shared reference to externally owned data, or managed by\n reference counting. `SharedBytes` can be conveniently used with `From` and\n `Into`, and dereferences to the contained bytes.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":529},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":9588,"byte_end":9597,"line_start":248,"line_end":248,"column_start":12,"column_end":21},"name":"Codepoint","qualname":"::Codepoint","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Unicode code point.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":9877,"byte_end":9884,"line_start":253,"line_end":253,"column_start":12,"column_end":19},"name":"GlyphId","qualname":"::GlyphId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a glyph identifier for a particular font. This identifier will\n not necessarily correspond to the correct glyph in a font other than the\n one that it was obtained from.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":10299,"byte_end":10304,"line_start":262,"line_end":262,"column_start":12,"column_end":17},"name":"Glyph","qualname":"::Glyph","value":"Glyph {  }","parent":null,"children":[{"krate":0,"index":583}],"decl_id":null,"docs":" A single glyph of a font. this may either be a thin wrapper referring to the\n font and the glyph id, or it may be a standalone glyph that owns the data\n needed by it.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":599},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":10642,"byte_end":10657,"line_start":279,"line_end":279,"column_start":12,"column_end":27},"name":"SharedGlyphData","qualname":"::SharedGlyphData","value":"SharedGlyphData { id, extents, scale_for_1_pixel, unit_h_metrics, shape }","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":10668,"byte_end":10670,"line_start":280,"line_end":280,"column_start":9,"column_end":11},"name":"id","qualname":"::SharedGlyphData::id","value":"u32","parent":{"krate":0,"index":599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":10685,"byte_end":10692,"line_start":281,"line_end":281,"column_start":9,"column_end":16},"name":"extents","qualname":"::SharedGlyphData::extents","value":"std::option::Option<geometry::Rect<i32>>","parent":{"krate":0,"index":599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":10721,"byte_end":10738,"line_start":282,"line_end":282,"column_start":9,"column_end":26},"name":"scale_for_1_pixel","qualname":"::SharedGlyphData::scale_for_1_pixel","value":"f32","parent":{"krate":0,"index":599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":10753,"byte_end":10767,"line_start":283,"line_end":283,"column_start":9,"column_end":23},"name":"unit_h_metrics","qualname":"::SharedGlyphData::unit_h_metrics","value":"HMetrics","parent":{"krate":0,"index":599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":10787,"byte_end":10792,"line_start":284,"line_end":284,"column_start":9,"column_end":14},"name":"shape","qualname":"::SharedGlyphData::shape","value":"std::option::Option<std::vec::Vec<stb_truetype::Vertex>>","parent":{"krate":0,"index":599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":11071,"byte_end":11079,"line_start":290,"line_end":290,"column_start":12,"column_end":20},"name":"HMetrics","qualname":"::HMetrics","value":"HMetrics { advance_width, left_side_bearing }","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609}],"decl_id":null,"docs":" The \"horizontal metrics\" of a glyph. This is useful for calculating the\n horizontal offset of a glyph from the previous one in a string when laying a\n string out horizontally.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":608},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":11203,"byte_end":11216,"line_start":293,"line_end":293,"column_start":9,"column_end":22},"name":"advance_width","qualname":"::HMetrics::advance_width","value":"f32","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":" The horizontal offset that the origin of the next glyph should be from\n the origin of this glyph.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":11344,"byte_end":11361,"line_start":296,"line_end":296,"column_start":9,"column_end":26},"name":"left_side_bearing","qualname":"::HMetrics::left_side_bearing","value":"f32","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":" The horizontal offset between the origin of this glyph and the leftmost\n edge/point of the glyph.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":11650,"byte_end":11658,"line_start":302,"line_end":302,"column_start":12,"column_end":20},"name":"VMetrics","qualname":"::VMetrics","value":"VMetrics { ascent, descent, line_gap }","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632}],"decl_id":null,"docs":" The \"vertical metrics\" of a font at a particular scale. This is useful for\n calculating the amount of vertical space to give a line of text, and for\n computing the vertical offset between successive lines.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":11781,"byte_end":11787,"line_start":305,"line_end":305,"column_start":9,"column_end":15},"name":"ascent","qualname":"::VMetrics::ascent","value":"f32","parent":{"krate":0,"index":629},"children":[],"decl_id":null,"docs":" The highest point that any glyph in the font extends to above the\n baseline. Typically positive.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":631},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":11913,"byte_end":11920,"line_start":308,"line_end":308,"column_start":9,"column_end":16},"name":"descent","qualname":"::VMetrics::descent","value":"f32","parent":{"krate":0,"index":629},"children":[],"decl_id":null,"docs":" The lowest point that any glyph in the font extends to below the\n baseline. Typically negative.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":12094,"byte_end":12102,"line_start":311,"line_end":311,"column_start":9,"column_end":17},"name":"line_gap","qualname":"::VMetrics::line_gap","value":"f32","parent":{"krate":0,"index":629},"children":[],"decl_id":null,"docs":" The gap to leave between the descent of one line and the ascent of the\n next. This is of course only a guideline given by the font's designers.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":12771,"byte_end":12782,"line_start":339,"line_end":339,"column_start":12,"column_end":23},"name":"ScaledGlyph","qualname":"::ScaledGlyph","value":"ScaledGlyph {  }","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660}],"decl_id":null,"docs":" A glyph augmented with scaling information. You can query such a glyph for\n information that depends on the scale of the glyph.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":664},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":13306,"byte_end":13321,"line_start":358,"line_end":358,"column_start":12,"column_end":27},"name":"PositionedGlyph","qualname":"::PositionedGlyph","value":"PositionedGlyph {  }","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668}],"decl_id":null,"docs":" A glyph augmented with positioning and scaling information. You can query\n such a glyph for information that depends on the scale and position of the\n glyph.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":14195,"byte_end":14200,"line_start":381,"line_end":381,"column_start":12,"column_end":17},"name":"Scale","qualname":"::Scale","value":"Scale { x, y }","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674}],"decl_id":null,"docs":" Defines the size of a rendered face of a font, in pixels, horizontally and\n vertically. A vertical scale of `y` pixels means that the distance betwen\n the ascent and descent lines (see `VMetrics`) of the face will be `y`\n pixels. If `x` and `y` are equal the scaling is uniform. Non-uniform scaling\n by a factor *f* in the horizontal direction is achieved by setting `x` equal\n to *f* times `y`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":673},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":14248,"byte_end":14249,"line_start":383,"line_end":383,"column_start":9,"column_end":10},"name":"x","qualname":"::Scale::x","value":"f32","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" Horizontal scale, in pixels.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":674},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":14299,"byte_end":14300,"line_start":385,"line_end":385,"column_start":9,"column_end":10},"name":"y","qualname":"::Scale::y","value":"f32","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" Vertical scale, in pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":14411,"byte_end":14418,"line_start":391,"line_end":391,"column_start":12,"column_end":19},"name":"uniform","qualname":"<Scale>::uniform","value":"fn (s: f32) -> Scale","parent":null,"children":[],"decl_id":null,"docs":" Uniform scaling, equivalent to `Scale { x: s, y: s }`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":14390,"byte_end":14399,"line_start":390,"line_end":390,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":14784,"byte_end":14795,"line_start":401,"line_end":401,"column_start":11,"column_end":22},"name":"IntoGlyphId","qualname":"::IntoGlyphId","value":"IntoGlyphId","parent":null,"children":[{"krate":0,"index":183}],"decl_id":null,"docs":" A trait for types that can be converted into a `GlyphId`, in the context of\n a specific font.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":14903,"byte_end":14916,"line_start":404,"line_end":404,"column_start":8,"column_end":21},"name":"into_glyph_id","qualname":"::IntoGlyphId::into_glyph_id","value":"fn (self, _: &Font<'_>) -> GlyphId","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" Convert `self` into a `GlyphId`, consulting the index map of `font` if\n necessary.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":15894,"byte_end":15904,"line_start":431,"line_end":431,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<FontCollection>::from_bytes","value":"fn <B> (bytes: B) -> Result<FontCollection<'a>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a font collection from an array of bytes, typically loaded\n from a font file, which may be a single font or a TrueType Collection\n holding a number of fonts. This array may be owned (e.g. `Vec<u8>`), or\n borrowed (`&[u8]`). As long as `From<T>` is implemented for `Bytes` for\n some type `T`, `T` can be used as input.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":16946,"byte_end":16955,"line_start":452,"line_end":452,"column_start":12,"column_end":21},"name":"into_font","qualname":"<FontCollection>::into_font","value":"fn (self) -> Result<Font<'a>, Error>","parent":null,"children":[],"decl_id":null,"docs":" If this `FontCollection` holds a single font, or a TrueType Collection\n containing only one font, return that as a `Font`. The `FontCollection`\n is consumed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":17982,"byte_end":17989,"line_start":473,"line_end":473,"column_start":12,"column_end":19},"name":"font_at","qualname":"<FontCollection>::font_at","value":"fn (&self, i: usize) -> Result<Font<'a>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Gets the font at index `i` in the font collection, if it exists and is\n valid. The produced font borrows the font data that is either borrowed\n or owned by this font collection.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":18408,"byte_end":18418,"line_start":481,"line_end":481,"column_start":12,"column_end":22},"name":"into_fonts","qualname":"<FontCollection>::into_fonts","value":"fn (self) -> IntoFontsIter<'a>","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into an `Iterator` yielding each `Font` that exists\n within the collection.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":18558,"byte_end":18571,"line_start":488,"line_end":488,"column_start":12,"column_end":25},"name":"IntoFontsIter","qualname":"::IntoFontsIter","value":"IntoFontsIter {  }","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":19176,"byte_end":19186,"line_start":506,"line_end":506,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<Font>::from_bytes","value":"fn <B> (bytes: B) -> Result<Font<'a>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a font from an array of bytes, this is a shortcut for\n `FontCollection::from_bytes` for collections comprised of a single font.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":19502,"byte_end":19511,"line_start":512,"line_end":512,"column_start":12,"column_end":21},"name":"v_metrics","qualname":"<Font>::v_metrics","value":"fn (&self, scale: Scale) -> VMetrics","parent":null,"children":[],"decl_id":null,"docs":" The \"vertical metrics\" for this font at a given scale. These metrics are\n shared by all of the glyphs in the font. See `VMetrics` for more detail.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":19818,"byte_end":19836,"line_start":520,"line_end":520,"column_start":12,"column_end":30},"name":"v_metrics_unscaled","qualname":"<Font>::v_metrics_unscaled","value":"fn (&self) -> VMetrics","parent":null,"children":[],"decl_id":null,"docs":" Get the unscaled VMetrics for this font, shared by all glyphs.\n See `VMetrics` for more detail.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":19979,"byte_end":19991,"line_start":525,"line_end":525,"column_start":12,"column_end":24},"name":"units_per_em","qualname":"<Font>::units_per_em","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the units per EM square of this font\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":20202,"byte_end":20213,"line_start":531,"line_end":531,"column_start":12,"column_end":23},"name":"glyph_count","qualname":"<Font>::glyph_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of glyphs present in this font. Glyph identifiers for this\n font will always be in the range `0..self.glyph_count()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":20836,"byte_end":20841,"line_start":545,"line_end":545,"column_start":12,"column_end":17},"name":"glyph","qualname":"<Font>::glyph","value":"fn <C> (&self, id: C) -> Glyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding glyph for a Unicode code point or a glyph id\n for this font.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":21388,"byte_end":21398,"line_start":557,"line_end":557,"column_start":12,"column_end":22},"name":"glyphs_for","qualname":"<Font>::glyphs_for","value":"fn <I> (&self, itr: I) -> GlyphIter<'a, '_, I>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":21610,"byte_end":21627,"line_start":564,"line_end":564,"column_start":12,"column_end":29},"name":"font_name_strings","qualname":"<Font>::font_name_strings","value":"fn (&self) -> tt::FontNameIter<'_, SharedBytes<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the names for this font.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":23811,"byte_end":23817,"line_start":613,"line_end":613,"column_start":12,"column_end":18},"name":"layout","qualname":"<Font>::layout","value":"fn <'b> (&'b self, s: &'b str, scale: Scale, start: Point<f32>) -> LayoutIter<'a, 'b>","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for laying out glyphs for a string horizontally.\n It does not take control characters like line breaks into account, as\n treatment of these is likely to depend on the application.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":24214,"byte_end":24226,"line_start":625,"line_end":625,"column_start":12,"column_end":24},"name":"pair_kerning","qualname":"<Font>::pair_kerning","value":"fn <A, B> (&self, scale: Scale, first: A, second: B) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns additional kerning to apply as well as that given by HMetrics\n for a particular pair of glyphs.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":694},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":24677,"byte_end":24686,"line_start":638,"line_end":638,"column_start":12,"column_end":21},"name":"GlyphIter","qualname":"::GlyphIter","value":"GlyphIter {  }","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":699}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":25035,"byte_end":25045,"line_start":655,"line_end":655,"column_start":12,"column_end":22},"name":"LayoutIter","qualname":"::LayoutIter","value":"LayoutIter {  }","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":26168,"byte_end":26172,"line_start":686,"line_end":686,"column_start":12,"column_end":16},"name":"font","qualname":"<Glyph>::font","value":"fn (&self) -> Option<&Font<'a>>","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs. If the glyph is a standalone glyph\n that owns its resources, it no longer has a reference to the font which\n it was created from (using `standalone()`). In which case, `None` is\n returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":26397,"byte_end":26399,"line_start":693,"line_end":693,"column_start":12,"column_end":14},"name":"id","qualname":"<Glyph>::id","value":"fn (&self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":26715,"byte_end":26721,"line_start":701,"line_end":701,"column_start":12,"column_end":18},"name":"scaled","qualname":"<Glyph>::scaled","value":"fn (self, scale: Scale) -> ScaledGlyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Augments this glyph with scaling information, making methods that depend\n on the scale of the glyph available.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":27734,"byte_end":27744,"line_start":726,"line_end":726,"column_start":12,"column_end":22},"name":"standalone","qualname":"<Glyph>::standalone","value":"fn (&self) -> Glyph<'static>","parent":null,"children":[],"decl_id":null,"docs":" Turns a `Glyph<'a>` into a `Glyph<'static>`. This produces a glyph that\n owns its resources, extracted from the font. This glyph can outlive the\n font that it comes from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":28931,"byte_end":28939,"line_start":751,"line_end":751,"column_start":12,"column_end":20},"name":"get_data","qualname":"<Glyph>::get_data","value":"fn (&self) -> Option<Arc<SharedGlyphData>>","parent":null,"children":[],"decl_id":null,"docs":" Get the data from this glyph (such as width, extents, vertices, etc.).\n Only possible if the glyph is a shared glyph.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":29235,"byte_end":29239,"line_start":761,"line_end":761,"column_start":5,"column_end":9},"name":"Line","qualname":"::Segment::Line","value":"Segment::Line(Line)","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":29251,"byte_end":29256,"line_start":762,"line_end":762,"column_start":5,"column_end":10},"name":"Curve","qualname":"::Segment::Curve","value":"Segment::Curve(Curve)","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":29221,"byte_end":29228,"line_start":760,"line_end":760,"column_start":10,"column_end":17},"name":"Segment","qualname":"::Segment","value":"Segment::{Line, Curve}","parent":null,"children":[{"krate":0,"index":719},{"krate":0,"index":722}],"decl_id":null,"docs":" Part of a `Contour`, either a `Line` or a `Curve`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":29360,"byte_end":29367,"line_start":766,"line_end":766,"column_start":12,"column_end":19},"name":"Contour","qualname":"::Contour","value":"Contour { segments }","parent":null,"children":[{"krate":0,"index":731}],"decl_id":null,"docs":" A closed loop consisting of a sequence of `Segment`s.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":731},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":29378,"byte_end":29386,"line_start":767,"line_end":767,"column_start":9,"column_end":17},"name":"segments","qualname":"::Contour::segments","value":"std::vec::Vec<Segment>","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":29487,"byte_end":29489,"line_start":771,"line_end":771,"column_start":12,"column_end":14},"name":"id","qualname":"<ScaledGlyph>::id","value":"fn (&self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":29803,"byte_end":29807,"line_start":778,"line_end":778,"column_start":12,"column_end":16},"name":"font","qualname":"<ScaledGlyph>::font","value":"fn (&self) -> Option<&Font<'a>>","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs. If the glyph is a standalone glyph\n that owns its resources, it no longer has a reference to the font which\n it was created from (using `standalone()`). In which case, `None` is\n returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":29931,"byte_end":29944,"line_start":782,"line_end":782,"column_start":12,"column_end":25},"name":"into_unscaled","qualname":"<ScaledGlyph>::into_unscaled","value":"fn (self) -> Glyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" A reference to this glyph without the scaling\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":30042,"byte_end":30050,"line_start":786,"line_end":786,"column_start":12,"column_end":20},"name":"unscaled","qualname":"<ScaledGlyph>::unscaled","value":"fn (&self) -> &Glyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Removes the scaling from this glyph\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":30240,"byte_end":30250,"line_start":791,"line_end":791,"column_start":12,"column_end":22},"name":"positioned","qualname":"<ScaledGlyph>::positioned","value":"fn (self, p: Point<f32>) -> PositionedGlyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Augments this glyph with positioning information, making methods that\n depend on the position of the glyph available.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":30455,"byte_end":30460,"line_start":799,"line_end":799,"column_start":12,"column_end":17},"name":"scale","qualname":"<ScaledGlyph>::scale","value":"fn (&self) -> Scale","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":30617,"byte_end":30626,"line_start":804,"line_end":804,"column_start":12,"column_end":21},"name":"h_metrics","qualname":"<ScaledGlyph>::h_metrics","value":"fn (&self) -> HMetrics","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the \"horizontal metrics\" of this glyph. See `HMetrics` for\n more detail.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":33291,"byte_end":33296,"line_start":867,"line_end":867,"column_start":12,"column_end":17},"name":"shape","qualname":"<ScaledGlyph>::shape","value":"fn (&self) -> Option<Vec<Contour>>","parent":null,"children":[],"decl_id":null,"docs":" Produces a list of the contours that make up the shape of this glyph.\n Each contour consists of a sequence of segments. Each segment is either\n a straight `Line` or a `Curve`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":33608,"byte_end":33626,"line_start":873,"line_end":873,"column_start":12,"column_end":30},"name":"exact_bounding_box","qualname":"<ScaledGlyph>::exact_bounding_box","value":"fn (&self) -> Option<Rect<f32>>","parent":null,"children":[],"decl_id":null,"docs":" The bounding box of the shape of this glyph, not to be confused with\n `pixel_bounding_box`, the conservative pixel-boundary bounding box. The\n coordinates are relative to the glyph's origin.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":34532,"byte_end":34542,"line_start":893,"line_end":893,"column_start":12,"column_end":22},"name":"standalone","qualname":"<ScaledGlyph>::standalone","value":"fn (&self) -> ScaledGlyph<'static>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a glyph that owns its data from this glyph. This is similar\n to `Glyph::standalone`. See that function for more details.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":36095,"byte_end":36097,"line_start":932,"line_end":932,"column_start":12,"column_end":14},"name":"id","qualname":"<PositionedGlyph>::id","value":"fn (&self) -> GlyphId","parent":null,"children":[],"decl_id":null,"docs":" The glyph identifier for this glyph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":36412,"byte_end":36416,"line_start":939,"line_end":939,"column_start":12,"column_end":16},"name":"font","qualname":"<PositionedGlyph>::font","value":"fn (&self) -> Option<&Font<'a>>","parent":null,"children":[],"decl_id":null,"docs":" The font to which this glyph belongs. If the glyph is a standalone glyph\n that owns its resources, it no longer has a reference to the font which\n it was created from (using `standalone()`). In which case, `None` is\n returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":36541,"byte_end":36553,"line_start":943,"line_end":943,"column_start":12,"column_end":24},"name":"unpositioned","qualname":"<PositionedGlyph>::unpositioned","value":"fn (&self) -> &ScaledGlyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" A reference to this glyph without positioning\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":36665,"byte_end":36682,"line_start":947,"line_end":947,"column_start":12,"column_end":29},"name":"into_unpositioned","qualname":"<PositionedGlyph>::into_unpositioned","value":"fn (self) -> ScaledGlyph<'a>","parent":null,"children":[],"decl_id":null,"docs":" Removes the positioning from this glyph\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":37061,"byte_end":37079,"line_start":954,"line_end":954,"column_start":12,"column_end":30},"name":"pixel_bounding_box","qualname":"<PositionedGlyph>::pixel_bounding_box","value":"fn (&self) -> Option<Rect<i32>>","parent":null,"children":[],"decl_id":null,"docs":" The conservative pixel-boundary bounding box for this glyph. This is the\n smallest rectangle aligned to pixel boundaries that encloses the shape\n of this glyph at this position. Note that the origin of the glyph, at\n pixel-space coordinates (0, 0), is at the top left of the bounding box.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":37249,"byte_end":37254,"line_start":959,"line_end":959,"column_start":12,"column_end":17},"name":"shape","qualname":"<PositionedGlyph>::shape","value":"fn (&self) -> Option<Vec<Contour>>","parent":null,"children":[],"decl_id":null,"docs":" Similar to `ScaledGlyph::shape()`, but with the position of the glyph\n taken into account.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":37354,"byte_end":37359,"line_start":962,"line_end":962,"column_start":12,"column_end":17},"name":"scale","qualname":"<PositionedGlyph>::scale","value":"fn (&self) -> Scale","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":37421,"byte_end":37429,"line_start":965,"line_end":965,"column_start":12,"column_end":20},"name":"position","qualname":"<PositionedGlyph>::position","value":"fn (&self) -> Point<f32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":38209,"byte_end":38213,"line_start":988,"line_end":988,"column_start":12,"column_end":16},"name":"draw","qualname":"<PositionedGlyph>::draw","value":"fn <O> (&self, o: O) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rasterises this glyph. For each pixel in the rect given by\n `pixel_bounding_box()`, `o` is called:","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":40007,"byte_end":40017,"line_start":1035,"line_end":1035,"column_start":12,"column_end":22},"name":"standalone","qualname":"<PositionedGlyph>::standalone","value":"fn (&self) -> PositionedGlyph<'static>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a glyph that owns its data from this glyph. This is similar\n to `Glyph::standalone`. See that function for more details.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":40288,"byte_end":40300,"line_start":1044,"line_end":1044,"column_start":12,"column_end":24},"name":"set_position","qualname":"<PositionedGlyph>::set_position","value":"fn (&mut self, p: Point<f32>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resets positioning information and recalculates the pixel bounding box\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":737},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":41002,"byte_end":41020,"line_start":1064,"line_end":1064,"column_start":5,"column_end":23},"name":"UnrecognizedFormat","qualname":"::Error::UnrecognizedFormat","value":"Error::UnrecognizedFormat","parent":{"krate":0,"index":736},"children":[],"decl_id":null,"docs":" Font data presented to rusttype is not in a format that the library\n recognizes.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":739},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":41131,"byte_end":41140,"line_start":1068,"line_end":1068,"column_start":5,"column_end":14},"name":"IllFormed","qualname":"::Error::IllFormed","value":"Error::IllFormed","parent":{"krate":0,"index":736},"children":[],"decl_id":null,"docs":" Font data presented to rusttype was ill-formed (lacking necessary\n tables, for example).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":741},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":41283,"byte_end":41309,"line_start":1072,"line_end":1072,"column_start":5,"column_end":31},"name":"CollectionIndexOutOfBounds","qualname":"::Error::CollectionIndexOutOfBounds","value":"Error::CollectionIndexOutOfBounds","parent":{"krate":0,"index":736},"children":[],"decl_id":null,"docs":" The caller tried to access the `i`'th font from a `FontCollection`, but\n the collection doesn't contain that many fonts.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":743},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":41462,"byte_end":41493,"line_start":1076,"line_end":1076,"column_start":5,"column_end":36},"name":"CollectionContainsMultipleFonts","qualname":"::Error::CollectionContainsMultipleFonts","value":"Error::CollectionContainsMultipleFonts","parent":{"krate":0,"index":736},"children":[],"decl_id":null,"docs":" The caller tried to convert a `FontCollection` into a font via\n `into_font`, but the `FontCollection` contains more than one font.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":736},"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":40894,"byte_end":40899,"line_start":1061,"line_end":1061,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"Error::{UnrecognizedFormat, IllFormed, CollectionIndexOutOfBounds, CollectionContainsMultipleFonts}","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":739},{"krate":0,"index":741},{"krate":0,"index":743}],"decl_id":null,"docs":" The type for errors returned by rusttype.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":44002,"byte_end":44007,"line_start":48,"line_end":48,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":44188,"byte_end":44194,"line_start":55,"line_end":55,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":44376,"byte_end":44382,"line_start":62,"line_end":62,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":44544,"byte_end":44550,"line_start":69,"line_end":69,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":44880,"byte_end":44886,"line_start":83,"line_end":83,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":45216,"byte_end":45222,"line_start":97,"line_end":97,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":45552,"byte_end":45558,"line_start":111,"line_end":111,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":45919,"byte_end":45924,"line_start":125,"line_end":125,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":46114,"byte_end":46119,"line_start":132,"line_end":132,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":46308,"byte_end":46314,"line_start":139,"line_end":139,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":47097,"byte_end":47101,"line_start":165,"line_end":165,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":47612,"byte_end":47616,"line_start":187,"line_end":187,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":48016,"byte_end":48021,"line_start":206,"line_end":206,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":49515,"byte_end":49520,"line_start":252,"line_end":252,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":49981,"byte_end":49985,"line_start":269,"line_end":269,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":50881,"byte_end":50902,"line_start":306,"line_end":306,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\rasterizer.rs","byte_start":53013,"byte_end":53026,"line_start":28,"line_end":28,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\rasterizer.rs","byte_start":54178,"byte_end":54182,"line_start":65,"line_end":65,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\rasterizer.rs","byte_start":54954,"byte_end":54968,"line_start":101,"line_end":101,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\rasterizer.rs","byte_start":58038,"byte_end":58043,"line_start":188,"line_end":188,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":6869,"byte_end":6873,"line_start":159,"line_end":159,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":7588,"byte_end":7599,"line_start":180,"line_end":180,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":7998,"byte_end":8009,"line_start":195,"line_end":195,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":8354,"byte_end":8365,"line_start":207,"line_end":207,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":8690,"byte_end":8701,"line_start":218,"line_end":218,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":9013,"byte_end":9024,"line_start":229,"line_end":229,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":9355,"byte_end":9366,"line_start":240,"line_end":240,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":10361,"byte_end":10366,"line_start":266,"line_end":266,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":12140,"byte_end":12148,"line_start":314,"line_end":314,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":12374,"byte_end":12382,"line_start":324,"line_end":324,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":12876,"byte_end":12887,"line_start":345,"line_end":345,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":13429,"byte_end":13444,"line_start":364,"line_end":364,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":14315,"byte_end":14320,"line_start":388,"line_end":388,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":15122,"byte_end":15131,"line_start":411,"line_end":411,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":15272,"byte_end":15279,"line_start":416,"line_end":416,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":15384,"byte_end":15398,"line_start":422,"line_end":422,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":18661,"byte_end":18674,"line_start":492,"line_end":492,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":19000,"byte_end":19004,"line_start":503,"line_end":503,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":24819,"byte_end":24828,"line_start":645,"line_end":645,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":25231,"byte_end":25241,"line_start":663,"line_end":663,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":25810,"byte_end":25815,"line_start":678,"line_end":678,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":29413,"byte_end":29424,"line_start":769,"line_end":769,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":36017,"byte_end":36032,"line_start":930,"line_end":930,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":41503,"byte_end":41508,"line_start":1079,"line_end":1079,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":42039,"byte_end":42044,"line_start":1094,"line_end":1094,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":42235,"byte_end":42240,"line_start":1101,"line_end":1101,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":42383,"byte_end":42388,"line_start":1108,"line_end":1108,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":44002,"byte_end":44007,"line_start":48,"line_end":48,"column_start":44,"column_end":49},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":291},"to":{"krate":2,"index":1601}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":44188,"byte_end":44194,"line_start":55,"line_end":55,"column_start":44,"column_end":50},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":1596}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":44376,"byte_end":44382,"line_start":62,"line_end":62,"column_start":44,"column_end":50},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":1601}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":44544,"byte_end":44550,"line_start":69,"line_end":69,"column_start":24,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":1606}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":44880,"byte_end":44886,"line_start":83,"line_end":83,"column_start":24,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":1606}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":45216,"byte_end":45222,"line_start":97,"line_end":97,"column_start":24,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":1611}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":45552,"byte_end":45558,"line_start":111,"line_end":111,"column_start":24,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":1611}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":45919,"byte_end":45924,"line_start":125,"line_end":125,"column_start":55,"column_end":60},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":291},"to":{"krate":2,"index":1596}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":46114,"byte_end":46119,"line_start":132,"line_end":132,"column_start":55,"column_end":60},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":291},"to":{"krate":2,"index":1601}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":46308,"byte_end":46314,"line_start":139,"line_end":139,"column_start":54,"column_end":60},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":1596}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":47097,"byte_end":47101,"line_start":165,"line_end":165,"column_start":38,"column_end":42},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":47612,"byte_end":47616,"line_start":187,"line_end":187,"column_start":27,"column_end":31},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":379},"to":{"krate":0,"index":62}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":48016,"byte_end":48021,"line_start":206,"line_end":206,"column_start":27,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":62}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":49299,"byte_end":49304,"line_start":244,"line_end":244,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":73}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":49515,"byte_end":49520,"line_start":252,"line_end":252,"column_start":14,"column_end":19},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":73}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":49981,"byte_end":49985,"line_start":269,"line_end":269,"column_start":14,"column_end":18},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":379},"to":{"krate":0,"index":73}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\geometry.rs","byte_start":50881,"byte_end":50902,"line_start":306,"line_end":306,"column_start":6,"column_end":27},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\rasterizer.rs","byte_start":52618,"byte_end":52623,"line_start":10,"line_end":10,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":94}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\rasterizer.rs","byte_start":53013,"byte_end":53026,"line_start":28,"line_end":28,"column_start":19,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\rasterizer.rs","byte_start":54178,"byte_end":54182,"line_start":65,"line_end":65,"column_start":18,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":379},"to":{"krate":0,"index":94}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\rasterizer.rs","byte_start":54954,"byte_end":54968,"line_start":101,"line_end":101,"column_start":19,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":109},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\rasterizer.rs","byte_start":58038,"byte_end":58043,"line_start":188,"line_end":188,"column_start":18,"column_end":23},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":94}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":6869,"byte_end":6873,"line_start":159,"line_end":159,"column_start":21,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":509},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":7588,"byte_end":7599,"line_start":180,"line_end":180,"column_start":31,"column_end":42},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":515},"to":{"krate":2,"index":1704}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":7998,"byte_end":8009,"line_start":195,"line_end":195,"column_start":29,"column_end":40},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":515},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":8354,"byte_end":8365,"line_start":207,"line_end":207,"column_start":26,"column_end":37},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":515},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":8690,"byte_end":8701,"line_start":218,"line_end":218,"column_start":26,"column_end":37},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":515},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":9013,"byte_end":9024,"line_start":229,"line_end":229,"column_start":24,"column_end":35},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":515},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":9355,"byte_end":9366,"line_start":240,"line_end":240,"column_start":42,"column_end":53},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":515},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":10361,"byte_end":10366,"line_start":266,"line_end":266,"column_start":21,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":581},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":12140,"byte_end":12148,"line_start":314,"line_end":314,"column_start":29,"column_end":37},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":629},"to":{"krate":2,"index":2258}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":12374,"byte_end":12382,"line_start":324,"line_end":324,"column_start":30,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":629},"to":{"krate":2,"index":1606}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":12876,"byte_end":12887,"line_start":345,"line_end":345,"column_start":21,"column_end":32},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":656},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":13429,"byte_end":13444,"line_start":364,"line_end":364,"column_start":21,"column_end":36},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":664},"to":{"krate":2,"index":7643}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":14315,"byte_end":14320,"line_start":388,"line_end":388,"column_start":6,"column_end":11},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":15122,"byte_end":15131,"line_start":411,"line_end":411,"column_start":22,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":529},"to":{"krate":0,"index":182}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":15272,"byte_end":15279,"line_start":416,"line_end":416,"column_start":22,"column_end":29},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":555},"to":{"krate":0,"index":182}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":15384,"byte_end":15398,"line_start":422,"line_end":422,"column_start":10,"column_end":24},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":18661,"byte_end":18674,"line_start":492,"line_end":492,"column_start":23,"column_end":36},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":197},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":19000,"byte_end":19004,"line_start":503,"line_end":503,"column_start":10,"column_end":14},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":24819,"byte_end":24828,"line_start":645,"line_end":645,"column_start":40,"column_end":49},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":694},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":25231,"byte_end":25241,"line_start":663,"line_end":663,"column_start":27,"column_end":37},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":705},"to":{"krate":2,"index":3653}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":25810,"byte_end":25815,"line_start":678,"line_end":678,"column_start":10,"column_end":15},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":29413,"byte_end":29424,"line_start":769,"line_end":769,"column_start":10,"column_end":21},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":36017,"byte_end":36032,"line_start":930,"line_end":930,"column_start":10,"column_end":25},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":41503,"byte_end":41508,"line_start":1079,"line_end":1079,"column_start":6,"column_end":11},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":42039,"byte_end":42044,"line_start":1094,"line_end":1094,"column_start":23,"column_end":28},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":736},"to":{"krate":2,"index":7648}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":42235,"byte_end":42240,"line_start":1101,"line_end":1101,"column_start":28,"column_end":33},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":736},"to":{"krate":1,"index":1616}},{"span":{"file_name":"C:\\Users\\MyeongJun\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusttype-0.8.3\\src\\lib.rs","byte_start":42383,"byte_end":42388,"line_start":1108,"line_end":1108,"column_start":45,"column_end":50},"kind":{"Impl":{"id":51}},"from":{"krate":1,"index":2469},"to":{"krate":2,"index":2258}}]}